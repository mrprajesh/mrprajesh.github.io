{
    "version": "https://jsonfeed.org/version/1",
    "title": "Rajesh&apos;s Blog",
    "home_page_url": "https://mrprajesh.co.in/blog/",
    "feed_url": "https://mrprajesh.co.in/blog/feed.json",
    "description": "Writing down my random thoughts",
    "icon": "https://mrprajesh.co.in/blog/apple-touch-icon.png",
    "favicon": "https://mrprajesh.co.in/blog/favicon.ico",
    "expired": false,
    
    "author":  {
        "name": "Rajesh Pandian M",
        "url": null,
        "avatar": null
    },
    
"items": [
    
        {
            "id": "https://mrprajesh.co.in/blog/install-go-lang.html",
            "title": "Installing and Hello World Go Lang!",
            "summary": null,
            "content_text": "//~~START:Fri, 12-Apr-2024, 00:31:43 IST//~~AuTHoR:Rajesh Pandian M | mrprajesh.co.in#include &lt;bits/stdc++.h&gt; using namespace std;  int main(int argc, char *argv[])  {   printf(\"Hello There!\");_  return 0; } # GO TO https://go.dev/dl/ find the stable AMD BINARY. Not ARM!? :Dwget https://go.dev/dl/go1.22.2.linux-amd64.tar.gz# Extracted to my $HOME/installtar -xzf go1.22.2.linux-amd64.tar.gz# Add it to path ~/.bashrcexport PATH=$PATH:$HOME/install/go/bin# ctrl+Tgo version&gt;go version go1.22.2 linux/amd64# File contents$ cat helloGo.gopackage mainimport \"fmt\"func main() {  fmt.Println(\"Hello World Rajz!\")}# to compilego build helloGo.go# to run./helloGoHello World Rajz!Some other housekeeping# gopls cribbing on vim with error# vim-go: could not find 'gopls'. Run :GoInstallBinaries to fix itgo install golang.org/x/tools/gopls@latest",
            "content_html": "<div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">//~~START:Fri, 12-Apr-2024, 00:31:43 IST</span><span class=\"c1\">//~~AuTHoR:Rajesh Pandian M | mrprajesh.co.in</span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;bits/stdc++.h&gt;</span><span class=\"c1\"> </span><span class=\"cp\"></span><span class=\"n\">using</span> <span class=\"n\">namespace</span> <span class=\"n\">std</span><span class=\"p\">;</span>  <span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">argc</span><span class=\"p\">,</span> <span class=\"kt\">char</span> <span class=\"o\">*</span><span class=\"n\">argv</span><span class=\"p\">[])</span>  <span class=\"p\">{</span>   <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Hello There!\"</span><span class=\"p\">);</span><span class=\"n\">_</span>  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"p\">}</span> <span class=\"cp\"># GO TO https://go.dev/dl/ find the stable AMD BINARY. Not ARM!? :D</span><span class=\"n\">wget</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//go.dev/dl/go1.22.2.linux-amd64.tar.gz</span><span class=\"cp\"># Extracted to my $HOME/install</span><span class=\"n\">tar</span> <span class=\"o\">-</span><span class=\"n\">xzf</span> <span class=\"n\">go1</span><span class=\"p\">.</span><span class=\"mi\">22</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"p\">.</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">amd64</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">.</span><span class=\"n\">gz</span><span class=\"cp\"># Add it to path ~/.bashrc</span><span class=\"n\">export</span> <span class=\"n\">PATH</span><span class=\"o\">=</span><span class=\"err\">$</span><span class=\"n\">PATH</span><span class=\"o\">:</span><span class=\"err\">$</span><span class=\"n\">HOME</span><span class=\"o\">/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">go</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"cp\"># ctrl+T</span><span class=\"n\">go</span> <span class=\"n\">version</span><span class=\"o\">&gt;</span><span class=\"n\">go</span> <span class=\"n\">version</span> <span class=\"n\">go1</span><span class=\"p\">.</span><span class=\"mi\">22</span><span class=\"p\">.</span><span class=\"mi\">2</span> <span class=\"n\">linux</span><span class=\"o\">/</span><span class=\"n\">amd64</span><span class=\"cp\"># File contents</span><span class=\"err\">$</span> <span class=\"n\">cat</span> <span class=\"n\">helloGo</span><span class=\"p\">.</span><span class=\"n\">go</span><span class=\"n\">package</span> <span class=\"n\">main</span><span class=\"n\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"n\">func</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>  <span class=\"n\">fmt</span><span class=\"p\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"Hello World Rajz!\"</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"cp\"># to compile</span><span class=\"n\">go</span> <span class=\"n\">build</span> <span class=\"n\">helloGo</span><span class=\"p\">.</span><span class=\"n\">go</span><span class=\"cp\"># to run</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">helloGo</span><span class=\"n\">Hello</span> <span class=\"n\">World</span> <span class=\"n\">Rajz</span><span class=\"o\">!</span></code></pre></div></div><p>Some other housekeeping</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\"># gopls cribbing on vim with error</span><span class=\"c\"># vim-go: could not find 'gopls'. Run :GoInstallBinaries to fix it</span>go <span class=\"nb\">install </span>golang.org/x/tools/gopls@latest</code></pre></div></div>",
            "url": "https://mrprajesh.co.in/blog/install-go-lang.html",
            
            
            
            "tags": ["go","golang"],
            
            "date_published": "2024-04-11T04:59:46+05:30",
            "date_modified": "2024-04-11T04:59:46+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/tinkering-vulkan.html",
            "title": "Tinkering With HelloWorld Vulkan!",
            "summary": null,
            "content_text": "While I could have installed a vulkan SDK with just one apt get install vulkan-sdk command from the terminal, I somehow went for build from the source.# https://vulkan.lunarg.com/doc/view/latest/linux/getting_started_ubuntu.html#ubuntu-2204-jammy-jellyfishwget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.ascsudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list http://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.listsudo apt updatesudo apt install vulkan-sdk## TO VERIFYvkviavulkaninfovkcube## had to do this sudo apt-get install libxrandr-dev python-is-python3 libwayland-dev  xorg-dev# MINE WAS LINUX MINT SO KIND OF HACKED SCRIPT TO MAKE WORK FROM UBUNTU 22.04sudo apt-get install libglm-dev cmake libxcb-dri3-0 libxcb-present0 libpciaccess0 \\             libpng-dev libxcb-keysyms1-dev libxcb-dri3-dev libx11-dev g++ gcc \\             libwayland-dev libxrandr-dev libxcb-randr0-dev libxcb-ewmh-dev \\             git python-is-python3 bison libx11-xcb-dev liblz4-dev libzstd-dev python3-distutils \\             ocaml-core ninja-build pkg-config libxml2-dev wayland-protocols python3-jsonschema sudo apt-get install libglfw3-dev  $ cat main.cpp #define GLFW_INCLUDE_VULKAN#include &lt;GLFW/glfw3.h&gt;#include &lt;iostream&gt;int main() {    glfwInit();    glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);    GLFWwindow* window = glfwCreateWindow(800, 600, \"Vulkan Hello World\", nullptr, nullptr);    uint32_t extensionCount = 0;    vkEnumerateInstanceExtensionProperties(nullptr, &amp;extensionCount, nullptr);    std::cout &lt;&lt; \"Vulkan Extensions Count: \" &lt;&lt; extensionCount &lt;&lt; std::endl;    while (!glfwWindowShouldClose(window)) {        glfwPollEvents();    }    glfwDestroyWindow(window);    glfwTerminate();    return 0;}$ cat CMakeLists.txt cmake_minimum_required(VERSION 3.10)project(VulkanHelloWorld)find_package(Vulkan REQUIRED)find_package(glfw3 REQUIRED)add_executable(VulkanHelloWorld main.cpp)target_link_libraries(VulkanHelloWorld Vulkan::Vulkan glfw)   mkdir build cmake .. -- The C compiler identification is GNU 11.4.0-- The CXX compiler identification is GNU 11.4.0-- Detecting C compiler ABI info-- Detecting C compiler ABI info - done-- Check for working C compiler: /usr/bin/cc - skipped-- Detecting C compile features-- Detecting C compile features - done-- Detecting CXX compiler ABI info-- Detecting CXX compiler ABI info - done-- Check for working CXX compiler: /usr/bin/c++ - skipped-- Detecting CXX compile features-- Detecting CXX compile features - done-- Found Vulkan: /usr/lib/x86_64-linux-gnu/libvulkan.so (found version \"1.3.280\") found components: glslc glslangValidator -- Configuring done (0.2s)-- Generating done (0.0s)-- Build files have been written to: /home/rajesh/hellovulkan/build make[ 50%] Building CXX object CMakeFiles/VulkanHelloWorld.dir/main.cpp.o[100%] Linking CXX executable VulkanHelloWorld[100%] Built target VulkanHelloWorld./VulkanHelloWorld",
            "content_html": "<p>While I could have installed a vulkan SDK with just one <code class=\"language-plaintext highlighter-rouge\">apt get install vulkan-sdk</code> command from the terminal, I somehow went for build from the <a href=\"https://vulkan.lunarg.com/sdk/home\">source</a>.</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\"># https://vulkan.lunarg.com/doc/view/latest/linux/getting_started_ubuntu.html#ubuntu-2204-jammy-jellyfish</span>wget <span class=\"nt\">-qO-</span> https://packages.lunarg.com/lunarg-signing-key-pub.asc | <span class=\"nb\">sudo tee</span> /etc/apt/trusted.gpg.d/lunarg.asc<span class=\"nb\">sudo </span>wget <span class=\"nt\">-qO</span> /etc/apt/sources.list.d/lunarg-vulkan-jammy.list http://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list<span class=\"nb\">sudo </span>apt update<span class=\"nb\">sudo </span>apt <span class=\"nb\">install </span>vulkan-sdk<span class=\"c\">## TO VERIFY</span>vkviavulkaninfovkcube<span class=\"c\">## had to do this </span><span class=\"nb\">sudo </span>apt-get <span class=\"nb\">install </span>libxrandr-dev python-is-python3 libwayland-dev  xorg-dev<span class=\"c\"># MINE WAS LINUX MINT SO KIND OF HACKED SCRIPT TO MAKE WORK FROM UBUNTU 22.04</span><span class=\"nb\">sudo </span>apt-get <span class=\"nb\">install </span>libglm-dev cmake libxcb-dri3-0 libxcb-present0 libpciaccess0 <span class=\"se\">\\</span>             libpng-dev libxcb-keysyms1-dev libxcb-dri3-dev libx11-dev g++ gcc <span class=\"se\">\\</span>             libwayland-dev libxrandr-dev libxcb-randr0-dev libxcb-ewmh-dev <span class=\"se\">\\</span>             git python-is-python3 bison libx11-xcb-dev liblz4-dev libzstd-dev python3-distutils <span class=\"se\">\\</span>             ocaml-core ninja-build pkg-config libxml2-dev wayland-protocols python3-jsonschema <span class=\"nb\">sudo </span>apt-get <span class=\"nb\">install </span>libglfw3-dev  <span class=\"nv\">$ </span><span class=\"nb\">cat </span>main.cpp <span class=\"c\">#define GLFW_INCLUDE_VULKAN</span><span class=\"c\">#include &lt;GLFW/glfw3.h&gt;</span><span class=\"c\">#include &lt;iostream&gt;</span>int main<span class=\"o\">()</span> <span class=\"o\">{</span>    glfwInit<span class=\"o\">()</span><span class=\"p\">;</span>    glfwWindowHint<span class=\"o\">(</span>GLFW_CLIENT_API, GLFW_NO_API<span class=\"o\">)</span><span class=\"p\">;</span>    GLFWwindow<span class=\"k\">*</span> window <span class=\"o\">=</span> glfwCreateWindow<span class=\"o\">(</span>800, 600, <span class=\"s2\">\"Vulkan Hello World\"</span>, nullptr, nullptr<span class=\"o\">)</span><span class=\"p\">;</span>    uint32_t extensionCount <span class=\"o\">=</span> 0<span class=\"p\">;</span>    vkEnumerateInstanceExtensionProperties<span class=\"o\">(</span>nullptr, &amp;extensionCount, nullptr<span class=\"o\">)</span><span class=\"p\">;</span>    std::cout &lt;&lt; <span class=\"s2\">\"Vulkan Extensions Count: \"</span> <span class=\"o\">&lt;&lt;</span> <span class=\"no\">extensionCount</span><span class=\"sh\"> &lt;&lt; std::endl;    while (!glfwWindowShouldClose(window)) {        glfwPollEvents();    }    glfwDestroyWindow(window);    glfwTerminate();    return 0;}</span><span class=\"nv\">$ </span><span class=\"sh\">cat CMakeLists.txt cmake_minimum_required(VERSION 3.10)project(VulkanHelloWorld)find_package(Vulkan REQUIRED)find_package(glfw3 REQUIRED)add_executable(VulkanHelloWorld main.cpp)target_link_libraries(VulkanHelloWorld Vulkan::Vulkan glfw)   mkdir build cmake .. -- The C compiler identification is GNU 11.4.0-- The CXX compiler identification is GNU 11.4.0-- Detecting C compiler ABI info-- Detecting C compiler ABI info - done-- Check for working C compiler: /usr/bin/cc - skipped-- Detecting C compile features-- Detecting C compile features - done-- Detecting CXX compiler ABI info-- Detecting CXX compiler ABI info - done-- Check for working CXX compiler: /usr/bin/c++ - skipped-- Detecting CXX compile features-- Detecting CXX compile features - done-- Found Vulkan: /usr/lib/x86_64-linux-gnu/libvulkan.so (found version \"1.3.280\") found components: glslc glslangValidator -- Configuring done (0.2s)-- Generating done (0.0s)-- Build files have been written to: /home/rajesh/hellovulkan/build make[ 50%] Building CXX object CMakeFiles/VulkanHelloWorld.dir/main.cpp.o[100%] Linking CXX executable VulkanHelloWorld[100%] Built target VulkanHelloWorld./VulkanHelloWorld</span></code></pre></div></div>",
            "url": "https://mrprajesh.co.in/blog/tinkering-vulkan.html",
            
            
            
            
            
            "date_published": "2024-04-11T01:01:31+05:30",
            "date_modified": "2024-04-11T01:01:31+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/geany-snippets.html",
            "title": "Geany snippets",
            "summary": null,
            "content_text": "I love Geany for its simplicity and fast editors. Most of all because of them awesome snippets.Some of my snippets for later reference.[Default]c=//~~START:{command: date +'%a, %d-%b-%Y, %T %Z'}\\n//~~AuTHoR:Rajesh Pandian M | mrprajesh.co.in\\n#include &lt;bits/stdc++.h&gt; \\nusing namespace std; \\n \\nint main(int argc, char *argv[])  { \\n\tprintf(\"Hello There!\");%cursor%\\n\treturn 0; \\n} \\ncpp=//~~START:{command: date +'%a, %d-%b-%Y, %T %Z'}\\n//~~AuTHoR:Rajesh Pandian M | mrprajesh.co.in\\n#include &lt;bits/stdc++.h&gt; \\nusing namespace std; \\n \\nint main(int argc, char *argv[])  { \\n\tcout &lt;&lt; \"Hello There %cursor%\" &lt;&lt; endl;\\n\treturn 0; \\n} \\ncu=//~~START:{command: date +\"%a, %d-%b-%Y, %T %Z\"}\\n//~~AuTHoR:Rajesh Pandian M | mrprajesh.co.in\\n#include &lt;stdio.h&gt;\\n#include &lt;cuda.h&gt;\\n#include &lt;iostream&gt;\\n__global__ void k(){\\n\tprintf(\"hello %u!\\\\n\", threadIdx.x);\\n}\\nint main(int argc, char *argv[]){\\n\tk&lt;&lt;&lt;2,32&gt;&gt;&gt;();\\n\tcudaDeviceSynchronize();\\n\treturn 0;\\n}\\nurl=[%cursor%]()printme=void printme(const Container &amp;data){\\n  std::copy(data.begin(),\\n    data.end(),\\n    std::ostream_iterator&lt;typename Container::value_type&gt;(std::cout, \" \"));\\n  std::cout &lt;&lt; '\\\\n';\\n}cout=std::cout&lt;&lt; \"%cursor%\" &lt;&lt; std::endl;cum=cudaMalloc(&amp;d%cursor, n*sizeof(int));h2d=cudaMemcpy(dest,src,sizeof(int)*%cursor%n,cudaMemcpyHostToDevice);d2h=cudaMemcpy(dest,src,sizeof(int)*%cursor%n,cudaMemcpyDeviceToHost);cds=cudaDeviceSynchronize();",
            "content_html": "<p>I love Geany for its simplicity and fast editors. Most of all because of them awesome snippets.Some of my snippets for later reference.</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">[</span>Default]<span class=\"nv\">c</span><span class=\"o\">=</span>//~~START:<span class=\"o\">{</span><span class=\"nb\">command</span>: <span class=\"nb\">date</span> +<span class=\"s1\">'%a, %d-%b-%Y, %T %Z'</span><span class=\"o\">}</span><span class=\"se\">\\n</span>//~~AuTHoR:Rajesh Pandian M | mrprajesh.co.in<span class=\"se\">\\n</span><span class=\"c\">#include &lt;bits/stdc++.h&gt; \\nusing namespace std; \\n \\nint main(int argc, char *argv[])  { \\n\tprintf(\"Hello There!\");%cursor%\\n\treturn 0; \\n} \\n</span><span class=\"nv\">cpp</span><span class=\"o\">=</span>//~~START:<span class=\"o\">{</span><span class=\"nb\">command</span>: <span class=\"nb\">date</span> +<span class=\"s1\">'%a, %d-%b-%Y, %T %Z'</span><span class=\"o\">}</span><span class=\"se\">\\n</span>//~~AuTHoR:Rajesh Pandian M | mrprajesh.co.in<span class=\"se\">\\n</span><span class=\"c\">#include &lt;bits/stdc++.h&gt; \\nusing namespace std; \\n \\nint main(int argc, char *argv[])  { \\n\tcout &lt;&lt; \"Hello There %cursor%\" &lt;&lt; endl;\\n\treturn 0; \\n} \\n</span><span class=\"nv\">cu</span><span class=\"o\">=</span>//~~START:<span class=\"o\">{</span><span class=\"nb\">command</span>: <span class=\"nb\">date</span> +<span class=\"s2\">\"%a, %d-%b-%Y, %T %Z\"</span><span class=\"o\">}</span><span class=\"se\">\\n</span>//~~AuTHoR:Rajesh Pandian M | mrprajesh.co.in<span class=\"se\">\\n</span><span class=\"c\">#include &lt;stdio.h&gt;\\n#include &lt;cuda.h&gt;\\n#include &lt;iostream&gt;\\n__global__ void k(){\\n\tprintf(\"hello %u!\\\\n\", threadIdx.x);\\n}\\nint main(int argc, char *argv[]){\\n\tk&lt;&lt;&lt;2,32&gt;&gt;&gt;();\\n\tcudaDeviceSynchronize();\\n\treturn 0;\\n}\\n</span><span class=\"nv\">url</span><span class=\"o\">=[</span>%cursor%]<span class=\"o\">()</span><span class=\"nv\">printme</span><span class=\"o\">=</span>void printme<span class=\"o\">(</span>const Container &amp;data<span class=\"o\">){</span><span class=\"se\">\\n</span>  std::copy<span class=\"o\">(</span>data.begin<span class=\"o\">()</span>,<span class=\"se\">\\n</span>    data.end<span class=\"o\">()</span>,<span class=\"se\">\\n</span>    std::ostream_iterator&lt;typename Container::value_type&gt;<span class=\"o\">(</span>std::cout, <span class=\"s2\">\" \"</span><span class=\"o\">))</span><span class=\"p\">;</span><span class=\"se\">\\n</span>  std::cout &lt;&lt; <span class=\"s1\">'\\\\n'</span><span class=\"p\">;</span><span class=\"se\">\\n</span><span class=\"o\">}</span><span class=\"nv\">cout</span><span class=\"o\">=</span>std::cout&lt;&lt; <span class=\"s2\">\"%cursor%\"</span> <span class=\"o\">&lt;&lt;</span> <span class=\"no\">std</span><span class=\"sh\">::endl;cum=cudaMalloc(&amp;d%cursor, n*sizeof(int));h2d=cudaMemcpy(dest,src,sizeof(int)*%cursor%n,cudaMemcpyHostToDevice);d2h=cudaMemcpy(dest,src,sizeof(int)*%cursor%n,cudaMemcpyDeviceToHost);cds=cudaDeviceSynchronize();</span></code></pre></div></div>",
            "url": "https://mrprajesh.co.in/blog/geany-snippets.html",
            
            
            
            "tags": ["geany","snippets"],
            
            "date_published": "2024-04-10T00:58:37+05:30",
            "date_modified": "2024-04-10T00:58:37+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/debug-cuda-sudo.html",
            "title": "Troubleshoot Profiling of CUDA Programs using nsight Compute",
            "summary": null,
            "content_text": "# Add a confsudo vim /etc/modprobe.d/debug-cuda-gpu.confoptions nvidia NVreg_RestrictProfilingToAdminUsers=0 # update and reboot sudo update-initramfs -u -k allreboot# open nsight compute using sudo sudo /usr/local/cuda/bin/ncu-uiError before fixing!Launched process: ncu (pid: 112990)/usr/local/cuda-12.2/nsight-compute-2023.2.2/target/linux-desktop-glibc_2_11_3-x64/ncu --config-file off --export /home/rajesh/learn/saxpy/a.cu.profile --force-overwrite --set full /home/rajesh/learn/saxpy/axplusy.outLaunch succeeded.Profiling...==PROF== Connected to process 113001 (/home/rajesh/learn/saxpy/axplusy.out)==ERROR== ERR_NVGPUCTRPERM - The user does not have permission to access NVIDIA GPU Performance Counters on the target device 0. For instructions on enabling permissions and to get more information see https://developer.nvidia.com/ERR_NVGPUCTRPERM==PROF== Disconnected from process 113001==WARNING== No kernels were profiled.==WARNING== Profiling kernels launched by child processes requires the --target-processes all option.Process terminated.",
            "content_html": "<div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\"># Add a conf</span><span class=\"n\">sudo</span> <span class=\"n\">vim</span> <span class=\"o\">/</span><span class=\"n\">etc</span><span class=\"o\">/</span><span class=\"n\">modprobe</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">-</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"n\">gpu</span><span class=\"p\">.</span><span class=\"n\">conf</span><span class=\"n\">options</span> <span class=\"n\">nvidia</span> <span class=\"n\">NVreg_RestrictProfilingToAdminUsers</span><span class=\"o\">=</span><span class=\"mi\">0</span> <span class=\"cp\"># update and reboot </span><span class=\"n\">sudo</span> <span class=\"n\">update</span><span class=\"o\">-</span><span class=\"n\">initramfs</span> <span class=\"o\">-</span><span class=\"n\">u</span> <span class=\"o\">-</span><span class=\"n\">k</span> <span class=\"n\">all</span><span class=\"n\">reboot</span><span class=\"cp\"># open nsight compute using sudo </span><span class=\"n\">sudo</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">ncu</span><span class=\"o\">-</span><span class=\"n\">ui</span></code></pre></div></div><h2 id=\"error-before-fixing\">Error before fixing!</h2><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">Launched</span> <span class=\"n\">process</span><span class=\"o\">:</span> <span class=\"n\">ncu</span> <span class=\"p\">(</span><span class=\"n\">pid</span><span class=\"o\">:</span> <span class=\"mi\">112990</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"o\">/</span><span class=\"n\">nsight</span><span class=\"o\">-</span><span class=\"n\">compute</span><span class=\"o\">-</span><span class=\"mi\">2023</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">desktop</span><span class=\"o\">-</span><span class=\"n\">glibc_2_11_3</span><span class=\"o\">-</span><span class=\"n\">x64</span><span class=\"o\">/</span><span class=\"n\">ncu</span> <span class=\"o\">--</span><span class=\"n\">config</span><span class=\"o\">-</span><span class=\"n\">file</span> <span class=\"n\">off</span> <span class=\"o\">--</span><span class=\"n\">export</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">learn</span><span class=\"o\">/</span><span class=\"n\">saxpy</span><span class=\"o\">/</span><span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">cu</span><span class=\"p\">.</span><span class=\"n\">profile</span> <span class=\"o\">--</span><span class=\"n\">force</span><span class=\"o\">-</span><span class=\"n\">overwrite</span> <span class=\"o\">--</span><span class=\"n\">set</span> <span class=\"n\">full</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">learn</span><span class=\"o\">/</span><span class=\"n\">saxpy</span><span class=\"o\">/</span><span class=\"n\">axplusy</span><span class=\"p\">.</span><span class=\"n\">out</span><span class=\"n\">Launch</span> <span class=\"n\">succeeded</span><span class=\"p\">.</span><span class=\"n\">Profiling</span><span class=\"p\">...</span><span class=\"o\">==</span><span class=\"n\">PROF</span><span class=\"o\">==</span> <span class=\"n\">Connected</span> <span class=\"n\">to</span> <span class=\"n\">process</span> <span class=\"mi\">113001</span> <span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">learn</span><span class=\"o\">/</span><span class=\"n\">saxpy</span><span class=\"o\">/</span><span class=\"n\">axplusy</span><span class=\"p\">.</span><span class=\"n\">out</span><span class=\"p\">)</span><span class=\"o\">==</span><span class=\"n\">ERROR</span><span class=\"o\">==</span> <span class=\"n\">ERR_NVGPUCTRPERM</span> <span class=\"o\">-</span> <span class=\"n\">The</span> <span class=\"n\">user</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"n\">have</span> <span class=\"n\">permission</span> <span class=\"n\">to</span> <span class=\"n\">access</span> <span class=\"n\">NVIDIA</span> <span class=\"n\">GPU</span> <span class=\"n\">Performance</span> <span class=\"n\">Counters</span> <span class=\"n\">on</span> <span class=\"n\">the</span> <span class=\"n\">target</span> <span class=\"n\">device</span> <span class=\"mi\">0</span><span class=\"p\">.</span> <span class=\"n\">For</span> <span class=\"n\">instructions</span> <span class=\"n\">on</span> <span class=\"n\">enabling</span> <span class=\"n\">permissions</span> <span class=\"n\">and</span> <span class=\"n\">to</span> <span class=\"n\">get</span> <span class=\"n\">more</span> <span class=\"n\">information</span> <span class=\"n\">see</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//developer.nvidia.com/ERR_NVGPUCTRPERM</span><span class=\"o\">==</span><span class=\"n\">PROF</span><span class=\"o\">==</span> <span class=\"n\">Disconnected</span> <span class=\"n\">from</span> <span class=\"n\">process</span> <span class=\"mi\">113001</span><span class=\"o\">==</span><span class=\"n\">WARNING</span><span class=\"o\">==</span> <span class=\"n\">No</span> <span class=\"n\">kernels</span> <span class=\"n\">were</span> <span class=\"n\">profiled</span><span class=\"p\">.</span><span class=\"o\">==</span><span class=\"n\">WARNING</span><span class=\"o\">==</span> <span class=\"n\">Profiling</span> <span class=\"n\">kernels</span> <span class=\"n\">launched</span> <span class=\"n\">by</span> <span class=\"n\">child</span> <span class=\"n\">processes</span> <span class=\"n\">requires</span> <span class=\"n\">the</span> <span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">-</span><span class=\"n\">processes</span> <span class=\"n\">all</span> <span class=\"n\">option</span><span class=\"p\">.</span><span class=\"n\">Process</span> <span class=\"n\">terminated</span><span class=\"p\">.</span></code></pre></div></div>",
            "url": "https://mrprajesh.co.in/blog/debug-cuda-sudo.html",
            
            
            
            "tags": ["cuda","debug","compute"],
            
            "date_published": "2024-03-19T20:31:18+05:30",
            "date_modified": "2024-03-19T20:31:18+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/clang-on-gpu.html",
            "title": "CUDA clang running on GPU",
            "summary": null,
            "content_text": "After gaining a lot of insights from a CppCon 2016 talk Bringing Clang and C++ to GPUs Idecided to try clang code to run on GPU using  the CUDA Clang docs  Use clang 17 (or 16 should work as well!)  Installation of CUDA toolkit is assumed. Have drivers and a GPU  file .cu \t\t-&gt; .ptx \t-&gt;  .out  clang -&gt; ptxas -&gt; sass -&gt; execlang 14 ## did not work with Cuda 12.2 nor 11.8clang-15 ## NOT WORKING // sudo apt install clang-15 clang-17 ## OK GOOD. https://ubuntuhandbook.org/index.php/2023/09/how-to-install-clang-17-or-16-in-ubuntu-22-04-20-04/## STIL did not work? Nope! It worked## nativeclang++-17 axpy.cu -o axpy.out --cuda-gpu-arch=sm_86 -L/usr/local/cuda-12.2/lib64 -lcudart_static -ldl -lrt -pthread ## and from HPC tool kit also. Ignore the warining.clang++-17 axpy.cu -o axpy.out --cuda-gpu-arch=sm_86 -L/opt/nvidia/hpc_sdk/Linux_x86_64/24.3/cuda/11.8/lib64 -lcudart_static -ldl -lrt -pthread./axpy.outy[0] = 2y[1] = 4y[2] = 6y[3] = 8Errors before fixing it!/usr/lib/llvm-15/lib/clang/15.0.7/include/__clang_cuda_texture_intrinsics.h:696:13: error: no template named 'texture'            texture&lt;__DataT, __TexT, cudaReadModeNormalizedFloat&gt; __handle,            ^/usr/lib/llvm-15/lib/clang/15.0.7/include/__clang_cuda_texture_intrinsics.h:709:13: error: no template named 'texture'            texture&lt;__DataT, __TexT, cudaReadModeElementType&gt; __handle,            ^2 errors generated when compiling for sm_86.",
            "content_html": "<p>After gaining a lot of insights from a CppCon 2016 talk <a href=\"https://youtu.be/KHa-OSrZPGo?si=852XDhqzVIsLBqme\">Bringing Clang and C++ to GPUs</a> Idecided to try clang code to run on GPU using  the <a href=\"https://llvm.org/docs/CompileCudaWithLLVM.html\">CUDA Clang docs</a></p><ol>  <li>Use clang 17 (or 16 should work as well!)</li>  <li>Installation of CUDA toolkit is assumed. Have drivers and a GPU</li>  <li>file .cu \t\t-&gt; .ptx \t-&gt;  .out</li>  <li>clang -&gt; ptxas -&gt; sass -&gt; exe</li></ol><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">clang</span> <span class=\"mi\">14</span> <span class=\"err\">##</span> <span class=\"n\">did</span> <span class=\"n\">not</span> <span class=\"n\">work</span> <span class=\"n\">with</span> <span class=\"n\">Cuda</span> <span class=\"mi\">12</span><span class=\"p\">.</span><span class=\"mi\">2</span> <span class=\"n\">nor</span> <span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">8</span><span class=\"n\">clang</span><span class=\"o\">-</span><span class=\"mi\">15</span> <span class=\"err\">##</span> <span class=\"n\">NOT</span> <span class=\"n\">WORKING</span> <span class=\"c1\">// sudo apt install clang-15 </span><span class=\"n\">clang</span><span class=\"o\">-</span><span class=\"mi\">17</span> <span class=\"err\">##</span> <span class=\"n\">OK</span> <span class=\"n\">GOOD</span><span class=\"p\">.</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//ubuntuhandbook.org/index.php/2023/09/how-to-install-clang-17-or-16-in-ubuntu-22-04-20-04/</span><span class=\"cp\">## STIL did not work? Nope! It worked## native</span><span class=\"n\">clang</span><span class=\"o\">++-</span><span class=\"mi\">17</span> <span class=\"n\">axpy</span><span class=\"p\">.</span><span class=\"n\">cu</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">axpy</span><span class=\"p\">.</span><span class=\"n\">out</span> <span class=\"o\">--</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"n\">gpu</span><span class=\"o\">-</span><span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">sm_86</span> <span class=\"o\">-</span><span class=\"n\">L</span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"o\">/</span><span class=\"n\">lib64</span> <span class=\"o\">-</span><span class=\"n\">lcudart_static</span> <span class=\"o\">-</span><span class=\"n\">ldl</span> <span class=\"o\">-</span><span class=\"n\">lrt</span> <span class=\"o\">-</span><span class=\"n\">pthread</span> <span class=\"cp\">## and from HPC tool kit also. Ignore the warining.</span><span class=\"n\">clang</span><span class=\"o\">++-</span><span class=\"mi\">17</span> <span class=\"n\">axpy</span><span class=\"p\">.</span><span class=\"n\">cu</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">axpy</span><span class=\"p\">.</span><span class=\"n\">out</span> <span class=\"o\">--</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"n\">gpu</span><span class=\"o\">-</span><span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">sm_86</span> <span class=\"o\">-</span><span class=\"n\">L</span><span class=\"o\">/</span><span class=\"n\">opt</span><span class=\"o\">/</span><span class=\"n\">nvidia</span><span class=\"o\">/</span><span class=\"n\">hpc_sdk</span><span class=\"o\">/</span><span class=\"n\">Linux_x86_64</span><span class=\"o\">/</span><span class=\"mi\">24</span><span class=\"p\">.</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">/</span><span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">lib64</span> <span class=\"o\">-</span><span class=\"n\">lcudart_static</span> <span class=\"o\">-</span><span class=\"n\">ldl</span> <span class=\"o\">-</span><span class=\"n\">lrt</span> <span class=\"o\">-</span><span class=\"n\">pthread</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">axpy</span><span class=\"p\">.</span><span class=\"n\">out</span><span class=\"n\">y</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"n\">y</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">4</span><span class=\"n\">y</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">6</span><span class=\"n\">y</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">8</span></code></pre></div></div><h2 id=\"errors-before-fixing-it\">Errors before fixing it!</h2><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"mi\">15</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"o\">/</span><span class=\"mi\">15</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">__clang_cuda_texture_intrinsics</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"mi\">696</span><span class=\"o\">:</span><span class=\"mi\">13</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">template</span> <span class=\"n\">named</span> <span class=\"err\">'</span><span class=\"n\">texture</span><span class=\"err\">'</span>            <span class=\"n\">texture</span><span class=\"o\">&lt;</span><span class=\"n\">__DataT</span><span class=\"p\">,</span> <span class=\"n\">__TexT</span><span class=\"p\">,</span> <span class=\"n\">cudaReadModeNormalizedFloat</span><span class=\"o\">&gt;</span> <span class=\"n\">__handle</span><span class=\"p\">,</span>            <span class=\"o\">^</span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"mi\">15</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"o\">/</span><span class=\"mi\">15</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">__clang_cuda_texture_intrinsics</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"mi\">709</span><span class=\"o\">:</span><span class=\"mi\">13</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">template</span> <span class=\"n\">named</span> <span class=\"err\">'</span><span class=\"n\">texture</span><span class=\"err\">'</span>            <span class=\"n\">texture</span><span class=\"o\">&lt;</span><span class=\"n\">__DataT</span><span class=\"p\">,</span> <span class=\"n\">__TexT</span><span class=\"p\">,</span> <span class=\"n\">cudaReadModeElementType</span><span class=\"o\">&gt;</span> <span class=\"n\">__handle</span><span class=\"p\">,</span>            <span class=\"o\">^</span><span class=\"mi\">2</span> <span class=\"n\">errors</span> <span class=\"n\">generated</span> <span class=\"n\">when</span> <span class=\"n\">compiling</span> <span class=\"k\">for</span> <span class=\"n\">sm_86</span><span class=\"p\">.</span></code></pre></div></div>",
            "url": "https://mrprajesh.co.in/blog/clang-on-gpu.html",
            
            
            
            "tags": ["cuda","clang","gpu"],
            
            "date_published": "2024-03-19T16:33:36+05:30",
            "date_modified": "2024-03-19T16:33:36+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/git-commit-sign-gpg.html",
            "title": "Git commit signature",
            "summary": null,
            "content_text": "In case you need sign your commit - a verified signature on GitHub commit history. Here it is. I have already added my GPG key to GitHub.# Check GPU key$   gpg --list-secret-keys --keyid-format=long/home/rajesh/.gnupg/pubring.kbx-------------------------------sec   rsa2048/DD95F119EA64BABE 2011-02-11 [SCA]      79B36A390B6A4BBFA103483BDD95F119EA64BABE# Tell Git about your signing key$  git config --global user.signingkey DD95F119EA64BABE# Instruct to sign every commit$  git config --global commit.gpgsign true# Add to startup of terminal$  [ -f ~/.bashrc ] &amp;&amp; echo -e '\\nexport GPG_TTY=$(tty)' &gt;&gt; ~/.bashrcReference  https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key",
            "content_html": "<p>In case you need sign your commit - a verified signature on GitHub commit history. Here it is. I have already added my GPG key to GitHub.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\"># Check GPU key</span><span class=\"err\">$</span>   <span class=\"n\">gpg</span> <span class=\"o\">--</span><span class=\"n\">list</span><span class=\"o\">-</span><span class=\"n\">secret</span><span class=\"o\">-</span><span class=\"n\">keys</span> <span class=\"o\">--</span><span class=\"n\">keyid</span><span class=\"o\">-</span><span class=\"n\">format</span><span class=\"o\">=</span><span class=\"kt\">long</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">gnupg</span><span class=\"o\">/</span><span class=\"n\">pubring</span><span class=\"p\">.</span><span class=\"n\">kbx</span><span class=\"o\">-------------------------------</span><span class=\"n\">sec</span>   <span class=\"n\">rsa2048</span><span class=\"o\">/</span><span class=\"n\">DD95F119EA64BABE</span> <span class=\"mi\">2011</span><span class=\"o\">-</span><span class=\"mo\">02</span><span class=\"o\">-</span><span class=\"mi\">11</span> <span class=\"p\">[</span><span class=\"n\">SCA</span><span class=\"p\">]</span>      <span class=\"mi\">79</span><span class=\"n\">B36A390B6A4BBFA103483BDD95F119EA64BABE</span><span class=\"cp\"># Tell Git about your signing key</span><span class=\"err\">$</span>  <span class=\"n\">git</span> <span class=\"n\">config</span> <span class=\"o\">--</span><span class=\"n\">global</span> <span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">signingkey</span> <span class=\"n\">DD95F119EA64BABE</span><span class=\"cp\"># Instruct to sign every commit</span><span class=\"err\">$</span>  <span class=\"n\">git</span> <span class=\"n\">config</span> <span class=\"o\">--</span><span class=\"n\">global</span> <span class=\"n\">commit</span><span class=\"p\">.</span><span class=\"n\">gpgsign</span> <span class=\"nb\">true</span><span class=\"cp\"># Add to startup of terminal</span><span class=\"err\">$</span>  <span class=\"p\">[</span> <span class=\"o\">-</span><span class=\"n\">f</span> <span class=\"o\">~/</span><span class=\"p\">.</span><span class=\"n\">bashrc</span> <span class=\"p\">]</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">echo</span> <span class=\"o\">-</span><span class=\"n\">e</span> <span class=\"err\">'\\</span><span class=\"n\">nexport</span> <span class=\"n\">GPG_TTY</span><span class=\"o\">=</span><span class=\"err\">$</span><span class=\"p\">(</span><span class=\"n\">tty</span><span class=\"p\">)</span><span class=\"err\">'</span> <span class=\"o\">&gt;&gt;</span> <span class=\"o\">~/</span><span class=\"p\">.</span><span class=\"n\">bashrc</span></code></pre></div></div><h3 id=\"reference\">Reference</h3><ol>  <li><a href=\"https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key\">https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key</a></li></ol>",
            "url": "https://mrprajesh.co.in/blog/git-commit-sign-gpg.html",
            
            
            
            "tags": ["git","gpg"],
            
            "date_published": "2024-02-20T12:38:13+05:30",
            "date_modified": "2024-02-20T12:38:13+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/how-to-install-cuda-ubuntu-22-04.html",
            "title": "How to install cuda on ubuntu 22.04 or Linux Mint 21.2",
            "summary": null,
            "content_text": "On fresh install of the OS, I did the following to get it working.  Find the CUDA driver version required for your GPU. I saw 535 from my (3060 RTX)[https://www.nvidia.com/download/index.aspx]  Find the CUDA version that has that driver. I found 12.2 which matched 535 driver version xx.x.x_535.xx.xx_linux  In grub press e and type nomodeset before quite splash //unsure  ALT+F1. Login to tty  sudo service lightdm stop  wget https://developer.download.nvidia.com/compute/cuda/12.2.2/local_installers/cuda_12.2.2_535.104.05_linux.run  sudo sh cuda_12.2.2_535.104.05_linux.run           Accept.      Tick Driver, Toolkit, Demo      INSTALL        Unpon success. reboot.  Append in ~/.bashrc    export PATH=/usr/local/cuda-12.2/bin${PATH:+:${PATH}}export LD_LIBRARY_PATH=/usr/local/cuda-12.2/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}      Check the installation.## Step 1$ nvcc --versionnvcc: NVIDIA (R) Cuda compiler driverCopyright (c) 2005-2023 NVIDIA CorporationBuilt on Tue_Aug_15_22:02:13_PDT_2023Cuda compilation tools, release 12.2, V12.2.140Build cuda_12.2.r12.2/compiler.33191640_0## Step 2$ nvidia-smi Thu Dec 21 17:51:50 2023       +---------------------------------------------------------------------------------------+| NVIDIA-SMI 535.104.05             Driver Version: 535.104.05   CUDA Version: 12.2     ||-----------------------------------------+----------------------+----------------------+| GPU  Name                 Persistence-M | Bus-Id        Disp.A | Volatile Uncorr. ECC || Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. ||                                         |                      |               MIG M. ||=========================================+======================+======================||   0  NVIDIA GeForce RTX 3060 ...    Off | 00000000:01:00.0  On |                  N/A || N/A   55C    P8              16W / 115W |     50MiB /  6144MiB |      7%      Default ||                                         |                      |                  N/A |+-----------------------------------------+----------------------+----------------------+                                                                                         +---------------------------------------------------------------------------------------+| Processes:                                                                            ||  GPU   GI   CI        PID   Type   Process name                            GPU Memory ||        ID   ID                                                             Usage      ||=======================================================================================||    0   N/A  N/A      1143      G   /usr/lib/xorg/Xorg                           45MiB |+---------------------------------------------------------------------------------------+## Step 3$ git clone https://github.com/NVIDIA/cuda-samples.git$ cd cuda-samples/Samples/1_Utilities/deviceQuery$ make$ ./deviceQuery ./deviceQuery Starting... CUDA Device Query (Runtime API) version (CUDART static linking)Detected 1 CUDA Capable device(s)Device 0: \"NVIDIA GeForce RTX 3060 Laptop GPU\"  CUDA Driver Version / Runtime Version          12.2 / 12.2  CUDA Capability Major/Minor version number:    8.6  Total amount of global memory:                 5938 MBytes (6226378752 bytes)  (030) Multiprocessors, (128) CUDA Cores/MP:    3840 CUDA Cores  GPU Max Clock rate:                            1702 MHz (1.70 GHz)  Memory Clock rate:                             7001 Mhz  Memory Bus Width:                              192-bit  L2 Cache Size:                                 3145728 bytes  Maximum Texture Dimension Size (x,y,z)         1D=(131072), 2D=(131072, 65536), 3D=(16384, 16384, 16384)  Maximum Layered 1D Texture Size, (num) layers  1D=(32768), 2048 layers  Maximum Layered 2D Texture Size, (num) layers  2D=(32768, 32768), 2048 layers  Total amount of constant memory:               65536 bytes  Total amount of shared memory per block:       49152 bytes  Total shared memory per multiprocessor:        102400 bytes  Total number of registers available per block: 65536  Warp size:                                     32  Maximum number of threads per multiprocessor:  1536  Maximum number of threads per block:           1024  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)  Maximum memory pitch:                          2147483647 bytes  Texture alignment:                             512 bytes  Concurrent copy and kernel execution:          Yes with 2 copy engine(s)  Run time limit on kernels:                     Yes  Integrated GPU sharing Host Memory:            No  Support host page-locked memory mapping:       Yes  Alignment requirement for Surfaces:            Yes  Device has ECC support:                        Disabled  Device supports Unified Addressing (UVA):      Yes  Device supports Managed Memory:                Yes  Device supports Compute Preemption:            Yes  Supports Cooperative Kernel Launch:            Yes  Supports MultiDevice Co-op Kernel Launch:      Yes  Device PCI Domain ID / Bus ID / location ID:   0 / 1 / 0  Compute Mode:     &lt; Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) &gt;deviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 12.2, CUDA Runtime Version = 12.2, NumDevs = 1Result = PASSHello World CUDA!cat a.cu#include &lt;cuda.h&gt;#include &lt;stdio.h&gt;__global__ void k(){\tprintf(\"hello %u!\\n\", threadIdx.x);}int main(void){\tk&lt;&lt;&lt;2,32&gt;&gt;&gt;();\tcudaDeviceSynchronize();\treturn 0;}nvcc a.cu &amp;&amp; ./a.outOther thoughts.  Install the driver version from driver manager  While cuda install just deselect the driver",
            "content_html": "<p>On fresh install of the OS, I did the following to get it working.</p><ol>  <li>Find the CUDA driver version required for your GPU. I saw 535 from my (3060 RTX)[https://www.nvidia.com/download/index.aspx]</li>  <li>Find the CUDA version that has that driver. I found 12.2 which matched 535 driver version <code class=\"language-plaintext highlighter-rouge\">xx.x.x_535.xx.xx_linux</code></li>  <li>In grub press e and type <code class=\"language-plaintext highlighter-rouge\">nomodeset</code> before <code class=\"language-plaintext highlighter-rouge\">quite splash</code> //unsure</li>  <li>ALT+F1. Login to tty</li>  <li><code class=\"language-plaintext highlighter-rouge\">sudo service lightdm stop</code></li>  <li><code class=\"language-plaintext highlighter-rouge\">wget https://developer.download.nvidia.com/compute/cuda/12.2.2/local_installers/cuda_12.2.2_535.104.05_linux.run</code></li>  <li><code class=\"language-plaintext highlighter-rouge\">sudo sh cuda_12.2.2_535.104.05_linux.run </code>    <ul>      <li>Accept.</li>      <li>Tick Driver, Toolkit, Demo</li>      <li>INSTALL</li>    </ul>  </li>  <li>Unpon success. reboot.</li>  <li>Append in <code class=\"language-plaintext highlighter-rouge\">~/.bashrc</code>    <div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">export</span> <span class=\"n\">PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"err\">$</span><span class=\"p\">{</span><span class=\"n\">PATH</span><span class=\"o\">:+:</span><span class=\"err\">$</span><span class=\"p\">{</span><span class=\"n\">PATH</span><span class=\"p\">}}</span><span class=\"n\">export</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"o\">/</span><span class=\"n\">lib64</span><span class=\"err\">$</span><span class=\"p\">{</span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">:+:</span><span class=\"err\">$</span><span class=\"p\">{</span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"p\">}}</span></code></pre></div>    </div>  </li></ol><h2 id=\"check-the-installation\">Check the installation.</h2><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">## Step 1</span><span class=\"err\">$</span> <span class=\"n\">nvcc</span> <span class=\"o\">--</span><span class=\"n\">version</span><span class=\"n\">nvcc</span><span class=\"o\">:</span> <span class=\"n\">NVIDIA</span> <span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">)</span> <span class=\"n\">Cuda</span> <span class=\"n\">compiler</span> <span class=\"n\">driver</span><span class=\"n\">Copyright</span> <span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"mi\">2005</span><span class=\"o\">-</span><span class=\"mi\">2023</span> <span class=\"n\">NVIDIA</span> <span class=\"n\">Corporation</span><span class=\"n\">Built</span> <span class=\"n\">on</span> <span class=\"n\">Tue_Aug_15_22</span><span class=\"o\">:</span><span class=\"mo\">02</span><span class=\"o\">:</span><span class=\"mi\">13</span><span class=\"n\">_PDT_2023</span><span class=\"n\">Cuda</span> <span class=\"n\">compilation</span> <span class=\"n\">tools</span><span class=\"p\">,</span> <span class=\"n\">release</span> <span class=\"mi\">12</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">V12</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"p\">.</span><span class=\"mi\">140</span><span class=\"n\">Build</span> <span class=\"n\">cuda_12</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"p\">.</span><span class=\"n\">r12</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"o\">/</span><span class=\"n\">compiler</span><span class=\"p\">.</span><span class=\"mi\">33191640</span><span class=\"n\">_0</span><span class=\"cp\">## Step 2</span><span class=\"err\">$</span> <span class=\"n\">nvidia</span><span class=\"o\">-</span><span class=\"n\">smi</span> <span class=\"n\">Thu</span> <span class=\"n\">Dec</span> <span class=\"mi\">21</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">51</span><span class=\"o\">:</span><span class=\"mi\">50</span> <span class=\"mi\">2023</span>       <span class=\"o\">+---------------------------------------------------------------------------------------+</span><span class=\"o\">|</span> <span class=\"n\">NVIDIA</span><span class=\"o\">-</span><span class=\"n\">SMI</span> <span class=\"mi\">535</span><span class=\"p\">.</span><span class=\"mi\">104</span><span class=\"p\">.</span><span class=\"mo\">05</span>             <span class=\"n\">Driver</span> <span class=\"n\">Version</span><span class=\"o\">:</span> <span class=\"mi\">535</span><span class=\"p\">.</span><span class=\"mi\">104</span><span class=\"p\">.</span><span class=\"mo\">05</span>   <span class=\"n\">CUDA</span> <span class=\"n\">Version</span><span class=\"o\">:</span> <span class=\"mi\">12</span><span class=\"p\">.</span><span class=\"mi\">2</span>     <span class=\"o\">|</span><span class=\"o\">|-----------------------------------------+----------------------+----------------------+</span><span class=\"o\">|</span> <span class=\"n\">GPU</span>  <span class=\"n\">Name</span>                 <span class=\"n\">Persistence</span><span class=\"o\">-</span><span class=\"n\">M</span> <span class=\"o\">|</span> <span class=\"n\">Bus</span><span class=\"o\">-</span><span class=\"n\">Id</span>        <span class=\"n\">Disp</span><span class=\"p\">.</span><span class=\"n\">A</span> <span class=\"o\">|</span> <span class=\"n\">Volatile</span> <span class=\"n\">Uncorr</span><span class=\"p\">.</span> <span class=\"n\">ECC</span> <span class=\"o\">|</span><span class=\"o\">|</span> <span class=\"n\">Fan</span>  <span class=\"n\">Temp</span>   <span class=\"n\">Perf</span>          <span class=\"n\">Pwr</span><span class=\"o\">:</span><span class=\"n\">Usage</span><span class=\"o\">/</span><span class=\"n\">Cap</span> <span class=\"o\">|</span>         <span class=\"n\">Memory</span><span class=\"o\">-</span><span class=\"n\">Usage</span> <span class=\"o\">|</span> <span class=\"n\">GPU</span><span class=\"o\">-</span><span class=\"n\">Util</span>  <span class=\"n\">Compute</span> <span class=\"n\">M</span><span class=\"p\">.</span> <span class=\"o\">|</span><span class=\"o\">|</span>                                         <span class=\"o\">|</span>                      <span class=\"o\">|</span>               <span class=\"n\">MIG</span> <span class=\"n\">M</span><span class=\"p\">.</span> <span class=\"o\">|</span><span class=\"o\">|=========================================+======================+======================|</span><span class=\"o\">|</span>   <span class=\"mi\">0</span>  <span class=\"n\">NVIDIA</span> <span class=\"n\">GeForce</span> <span class=\"n\">RTX</span> <span class=\"mi\">3060</span> <span class=\"p\">...</span>    <span class=\"n\">Off</span> <span class=\"o\">|</span> <span class=\"mo\">00000000</span><span class=\"o\">:</span><span class=\"mo\">01</span><span class=\"o\">:</span><span class=\"mo\">00</span><span class=\"p\">.</span><span class=\"mi\">0</span>  <span class=\"n\">On</span> <span class=\"o\">|</span>                  <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span> <span class=\"o\">|</span><span class=\"o\">|</span> <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span>   <span class=\"mi\">55</span><span class=\"n\">C</span>    <span class=\"n\">P8</span>              <span class=\"mi\">16</span><span class=\"n\">W</span> <span class=\"o\">/</span> <span class=\"mi\">115</span><span class=\"n\">W</span> <span class=\"o\">|</span>     <span class=\"mi\">50</span><span class=\"n\">MiB</span> <span class=\"o\">/</span>  <span class=\"mi\">6144</span><span class=\"n\">MiB</span> <span class=\"o\">|</span>      <span class=\"mi\">7</span><span class=\"o\">%</span>      <span class=\"n\">Default</span> <span class=\"o\">|</span><span class=\"o\">|</span>                                         <span class=\"o\">|</span>                      <span class=\"o\">|</span>                  <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span> <span class=\"o\">|</span><span class=\"o\">+-----------------------------------------+----------------------+----------------------+</span>                                                                                         <span class=\"o\">+---------------------------------------------------------------------------------------+</span><span class=\"o\">|</span> <span class=\"n\">Processes</span><span class=\"o\">:</span>                                                                            <span class=\"o\">|</span><span class=\"o\">|</span>  <span class=\"n\">GPU</span>   <span class=\"n\">GI</span>   <span class=\"n\">CI</span>        <span class=\"n\">PID</span>   <span class=\"n\">Type</span>   <span class=\"n\">Process</span> <span class=\"n\">name</span>                            <span class=\"n\">GPU</span> <span class=\"n\">Memory</span> <span class=\"o\">|</span><span class=\"o\">|</span>        <span class=\"n\">ID</span>   <span class=\"n\">ID</span>                                                             <span class=\"n\">Usage</span>      <span class=\"o\">|</span><span class=\"o\">|=======================================================================================|</span><span class=\"o\">|</span>    <span class=\"mi\">0</span>   <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span>  <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span>      <span class=\"mi\">1143</span>      <span class=\"n\">G</span>   <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">xorg</span><span class=\"o\">/</span><span class=\"n\">Xorg</span>                           <span class=\"mi\">45</span><span class=\"n\">MiB</span> <span class=\"o\">|</span><span class=\"o\">+---------------------------------------------------------------------------------------+</span><span class=\"cp\">## Step 3</span><span class=\"err\">$</span> <span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//github.com/NVIDIA/cuda-samples.git</span><span class=\"err\">$</span> <span class=\"n\">cd</span> <span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"n\">samples</span><span class=\"o\">/</span><span class=\"n\">Samples</span><span class=\"o\">/</span><span class=\"mi\">1</span><span class=\"n\">_Utilities</span><span class=\"o\">/</span><span class=\"n\">deviceQuery</span><span class=\"err\">$</span> <span class=\"n\">make</span><span class=\"err\">$</span> <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">deviceQuery</span> <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">deviceQuery</span> <span class=\"n\">Starting</span><span class=\"p\">...</span> <span class=\"n\">CUDA</span> <span class=\"n\">Device</span> <span class=\"n\">Query</span> <span class=\"p\">(</span><span class=\"n\">Runtime</span> <span class=\"n\">API</span><span class=\"p\">)</span> <span class=\"n\">version</span> <span class=\"p\">(</span><span class=\"n\">CUDART</span> <span class=\"k\">static</span> <span class=\"n\">linking</span><span class=\"p\">)</span><span class=\"n\">Detected</span> <span class=\"mi\">1</span> <span class=\"n\">CUDA</span> <span class=\"n\">Capable</span> <span class=\"n\">device</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"n\">Device</span> <span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"s\">\"NVIDIA GeForce RTX 3060 Laptop GPU\"</span>  <span class=\"n\">CUDA</span> <span class=\"n\">Driver</span> <span class=\"n\">Version</span> <span class=\"o\">/</span> <span class=\"n\">Runtime</span> <span class=\"n\">Version</span>          <span class=\"mi\">12</span><span class=\"p\">.</span><span class=\"mi\">2</span> <span class=\"o\">/</span> <span class=\"mi\">12</span><span class=\"p\">.</span><span class=\"mi\">2</span>  <span class=\"n\">CUDA</span> <span class=\"n\">Capability</span> <span class=\"n\">Major</span><span class=\"o\">/</span><span class=\"n\">Minor</span> <span class=\"n\">version</span> <span class=\"n\">number</span><span class=\"o\">:</span>    <span class=\"mi\">8</span><span class=\"p\">.</span><span class=\"mi\">6</span>  <span class=\"n\">Total</span> <span class=\"n\">amount</span> <span class=\"n\">of</span> <span class=\"n\">global</span> <span class=\"n\">memory</span><span class=\"o\">:</span>                 <span class=\"mi\">5938</span> <span class=\"n\">MBytes</span> <span class=\"p\">(</span><span class=\"mi\">6226378752</span> <span class=\"n\">bytes</span><span class=\"p\">)</span>  <span class=\"p\">(</span><span class=\"mo\">030</span><span class=\"p\">)</span> <span class=\"n\">Multiprocessors</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">)</span> <span class=\"n\">CUDA</span> <span class=\"n\">Cores</span><span class=\"o\">/</span><span class=\"n\">MP</span><span class=\"o\">:</span>    <span class=\"mi\">3840</span> <span class=\"n\">CUDA</span> <span class=\"n\">Cores</span>  <span class=\"n\">GPU</span> <span class=\"n\">Max</span> <span class=\"n\">Clock</span> <span class=\"n\">rate</span><span class=\"o\">:</span>                            <span class=\"mi\">1702</span> <span class=\"n\">MHz</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"mi\">70</span> <span class=\"n\">GHz</span><span class=\"p\">)</span>  <span class=\"n\">Memory</span> <span class=\"n\">Clock</span> <span class=\"n\">rate</span><span class=\"o\">:</span>                             <span class=\"mi\">7001</span> <span class=\"n\">Mhz</span>  <span class=\"n\">Memory</span> <span class=\"n\">Bus</span> <span class=\"n\">Width</span><span class=\"o\">:</span>                              <span class=\"mi\">192</span><span class=\"o\">-</span><span class=\"n\">bit</span>  <span class=\"n\">L2</span> <span class=\"n\">Cache</span> <span class=\"n\">Size</span><span class=\"o\">:</span>                                 <span class=\"mi\">3145728</span> <span class=\"n\">bytes</span>  <span class=\"n\">Maximum</span> <span class=\"n\">Texture</span> <span class=\"n\">Dimension</span> <span class=\"n\">Size</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">)</span>         <span class=\"mi\">1</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">131072</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">131072</span><span class=\"p\">,</span> <span class=\"mi\">65536</span><span class=\"p\">),</span> <span class=\"mi\">3</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">16384</span><span class=\"p\">,</span> <span class=\"mi\">16384</span><span class=\"p\">,</span> <span class=\"mi\">16384</span><span class=\"p\">)</span>  <span class=\"n\">Maximum</span> <span class=\"n\">Layered</span> <span class=\"mi\">1</span><span class=\"n\">D</span> <span class=\"n\">Texture</span> <span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)</span> <span class=\"n\">layers</span>  <span class=\"mi\">1</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">32768</span><span class=\"p\">),</span> <span class=\"mi\">2048</span> <span class=\"n\">layers</span>  <span class=\"n\">Maximum</span> <span class=\"n\">Layered</span> <span class=\"mi\">2</span><span class=\"n\">D</span> <span class=\"n\">Texture</span> <span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)</span> <span class=\"n\">layers</span>  <span class=\"mi\">2</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">32768</span><span class=\"p\">,</span> <span class=\"mi\">32768</span><span class=\"p\">),</span> <span class=\"mi\">2048</span> <span class=\"n\">layers</span>  <span class=\"n\">Total</span> <span class=\"n\">amount</span> <span class=\"n\">of</span> <span class=\"n\">constant</span> <span class=\"n\">memory</span><span class=\"o\">:</span>               <span class=\"mi\">65536</span> <span class=\"n\">bytes</span>  <span class=\"n\">Total</span> <span class=\"n\">amount</span> <span class=\"n\">of</span> <span class=\"n\">shared</span> <span class=\"n\">memory</span> <span class=\"n\">per</span> <span class=\"n\">block</span><span class=\"o\">:</span>       <span class=\"mi\">49152</span> <span class=\"n\">bytes</span>  <span class=\"n\">Total</span> <span class=\"n\">shared</span> <span class=\"n\">memory</span> <span class=\"n\">per</span> <span class=\"n\">multiprocessor</span><span class=\"o\">:</span>        <span class=\"mi\">102400</span> <span class=\"n\">bytes</span>  <span class=\"n\">Total</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">registers</span> <span class=\"n\">available</span> <span class=\"n\">per</span> <span class=\"n\">block</span><span class=\"o\">:</span> <span class=\"mi\">65536</span>  <span class=\"n\">Warp</span> <span class=\"n\">size</span><span class=\"o\">:</span>                                     <span class=\"mi\">32</span>  <span class=\"n\">Maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">threads</span> <span class=\"n\">per</span> <span class=\"n\">multiprocessor</span><span class=\"o\">:</span>  <span class=\"mi\">1536</span>  <span class=\"n\">Maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">threads</span> <span class=\"n\">per</span> <span class=\"n\">block</span><span class=\"o\">:</span>           <span class=\"mi\">1024</span>  <span class=\"n\">Max</span> <span class=\"n\">dimension</span> <span class=\"n\">size</span> <span class=\"n\">of</span> <span class=\"n\">a</span> <span class=\"kr\">thread</span> <span class=\"n\">block</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">)</span>  <span class=\"n\">Max</span> <span class=\"n\">dimension</span> <span class=\"n\">size</span> <span class=\"n\">of</span> <span class=\"n\">a</span> <span class=\"n\">grid</span> <span class=\"n\">size</span>    <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"mi\">2147483647</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">)</span>  <span class=\"n\">Maximum</span> <span class=\"n\">memory</span> <span class=\"n\">pitch</span><span class=\"o\">:</span>                          <span class=\"mi\">2147483647</span> <span class=\"n\">bytes</span>  <span class=\"n\">Texture</span> <span class=\"n\">alignment</span><span class=\"o\">:</span>                             <span class=\"mi\">512</span> <span class=\"n\">bytes</span>  <span class=\"n\">Concurrent</span> <span class=\"n\">copy</span> <span class=\"n\">and</span> <span class=\"n\">kernel</span> <span class=\"n\">execution</span><span class=\"o\">:</span>          <span class=\"n\">Yes</span> <span class=\"n\">with</span> <span class=\"mi\">2</span> <span class=\"n\">copy</span> <span class=\"n\">engine</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>  <span class=\"n\">Run</span> <span class=\"n\">time</span> <span class=\"n\">limit</span> <span class=\"n\">on</span> <span class=\"n\">kernels</span><span class=\"o\">:</span>                     <span class=\"n\">Yes</span>  <span class=\"n\">Integrated</span> <span class=\"n\">GPU</span> <span class=\"n\">sharing</span> <span class=\"n\">Host</span> <span class=\"n\">Memory</span><span class=\"o\">:</span>            <span class=\"n\">No</span>  <span class=\"n\">Support</span> <span class=\"n\">host</span> <span class=\"n\">page</span><span class=\"o\">-</span><span class=\"n\">locked</span> <span class=\"n\">memory</span> <span class=\"n\">mapping</span><span class=\"o\">:</span>       <span class=\"n\">Yes</span>  <span class=\"n\">Alignment</span> <span class=\"n\">requirement</span> <span class=\"k\">for</span> <span class=\"n\">Surfaces</span><span class=\"o\">:</span>            <span class=\"n\">Yes</span>  <span class=\"n\">Device</span> <span class=\"n\">has</span> <span class=\"n\">ECC</span> <span class=\"n\">support</span><span class=\"o\">:</span>                        <span class=\"n\">Disabled</span>  <span class=\"n\">Device</span> <span class=\"n\">supports</span> <span class=\"n\">Unified</span> <span class=\"n\">Addressing</span> <span class=\"p\">(</span><span class=\"n\">UVA</span><span class=\"p\">)</span><span class=\"o\">:</span>      <span class=\"n\">Yes</span>  <span class=\"n\">Device</span> <span class=\"n\">supports</span> <span class=\"n\">Managed</span> <span class=\"n\">Memory</span><span class=\"o\">:</span>                <span class=\"n\">Yes</span>  <span class=\"n\">Device</span> <span class=\"n\">supports</span> <span class=\"n\">Compute</span> <span class=\"n\">Preemption</span><span class=\"o\">:</span>            <span class=\"n\">Yes</span>  <span class=\"n\">Supports</span> <span class=\"n\">Cooperative</span> <span class=\"n\">Kernel</span> <span class=\"n\">Launch</span><span class=\"o\">:</span>            <span class=\"n\">Yes</span>  <span class=\"n\">Supports</span> <span class=\"n\">MultiDevice</span> <span class=\"n\">Co</span><span class=\"o\">-</span><span class=\"n\">op</span> <span class=\"n\">Kernel</span> <span class=\"n\">Launch</span><span class=\"o\">:</span>      <span class=\"n\">Yes</span>  <span class=\"n\">Device</span> <span class=\"n\">PCI</span> <span class=\"n\">Domain</span> <span class=\"n\">ID</span> <span class=\"o\">/</span> <span class=\"n\">Bus</span> <span class=\"n\">ID</span> <span class=\"o\">/</span> <span class=\"n\">location</span> <span class=\"n\">ID</span><span class=\"o\">:</span>   <span class=\"mi\">0</span> <span class=\"o\">/</span> <span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"mi\">0</span>  <span class=\"n\">Compute</span> <span class=\"n\">Mode</span><span class=\"o\">:</span>     <span class=\"o\">&lt;</span> <span class=\"n\">Default</span> <span class=\"p\">(</span><span class=\"n\">multiple</span> <span class=\"n\">host</span> <span class=\"n\">threads</span> <span class=\"n\">can</span> <span class=\"n\">use</span> <span class=\"o\">::</span><span class=\"n\">cudaSetDevice</span><span class=\"p\">()</span> <span class=\"n\">with</span> <span class=\"n\">device</span> <span class=\"n\">simultaneously</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span><span class=\"n\">deviceQuery</span><span class=\"p\">,</span> <span class=\"n\">CUDA</span> <span class=\"n\">Driver</span> <span class=\"o\">=</span> <span class=\"n\">CUDART</span><span class=\"p\">,</span> <span class=\"n\">CUDA</span> <span class=\"n\">Driver</span> <span class=\"n\">Version</span> <span class=\"o\">=</span> <span class=\"mi\">12</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">CUDA</span> <span class=\"n\">Runtime</span> <span class=\"n\">Version</span> <span class=\"o\">=</span> <span class=\"mi\">12</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">NumDevs</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"n\">Result</span> <span class=\"o\">=</span> <span class=\"n\">PASS</span></code></pre></div></div><h2 id=\"hello-world-cuda\">Hello World CUDA!</h2><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">cat</span> <span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">cu</span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;cuda.h&gt;</span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;stdio.h&gt;</span><span class=\"cp\"></span><span class=\"n\">__global__</span> <span class=\"kt\">void</span> <span class=\"nf\">k</span><span class=\"p\">(){</span>\t<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"hello %u!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span> <span class=\"n\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"p\">}</span><span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">){</span>\t<span class=\"n\">k</span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">32</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"p\">();</span>\t<span class=\"n\">cudaDeviceSynchronize</span><span class=\"p\">();</span>\t<span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"p\">}</span><span class=\"n\">nvcc</span> <span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">cu</span> <span class=\"o\">&amp;&amp;</span> <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">out</span></code></pre></div></div><h3 id=\"other-thoughts\">Other thoughts.</h3><ol>  <li>Install the driver version from driver manager</li>  <li>While cuda install just deselect the driver</li></ol>",
            "url": "https://mrprajesh.co.in/blog/how-to-install-cuda-ubuntu-22-04.html",
            
            
            
            "tags": ["cuda","ubuntu","linuxmint"],
            
            "date_published": "2023-12-21T17:40:12+05:30",
            "date_modified": "2023-12-21T17:40:12+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/how-to-install-tensorflow-gpu.html",
            "title": "How To Install Tensorflow GPU",
            "summary": null,
            "content_text": "Requirements  Python 3.9+  Conda  NVidia GPU  Ubuntu 20.04It was pretty straightforward from Official docs.conda create --name tf python=3.9conda activate tf(tf) nvidia-smi(tf) conda install -c conda-forge cudatoolkit=11.2.2 cudnn=8.1.0(tf) export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CONDA_PREFIX/lib/(tf) pip install --upgrade pip(tf) pip install tensorflow(tf) python3 -c \"import tensorflow as tf; print(tf.reduce_sum(tf.random.normal([1000, 1000])))\"  python3 -c \"import tensorflow as tf; print(tf.reduce_sum(tf.random.normal([1000, 1000])))\"  2023-03-10 14:15:53.991865: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX_VNNI FMA  To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.  ...  2023-03-10 14:15:55.331872: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero  2023-03-10 14:15:55.331944: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 3801 MB memory:  -&gt; device: 0, name: NVIDIA GeForce RTX 3060 Laptop GPU, pci bus id: 0000:01:00.0, compute capability: 8.6  tf.Tensor(-110.189026, shape=(), dtype=float32)(tf) python3 -c \"import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))\"  2023-03-10 14:16:25.743784: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero  2023-03-10 14:16:25.765042: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero  2023-03-10 14:16:25.765153: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero  [PhysicalDevice(name='/physical_device:GPU:0', device_type='GPU')]Refs  Official Docs  Issue",
            "content_html": "<h3 id=\"requirements\">Requirements</h3><ul>  <li>Python 3.9+</li>  <li>Conda</li>  <li>NVidia GPU</li>  <li>Ubuntu 20.04</li></ul><p>It was pretty straightforward from Official docs.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">conda</span> <span class=\"n\">create</span> <span class=\"o\">--</span><span class=\"n\">name</span> <span class=\"n\">tf</span> <span class=\"n\">python</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"mi\">9</span><span class=\"n\">conda</span> <span class=\"n\">activate</span> <span class=\"n\">tf</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"p\">)</span> <span class=\"n\">nvidia</span><span class=\"o\">-</span><span class=\"n\">smi</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"p\">)</span> <span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">conda</span><span class=\"o\">-</span><span class=\"n\">forge</span> <span class=\"n\">cudatoolkit</span><span class=\"o\">=</span><span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"p\">.</span><span class=\"mi\">2</span> <span class=\"n\">cudnn</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"p\">)</span> <span class=\"n\">export</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=</span><span class=\"err\">$</span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">:</span><span class=\"err\">$</span><span class=\"n\">CONDA_PREFIX</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"p\">)</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"o\">--</span><span class=\"n\">upgrade</span> <span class=\"n\">pip</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"p\">)</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">tensorflow</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"p\">)</span> <span class=\"n\">python3</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"s\">\"import tensorflow as tf; print(tf.reduce_sum(tf.random.normal([1000, 1000])))\"</span>  <span class=\"n\">python3</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"s\">\"import tensorflow as tf; print(tf.reduce_sum(tf.random.normal([1000, 1000])))\"</span>  <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mo\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span> <span class=\"mi\">14</span><span class=\"o\">:</span><span class=\"mi\">15</span><span class=\"o\">:</span><span class=\"mi\">53</span><span class=\"p\">.</span><span class=\"mi\">991865</span><span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"n\">tensorflow</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">platform</span><span class=\"o\">/</span><span class=\"n\">cpu_feature_guard</span><span class=\"p\">.</span><span class=\"n\">cc</span><span class=\"o\">:</span><span class=\"mi\">193</span><span class=\"p\">]</span> <span class=\"n\">This</span> <span class=\"n\">TensorFlow</span> <span class=\"n\">binary</span> <span class=\"n\">is</span> <span class=\"n\">optimized</span> <span class=\"n\">with</span> <span class=\"n\">oneAPI</span> <span class=\"n\">Deep</span> <span class=\"n\">Neural</span> <span class=\"n\">Network</span> <span class=\"n\">Library</span> <span class=\"p\">(</span><span class=\"n\">oneDNN</span><span class=\"p\">)</span> <span class=\"n\">to</span> <span class=\"n\">use</span> <span class=\"n\">the</span> <span class=\"n\">following</span> <span class=\"n\">CPU</span> <span class=\"n\">instructions</span> <span class=\"n\">in</span> <span class=\"n\">performance</span><span class=\"o\">-</span><span class=\"n\">critical</span> <span class=\"n\">operations</span><span class=\"o\">:</span>  <span class=\"n\">AVX2</span> <span class=\"n\">AVX_VNNI</span> <span class=\"n\">FMA</span>  <span class=\"n\">To</span> <span class=\"n\">enable</span> <span class=\"n\">them</span> <span class=\"n\">in</span> <span class=\"n\">other</span> <span class=\"n\">operations</span><span class=\"p\">,</span> <span class=\"n\">rebuild</span> <span class=\"n\">TensorFlow</span> <span class=\"n\">with</span> <span class=\"n\">the</span> <span class=\"n\">appropriate</span> <span class=\"n\">compiler</span> <span class=\"n\">flags</span><span class=\"p\">.</span>  <span class=\"p\">...</span>  <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mo\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span> <span class=\"mi\">14</span><span class=\"o\">:</span><span class=\"mi\">15</span><span class=\"o\">:</span><span class=\"mi\">55</span><span class=\"p\">.</span><span class=\"mi\">331872</span><span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"n\">tensorflow</span><span class=\"o\">/</span><span class=\"n\">compiler</span><span class=\"o\">/</span><span class=\"n\">xla</span><span class=\"o\">/</span><span class=\"n\">stream_executor</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">/</span><span class=\"n\">cuda_gpu_executor</span><span class=\"p\">.</span><span class=\"n\">cc</span><span class=\"o\">:</span><span class=\"mi\">981</span><span class=\"p\">]</span> <span class=\"n\">successful</span> <span class=\"n\">NUMA</span> <span class=\"n\">node</span> <span class=\"n\">read</span> <span class=\"n\">from</span> <span class=\"n\">SysFS</span> <span class=\"n\">had</span> <span class=\"n\">negative</span> <span class=\"n\">value</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">but</span> <span class=\"n\">there</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">at</span> <span class=\"n\">least</span> <span class=\"n\">one</span> <span class=\"n\">NUMA</span> <span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"n\">so</span> <span class=\"n\">returning</span> <span class=\"n\">NUMA</span> <span class=\"n\">node</span> <span class=\"n\">zero</span>  <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mo\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span> <span class=\"mi\">14</span><span class=\"o\">:</span><span class=\"mi\">15</span><span class=\"o\">:</span><span class=\"mi\">55</span><span class=\"p\">.</span><span class=\"mi\">331944</span><span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"n\">tensorflow</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">common_runtime</span><span class=\"o\">/</span><span class=\"n\">gpu</span><span class=\"o\">/</span><span class=\"n\">gpu_device</span><span class=\"p\">.</span><span class=\"n\">cc</span><span class=\"o\">:</span><span class=\"mi\">1613</span><span class=\"p\">]</span> <span class=\"n\">Created</span> <span class=\"n\">device</span> <span class=\"o\">/</span><span class=\"n\">job</span><span class=\"o\">:</span><span class=\"n\">localhost</span><span class=\"o\">/</span><span class=\"n\">replica</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">/</span><span class=\"n\">task</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">/</span><span class=\"n\">device</span><span class=\"o\">:</span><span class=\"n\">GPU</span><span class=\"o\">:</span><span class=\"mi\">0</span> <span class=\"n\">with</span> <span class=\"mi\">3801</span> <span class=\"n\">MB</span> <span class=\"n\">memory</span><span class=\"o\">:</span>  <span class=\"o\">-&gt;</span> <span class=\"n\">device</span><span class=\"o\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"n\">NVIDIA</span> <span class=\"n\">GeForce</span> <span class=\"n\">RTX</span> <span class=\"mi\">3060</span> <span class=\"n\">Laptop</span> <span class=\"n\">GPU</span><span class=\"p\">,</span> <span class=\"n\">pci</span> <span class=\"n\">bus</span> <span class=\"n\">id</span><span class=\"o\">:</span> <span class=\"mo\">0000</span><span class=\"o\">:</span><span class=\"mo\">01</span><span class=\"o\">:</span><span class=\"mo\">00</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">compute</span> <span class=\"n\">capability</span><span class=\"o\">:</span> <span class=\"mi\">8</span><span class=\"p\">.</span><span class=\"mi\">6</span>  <span class=\"n\">tf</span><span class=\"p\">.</span><span class=\"n\">Tensor</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">110</span><span class=\"p\">.</span><span class=\"mi\">189026</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">)</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"p\">)</span> <span class=\"n\">python3</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"s\">\"import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))\"</span>  <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mo\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span> <span class=\"mi\">14</span><span class=\"o\">:</span><span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">25</span><span class=\"p\">.</span><span class=\"mi\">743784</span><span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"n\">tensorflow</span><span class=\"o\">/</span><span class=\"n\">compiler</span><span class=\"o\">/</span><span class=\"n\">xla</span><span class=\"o\">/</span><span class=\"n\">stream_executor</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">/</span><span class=\"n\">cuda_gpu_executor</span><span class=\"p\">.</span><span class=\"n\">cc</span><span class=\"o\">:</span><span class=\"mi\">981</span><span class=\"p\">]</span> <span class=\"n\">successful</span> <span class=\"n\">NUMA</span> <span class=\"n\">node</span> <span class=\"n\">read</span> <span class=\"n\">from</span> <span class=\"n\">SysFS</span> <span class=\"n\">had</span> <span class=\"n\">negative</span> <span class=\"n\">value</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">but</span> <span class=\"n\">there</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">at</span> <span class=\"n\">least</span> <span class=\"n\">one</span> <span class=\"n\">NUMA</span> <span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"n\">so</span> <span class=\"n\">returning</span> <span class=\"n\">NUMA</span> <span class=\"n\">node</span> <span class=\"n\">zero</span>  <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mo\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span> <span class=\"mi\">14</span><span class=\"o\">:</span><span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">25</span><span class=\"p\">.</span><span class=\"mi\">765042</span><span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"n\">tensorflow</span><span class=\"o\">/</span><span class=\"n\">compiler</span><span class=\"o\">/</span><span class=\"n\">xla</span><span class=\"o\">/</span><span class=\"n\">stream_executor</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">/</span><span class=\"n\">cuda_gpu_executor</span><span class=\"p\">.</span><span class=\"n\">cc</span><span class=\"o\">:</span><span class=\"mi\">981</span><span class=\"p\">]</span> <span class=\"n\">successful</span> <span class=\"n\">NUMA</span> <span class=\"n\">node</span> <span class=\"n\">read</span> <span class=\"n\">from</span> <span class=\"n\">SysFS</span> <span class=\"n\">had</span> <span class=\"n\">negative</span> <span class=\"n\">value</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">but</span> <span class=\"n\">there</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">at</span> <span class=\"n\">least</span> <span class=\"n\">one</span> <span class=\"n\">NUMA</span> <span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"n\">so</span> <span class=\"n\">returning</span> <span class=\"n\">NUMA</span> <span class=\"n\">node</span> <span class=\"n\">zero</span>  <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mo\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span> <span class=\"mi\">14</span><span class=\"o\">:</span><span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">25</span><span class=\"p\">.</span><span class=\"mi\">765153</span><span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"n\">tensorflow</span><span class=\"o\">/</span><span class=\"n\">compiler</span><span class=\"o\">/</span><span class=\"n\">xla</span><span class=\"o\">/</span><span class=\"n\">stream_executor</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">/</span><span class=\"n\">cuda_gpu_executor</span><span class=\"p\">.</span><span class=\"n\">cc</span><span class=\"o\">:</span><span class=\"mi\">981</span><span class=\"p\">]</span> <span class=\"n\">successful</span> <span class=\"n\">NUMA</span> <span class=\"n\">node</span> <span class=\"n\">read</span> <span class=\"n\">from</span> <span class=\"n\">SysFS</span> <span class=\"n\">had</span> <span class=\"n\">negative</span> <span class=\"n\">value</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">but</span> <span class=\"n\">there</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">at</span> <span class=\"n\">least</span> <span class=\"n\">one</span> <span class=\"n\">NUMA</span> <span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"n\">so</span> <span class=\"n\">returning</span> <span class=\"n\">NUMA</span> <span class=\"n\">node</span> <span class=\"n\">zero</span>  <span class=\"p\">[</span><span class=\"n\">PhysicalDevice</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"err\">'</span><span class=\"o\">/</span><span class=\"n\">physical_device</span><span class=\"o\">:</span><span class=\"n\">GPU</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"err\">'</span><span class=\"p\">,</span> <span class=\"n\">device_type</span><span class=\"o\">=</span><span class=\"err\">'</span><span class=\"n\">GPU</span><span class=\"err\">'</span><span class=\"p\">)]</span></code></pre></div></div><h3 id=\"refs\">Refs</h3><ul>  <li><a href=\"https://www.tensorflow.org/install/pip\">Official Docs</a></li>  <li><a href=\"https://github.com/AUTOMATIC1111/stable-diffusion-webui/issues/5926#issuecomment-1445364980\">Issue</a></li></ul>",
            "url": "https://mrprajesh.co.in/blog/how-to-install-tensorflow-gpu.html",
            
            
            
            "tags": ["tensorflow","nvidia","gpu"],
            
            "date_published": "2023-03-10T15:40:51+05:30",
            "date_modified": "2023-03-10T15:40:51+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/gui-for-cpp-codes.html",
            "title": "GUI for cpp codes",
            "summary": null,
            "content_text": "sudo apt-key adv --fetch-keys https://repos.codelite.org/CodeLite.ascsudo apt-add-repository 'deb https://repos.codelite.org/wx3.2.0/ubuntu/ focal universe'sudo apt-get updatesudo apt-get install libwxbase3.2-0-unofficial \\                libwxbase3.2unofficial-dev \\                libwxgtk3.2-0-unofficial \\                libwxgtk3.2unofficial-dev \\                wx3.2-headers \\                wx-common \\                wx3.2-examples// Optional!LDFLAGS=$(pkg-config --libs gtk+-3.0) CXXFLAGS=$(pkg-config --cflags gtk+-3.0) make -j$(nproc)",
            "content_html": "<div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">key</span> <span class=\"n\">adv</span> <span class=\"o\">--</span><span class=\"n\">fetch</span><span class=\"o\">-</span><span class=\"n\">keys</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//repos.codelite.org/CodeLite.asc</span><span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">add</span><span class=\"o\">-</span><span class=\"n\">repository</span> <span class=\"err\">'</span><span class=\"n\">deb</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//repos.codelite.org/wx3.2.0/ubuntu/ focal universe'</span><span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">update</span><span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"n\">libwxbase3</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"n\">unofficial</span> \\                <span class=\"n\">libwxbase3</span><span class=\"p\">.</span><span class=\"mi\">2u</span><span class=\"n\">nofficial</span><span class=\"o\">-</span><span class=\"n\">dev</span> \\                <span class=\"n\">libwxgtk3</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"n\">unofficial</span> \\                <span class=\"n\">libwxgtk3</span><span class=\"p\">.</span><span class=\"mi\">2u</span><span class=\"n\">nofficial</span><span class=\"o\">-</span><span class=\"n\">dev</span> \\                <span class=\"n\">wx3</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"o\">-</span><span class=\"n\">headers</span> \\                <span class=\"n\">wx</span><span class=\"o\">-</span><span class=\"n\">common</span> \\                <span class=\"n\">wx3</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"o\">-</span><span class=\"n\">examples</span><span class=\"c1\">// Optional!</span><span class=\"n\">LDFLAGS</span><span class=\"o\">=</span><span class=\"err\">$</span><span class=\"p\">(</span><span class=\"n\">pkg</span><span class=\"o\">-</span><span class=\"n\">config</span> <span class=\"o\">--</span><span class=\"n\">libs</span> <span class=\"n\">gtk</span><span class=\"o\">+-</span><span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"n\">CXXFLAGS</span><span class=\"o\">=</span><span class=\"err\">$</span><span class=\"p\">(</span><span class=\"n\">pkg</span><span class=\"o\">-</span><span class=\"n\">config</span> <span class=\"o\">--</span><span class=\"n\">cflags</span> <span class=\"n\">gtk</span><span class=\"o\">+-</span><span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"n\">make</span> <span class=\"o\">-</span><span class=\"n\">j</span><span class=\"err\">$</span><span class=\"p\">(</span><span class=\"n\">nproc</span><span class=\"p\">)</span></code></pre></div></div>",
            "url": "https://mrprajesh.co.in/blog/gui-for-cpp-codes.html",
            
            
            
            "tags": ["cpp","coding"],
            
            "date_published": "2023-03-06T14:02:17+05:30",
            "date_modified": "2023-03-06T14:02:17+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/how-to-know-mint-version.html",
            "title": "How to find Linux OS version details using terminal.",
            "summary": null,
            "content_text": "There are multiple GUI-ways to find the Linux OS versions. Here are some the might come handy# Kernel Information.$ uname -aLinux g15warrior 5.15.0-41-generic #44~20.04.1-Ubuntu SMP Fri Jun 24 13:27:29 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux$ lsb_release -aNo LSB modules are available.Distributor ID:\tLinuxmintDescription:\tLinux Mint 20.3Release:\t20.3Codename:\tuna// $ cat /etc/*releaseDISTRIB_ID=LinuxMintDISTRIB_RELEASE=20.3DISTRIB_CODENAME=unaDISTRIB_DESCRIPTION=\"Linux Mint 20.3 Una\"NAME=\"Linux Mint\"VERSION=\"20.3 (Una)\"ID=linuxmintID_LIKE=ubuntuPRETTY_NAME=\"Linux Mint 20.3\"VERSION_ID=\"20.3\"HOME_URL=\"https://www.linuxmint.com/\"SUPPORT_URL=\"https://forums.linuxmint.com/\"BUG_REPORT_URL=\"http://linuxmint-troubleshooting-guide.readthedocs.io/en/latest/\"PRIVACY_POLICY_URL=\"https://www.linuxmint.com/\"VERSION_CODENAME=unaUBUNTU_CODENAME=focal// $ cat /etc/*/*release...  DISTRIB_ID=UbuntuDISTRIB_RELEASE=20.04DISTRIB_CODENAME=focalDISTRIB_DESCRIPTION=\"Ubuntu Focal Fossa\"",
            "content_html": "<p>There are multiple GUI-ways to find the Linux OS versions. Here are some the might come handy</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\"># Kernel Information.</span><span class=\"err\">$</span> <span class=\"n\">uname</span> <span class=\"o\">-</span><span class=\"n\">a</span><span class=\"n\">Linux</span> <span class=\"n\">g15warrior</span> <span class=\"mi\">5</span><span class=\"p\">.</span><span class=\"mi\">15</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"mi\">41</span><span class=\"o\">-</span><span class=\"n\">generic</span> <span class=\"err\">#</span><span class=\"mi\">44</span><span class=\"o\">~</span><span class=\"mi\">20</span><span class=\"p\">.</span><span class=\"mo\">04</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">Ubuntu</span> <span class=\"n\">SMP</span> <span class=\"n\">Fri</span> <span class=\"n\">Jun</span> <span class=\"mi\">24</span> <span class=\"mi\">13</span><span class=\"o\">:</span><span class=\"mi\">27</span><span class=\"o\">:</span><span class=\"mi\">29</span> <span class=\"n\">UTC</span> <span class=\"mi\">2022</span> <span class=\"n\">x86_64</span> <span class=\"n\">x86_64</span> <span class=\"n\">x86_64</span> <span class=\"n\">GNU</span><span class=\"o\">/</span><span class=\"n\">Linux</span><span class=\"err\">$</span> <span class=\"n\">lsb_release</span> <span class=\"o\">-</span><span class=\"n\">a</span><span class=\"n\">No</span> <span class=\"n\">LSB</span> <span class=\"n\">modules</span> <span class=\"n\">are</span> <span class=\"n\">available</span><span class=\"p\">.</span><span class=\"n\">Distributor</span> <span class=\"n\">ID</span><span class=\"o\">:</span>\t<span class=\"n\">Linuxmint</span><span class=\"n\">Description</span><span class=\"o\">:</span>\t<span class=\"n\">Linux</span> <span class=\"n\">Mint</span> <span class=\"mi\">20</span><span class=\"p\">.</span><span class=\"mi\">3</span><span class=\"n\">Release</span><span class=\"o\">:</span>\t<span class=\"mi\">20</span><span class=\"p\">.</span><span class=\"mi\">3</span><span class=\"n\">Codename</span><span class=\"o\">:</span>\t<span class=\"n\">una</span><span class=\"c1\">// $ cat /etc/*release</span><span class=\"n\">DISTRIB_ID</span><span class=\"o\">=</span><span class=\"n\">LinuxMint</span><span class=\"n\">DISTRIB_RELEASE</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">.</span><span class=\"mi\">3</span><span class=\"n\">DISTRIB_CODENAME</span><span class=\"o\">=</span><span class=\"n\">una</span><span class=\"n\">DISTRIB_DESCRIPTION</span><span class=\"o\">=</span><span class=\"s\">\"Linux Mint 20.3 Una\"</span><span class=\"n\">NAME</span><span class=\"o\">=</span><span class=\"s\">\"Linux Mint\"</span><span class=\"n\">VERSION</span><span class=\"o\">=</span><span class=\"s\">\"20.3 (Una)\"</span><span class=\"n\">ID</span><span class=\"o\">=</span><span class=\"n\">linuxmint</span><span class=\"n\">ID_LIKE</span><span class=\"o\">=</span><span class=\"n\">ubuntu</span><span class=\"n\">PRETTY_NAME</span><span class=\"o\">=</span><span class=\"s\">\"Linux Mint 20.3\"</span><span class=\"n\">VERSION_ID</span><span class=\"o\">=</span><span class=\"s\">\"20.3\"</span><span class=\"n\">HOME_URL</span><span class=\"o\">=</span><span class=\"s\">\"https://www.linuxmint.com/\"</span><span class=\"n\">SUPPORT_URL</span><span class=\"o\">=</span><span class=\"s\">\"https://forums.linuxmint.com/\"</span><span class=\"n\">BUG_REPORT_URL</span><span class=\"o\">=</span><span class=\"s\">\"http://linuxmint-troubleshooting-guide.readthedocs.io/en/latest/\"</span><span class=\"n\">PRIVACY_POLICY_URL</span><span class=\"o\">=</span><span class=\"s\">\"https://www.linuxmint.com/\"</span><span class=\"n\">VERSION_CODENAME</span><span class=\"o\">=</span><span class=\"n\">una</span><span class=\"n\">UBUNTU_CODENAME</span><span class=\"o\">=</span><span class=\"n\">focal</span><span class=\"c1\">// $ cat /etc/*/*release</span><span class=\"p\">...</span>  <span class=\"n\">DISTRIB_ID</span><span class=\"o\">=</span><span class=\"n\">Ubuntu</span><span class=\"n\">DISTRIB_RELEASE</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">.</span><span class=\"mo\">04</span><span class=\"n\">DISTRIB_CODENAME</span><span class=\"o\">=</span><span class=\"n\">focal</span><span class=\"n\">DISTRIB_DESCRIPTION</span><span class=\"o\">=</span><span class=\"s\">\"Ubuntu Focal Fossa\"</span></code></pre></div></div>",
            "url": "https://mrprajesh.co.in/blog/how-to-know-mint-version.html",
            
            
            
            "tags": ["linux","ubuntu","mint"],
            
            "date_published": "2023-03-06T13:49:59+05:30",
            "date_modified": "2023-03-06T13:49:59+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/base-dir-names-realpath.html",
            "title": "base dir names realpath",
            "summary": null,
            "content_text": "",
            "content_html": "",
            "url": "https://mrprajesh.co.in/blog/base-dir-names-realpath.html",
            
            
            
            "tags": ["linux","shell"],
            
            "date_published": "2023-01-15T19:51:48+05:30",
            "date_modified": "2023-01-15T19:51:48+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/how-to-artifact.html",
            "title": "How to (not) Artifact your code",
            "summary": null,
            "content_text": "Art of ArtifactingSome of my experience during my research work on building the artifact for our paper.  Disclaimer: Purely out of my own experiences which is likely to refine/modify as I go along!  List the requirements of software/OS/driver and hardware.  Any library dependencies, version, etc. You must mention the environment it is tested on!  Perform all the baseline computations on the same hardware platform.  Include all the testcases or input instances or have makefile to wget form URL.  Get instances from published work URLs. Eg. CVRP LIB, STEINLIB, TSPLIB, DIMACS.  Mostly, your code should handle different input formats (or parts) without editing inputs.  In the worst case, if we are modifying the inputs, we should have provided the converter  Executable should’ve help/man options – list all runtime args+their default values if not set.  The output should’ve meaningful labels than printing out just numbers.  We should print the time, solution value and solution (optional).  The validation routine can be included (in or separate) that prints if the solution is in/valid.  We can enable/disable via arg some or part of the output.  This holds for approx algorithms and parallelizing algorithms from sequential implementation to match/check the expected output.More points.  We must bundle the artifact after submission.  We must have git/zenodo URL with README.  Our README must have instructions to build and reproduce your/baseline results.  We must have a script that runs all the inputs.  We must have a script to run each/all baselines.Legends  Artifact. Source code of a research paper to get its plot/fig/times  baseline. Code/comparison paper  exe. Executable.  testcase. Input instances or file for the program.",
            "content_html": "<h2 id=\"art-of-artifacting\">Art of Artifacting</h2><p>Some of my experience during my research work on building the artifact for our paper.</p><blockquote>  <p><strong>Disclaimer:</strong> Purely out of my own experiences which is likely to refine/modify as I go along!</p></blockquote><ol>  <li>List the requirements of software/OS/driver and hardware.</li>  <li>Any library dependencies, version, etc. You must mention the environment it is tested on!</li>  <li>Perform all the baseline computations on the same hardware platform.</li>  <li>Include all the testcases or input instances or have makefile to wget form URL.</li>  <li>Get instances from published work URLs. Eg. CVRP LIB, STEINLIB, TSPLIB, DIMACS.</li>  <li>Mostly, your code should handle different input formats (or parts) without editing inputs.</li>  <li>In the worst case, if we are modifying the inputs, we should have provided the converter</li>  <li>Executable should’ve help/man options – list all runtime args+their default values if not set.</li>  <li>The output should’ve meaningful labels than printing out just numbers.</li>  <li>We should print the time, solution value and solution (optional).</li>  <li>The validation routine can be included (in or separate) that prints if the solution is in/valid.</li>  <li>We can enable/disable via arg some or part of the output.</li>  <li>This holds for approx algorithms and parallelizing algorithms from sequential implementation to match/check the expected output.</li></ol><h2 id=\"more-points\">More points.</h2><ul>  <li>We must bundle the artifact after submission.</li>  <li>We must have git/zenodo URL with <code class=\"language-plaintext highlighter-rouge\">README</code>.</li>  <li>Our <code class=\"language-plaintext highlighter-rouge\">README</code> must have instructions to build and reproduce your/baseline results.</li>  <li>We must have a script that runs all the inputs.</li>  <li>We must have a script to run each/all baselines.</li></ul><h3 id=\"legends\">Legends</h3><ul>  <li>Artifact. Source code of a research paper to get its plot/fig/times</li>  <li>baseline. Code/comparison paper</li>  <li>exe. Executable.</li>  <li>testcase. Input instances or file for the program.</li></ul>",
            "url": "https://mrprajesh.co.in/blog/how-to-artifact.html",
            
            
            
            "tags": ["research","artifact"],
            
            "date_published": "2023-01-03T12:11:05+05:30",
            "date_modified": "2023-01-03T12:11:05+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/decoding-gcc-compile-options.html",
            "title": "Decoding gcc compile options",
            "summary": null,
            "content_text": "GCC/G++ has wide variety of options.Most used options.-c    // just complie to .o file-o    // name of the executable-Wall // display all warnings-lm   // link math lib  .a static library  .so shared object/(dynamic) library  .o object fileMore advanced options-shared -o libfoo.so -lfoo-I     // Checks for dir of the include headers in addtion to default-L     // checks for lib dir for libraries (in addtion to default) at link time-rpath // checks for lib dir for libraries (in addtion to default) at run  timereadelf -d libfoobar.so 0x0000000000000001 (NEEDED)             Shared library: [libfoo.so] 0x0000000000000001 (NEEDED)             Shared library: [libbar.so]readelf -d prog  0x0000000000000001 (NEEDED)             Shared library: [libfoobar.so] 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6] 0x000000000000001d (RUNPATH)            Library runpath: [.]strings /usr/lib/x86_64-linux-gnu/libstdc++.so.6 | grep GLIBCXXGLIBCXX_3.4GLIBCXX_3.4.1..GLIBCXX_3.4.29GLIBCXX_DEBUG_MESSAGE_LENGTH",
            "content_html": "<p>GCC/G++ has wide variety of options.</p><p>Most used options.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">-</span><span class=\"n\">c</span>    <span class=\"c1\">// just complie to .o file</span><span class=\"o\">-</span><span class=\"n\">o</span>    <span class=\"c1\">// name of the executable</span><span class=\"o\">-</span><span class=\"n\">Wall</span> <span class=\"c1\">// display all warnings</span><span class=\"o\">-</span><span class=\"n\">lm</span>   <span class=\"c1\">// link math lib</span></code></pre></div></div><ul>  <li><code class=\"language-plaintext highlighter-rouge\">.a</code> static library</li>  <li><code class=\"language-plaintext highlighter-rouge\">.so</code> shared object/(dynamic) library</li>  <li><code class=\"language-plaintext highlighter-rouge\">.o</code> object file</li></ul><p>More advanced options</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">-</span><span class=\"n\">shared</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">libfoo</span><span class=\"p\">.</span><span class=\"n\">so</span> <span class=\"o\">-</span><span class=\"n\">lfoo</span><span class=\"o\">-</span><span class=\"n\">I</span>     <span class=\"c1\">// Checks for dir of the include headers in addtion to default</span><span class=\"o\">-</span><span class=\"n\">L</span>     <span class=\"c1\">// checks for lib dir for libraries (in addtion to default) at link time</span><span class=\"o\">-</span><span class=\"n\">rpath</span> <span class=\"c1\">// checks for lib dir for libraries (in addtion to default) at run  time</span></code></pre></div></div><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">readelf</span> <span class=\"o\">-</span><span class=\"n\">d</span> <span class=\"n\">libfoobar</span><span class=\"p\">.</span><span class=\"n\">so</span> <span class=\"mh\">0x0000000000000001</span> <span class=\"p\">(</span><span class=\"n\">NEEDED</span><span class=\"p\">)</span>             <span class=\"n\">Shared</span> <span class=\"n\">library</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"n\">libfoo</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"p\">]</span> <span class=\"mh\">0x0000000000000001</span> <span class=\"p\">(</span><span class=\"n\">NEEDED</span><span class=\"p\">)</span>             <span class=\"n\">Shared</span> <span class=\"n\">library</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"n\">libbar</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"p\">]</span><span class=\"n\">readelf</span> <span class=\"o\">-</span><span class=\"n\">d</span> <span class=\"n\">prog</span>  <span class=\"mh\">0x0000000000000001</span> <span class=\"p\">(</span><span class=\"n\">NEEDED</span><span class=\"p\">)</span>             <span class=\"n\">Shared</span> <span class=\"n\">library</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"n\">libfoobar</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"p\">]</span> <span class=\"mh\">0x0000000000000001</span> <span class=\"p\">(</span><span class=\"n\">NEEDED</span><span class=\"p\">)</span>             <span class=\"n\">Shared</span> <span class=\"n\">library</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"n\">libc</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"p\">.</span><span class=\"mi\">6</span><span class=\"p\">]</span> <span class=\"mh\">0x000000000000001d</span> <span class=\"p\">(</span><span class=\"n\">RUNPATH</span><span class=\"p\">)</span>            <span class=\"n\">Library</span> <span class=\"n\">runpath</span><span class=\"o\">:</span> <span class=\"p\">[.]</span><span class=\"n\">strings</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">libstdc</span><span class=\"o\">++</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"p\">.</span><span class=\"mi\">6</span> <span class=\"o\">|</span> <span class=\"n\">grep</span> <span class=\"n\">GLIBCXX</span><span class=\"n\">GLIBCXX_3</span><span class=\"p\">.</span><span class=\"mi\">4</span><span class=\"n\">GLIBCXX_3</span><span class=\"p\">.</span><span class=\"mi\">4</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"p\">..</span><span class=\"n\">GLIBCXX_3</span><span class=\"p\">.</span><span class=\"mi\">4</span><span class=\"p\">.</span><span class=\"mi\">29</span><span class=\"n\">GLIBCXX_DEBUG_MESSAGE_LENGTH</span></code></pre></div></div><script src=\"https://gist.github.com/mrprajesh/4229185c0047d5d165480d82866c6037.js\"></script>",
            "url": "https://mrprajesh.co.in/blog/decoding-gcc-compile-options.html",
            
            
            
            
            
            "date_published": "2022-12-29T03:55:04+05:30",
            "date_modified": "2022-12-29T03:55:04+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/resolving-protonvpn-on-linuxmint.html",
            "title": "Resolving ProtonVPN on linuxmint",
            "summary": null,
            "content_text": "Despite following ProtonVPN’s official documentationI want not able to make the GUI app working (loading forever and said Network issue detected or Network error.) whereas the protonvpn-cli worked right out of the box.It turns out that it is due to some library mismatch but I couldn’t fix.SystemError: ffi_prep_closure(): bad user_data (it seems that the version  \\of the libffi library seen at runtime is different from the 'ffi.h'        \\file seen at compile-time)I sought the help of the support team and it resolved the problem – to remove some cffi packages.python3 -m pip uninstall cffi argon2-cffi  argon2-cffi-bindingsLet’s blaster! :wink:",
            "content_html": "<p>Despite following ProtonVPN’s <a href=\"https://protonvpn.com/support/official-linux-vpn-mint/\">official documentation</a>I want not able to make the GUI app working (loading forever and said Network issue detected or Network error.) whereas the <code class=\"language-plaintext highlighter-rouge\">protonvpn-cli</code> worked right out of the box.It turns out that it is due to some library mismatch but I couldn’t fix.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">SystemError</span><span class=\"o\">:</span> <span class=\"n\">ffi_prep_closure</span><span class=\"p\">()</span><span class=\"o\">:</span> <span class=\"n\">bad</span> <span class=\"n\">user_data</span> <span class=\"p\">(</span><span class=\"n\">it</span> <span class=\"n\">seems</span> <span class=\"n\">that</span> <span class=\"n\">the</span> <span class=\"n\">version</span>  \\<span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">libffi</span> <span class=\"n\">library</span> <span class=\"n\">seen</span> <span class=\"n\">at</span> <span class=\"n\">runtime</span> <span class=\"n\">is</span> <span class=\"n\">different</span> <span class=\"n\">from</span> <span class=\"n\">the</span> <span class=\"err\">'</span><span class=\"n\">ffi</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"err\">'</span>        \\<span class=\"n\">file</span> <span class=\"n\">seen</span> <span class=\"n\">at</span> <span class=\"n\">compile</span><span class=\"o\">-</span><span class=\"n\">time</span><span class=\"p\">)</span></code></pre></div></div><p>I sought the help of the support team and it resolved the problem – to remove some <code class=\"language-plaintext highlighter-rouge\">cffi</code> packages.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">python3</span> <span class=\"o\">-</span><span class=\"n\">m</span> <span class=\"n\">pip</span> <span class=\"n\">uninstall</span> <span class=\"n\">cffi</span> <span class=\"n\">argon2</span><span class=\"o\">-</span><span class=\"n\">cffi</span>  <span class=\"n\">argon2</span><span class=\"o\">-</span><span class=\"n\">cffi</span><span class=\"o\">-</span><span class=\"n\">bindings</span></code></pre></div></div><p>Let’s blaster! :wink:</p>",
            "url": "https://mrprajesh.co.in/blog/resolving-protonvpn-on-linuxmint.html",
            
            
            
            "tags": ["protonvpn","vpn","linuxmint","ubuntu"],
            
            "date_published": "2022-12-29T01:52:22+05:30",
            "date_modified": "2022-12-29T01:52:22+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/understand-cuda-packages-using-pip.html",
            "title": "Understanding CUDA packages installed using pip -- errors & fix",
            "summary": null,
            "content_text": "After we install newer CUDA toolkit some python code written using numpy+cupy+numba showed the below error on running.Yes, even after setting the newer cuda home export CUDA_HOME=/usr/local/cuda-11.5.Traceback (most recent call last):  File \"ga-vrp-gpu.py\", line 684, in &lt;module&gt;    calc_cost_gpu[blocks, threads_per_block](data_d, popsize, vrp_capacity, cost_table_d)  File \"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/compiler.py\", line 804, in __call__    kernel = self.specialize(*args)  File \"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/compiler.py\", line 815, in specialize    kernel = self.compile(argtypes)  File \"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/compiler.py\", line 834, in compile    kernel.bind()  File \"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/compiler.py\", line 548, in bind    self._func.get()  File \"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/compiler.py\", line 426, in get    ptx = self.ptx.get()  File \"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/compiler.py\", line 397, in get    **self._extra_options)  File \"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/cudadrv/nvvm.py\", line 496, in llvm_to_ptx    ptx = cu.compile(**opts)  File \"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/cudadrv/nvvm.py\", line 233, in compile    self._try_error(err, 'Failed to compile\\n')  File \"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/cudadrv/nvvm.py\", line 251, in _try_error    self.driver.check_error(err, \"%s\\n%s\" % (msg, self.get_log()))  File \"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/cudadrv/nvvm.py\", line 141, in check_error    raise excnumba.cuda.cudadrv.error.NvvmError: Failed to compile&lt;unnamed&gt; (60, 22): parse expected comma after load's typeNVVM_ERROR_COMPILATIONSteps to Resolve.  Uninstall dependencies pip3 uninstall cupy numba numpy  Set newer environment export CUDA_HOME=/usr/local/cuda-11.5  Install again. pip3 install cupy numba numpy  Make sure to export CUDA_HOME  or in .bashrc before running python3 gpu-program.pyOffice useCollect env detailsTook this from pytorch git repo.# For security purposes, please check the contents of collect_env.py before running it.wget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py python3 collect_env.pyMy env details.On my local machine.Collecting environment information...PyTorch version: 1.13.0+cu117Is debug build: FalseCUDA used to build PyTorch: 11.7ROCM used to build PyTorch: N/AOS: Linux Mint 20.3 (x86_64)GCC version: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0Clang version: Could not collectCMake version: version 3.16.3Libc version: glibc-2.31Python version: 3.8.10 (default, Jun 22 2022, 20:18:18)  [GCC 9.4.0] (64-bit runtime)Python platform: Linux-5.15.0-41-generic-x86_64-with-glibc2.29Is CUDA available: TrueCUDA runtime version: 11.7.64CUDA_MODULE_LOADING set to: LAZYGPU models and configuration: GPU 0: NVIDIA GeForce RTX 3060 Laptop GPUNvidia driver version: 515.48.07cuDNN version: Could not collectHIP runtime version: N/AMIOpen runtime version: N/AIs XNNPACK available: TrueVersions of relevant libraries:[pip3] numpy==1.23.5[pip3] torch==1.13.0[pip3] torchaudio==0.13.0[pip3] torchvision==0.14.0[conda] No relevant packages",
            "content_html": "<p>After we install newer CUDA toolkit some python code written using numpy+cupy+numba showed the below error on running.Yes, even after setting the newer cuda home <code class=\"language-plaintext highlighter-rouge\">export CUDA_HOME=/usr/local/cuda-11.5</code>.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">)</span><span class=\"o\">:</span>  <span class=\"n\">File</span> <span class=\"s\">\"ga-vrp-gpu.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">684</span><span class=\"p\">,</span> <span class=\"n\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>    <span class=\"n\">calc_cost_gpu</span><span class=\"p\">[</span><span class=\"n\">blocks</span><span class=\"p\">,</span> <span class=\"n\">threads_per_block</span><span class=\"p\">](</span><span class=\"n\">data_d</span><span class=\"p\">,</span> <span class=\"n\">popsize</span><span class=\"p\">,</span> <span class=\"n\">vrp_capacity</span><span class=\"p\">,</span> <span class=\"n\">cost_table_d</span><span class=\"p\">)</span>  <span class=\"n\">File</span> <span class=\"s\">\"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/compiler.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">804</span><span class=\"p\">,</span> <span class=\"n\">in</span> <span class=\"n\">__call__</span>    <span class=\"n\">kernel</span> <span class=\"o\">=</span> <span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">specialize</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>  <span class=\"n\">File</span> <span class=\"s\">\"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/compiler.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">815</span><span class=\"p\">,</span> <span class=\"n\">in</span> <span class=\"n\">specialize</span>    <span class=\"n\">kernel</span> <span class=\"o\">=</span> <span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"n\">argtypes</span><span class=\"p\">)</span>  <span class=\"n\">File</span> <span class=\"s\">\"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/compiler.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">834</span><span class=\"p\">,</span> <span class=\"n\">in</span> <span class=\"n\">compile</span>    <span class=\"n\">kernel</span><span class=\"p\">.</span><span class=\"n\">bind</span><span class=\"p\">()</span>  <span class=\"n\">File</span> <span class=\"s\">\"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/compiler.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">548</span><span class=\"p\">,</span> <span class=\"n\">in</span> <span class=\"n\">bind</span>    <span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">_func</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>  <span class=\"n\">File</span> <span class=\"s\">\"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/compiler.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">426</span><span class=\"p\">,</span> <span class=\"n\">in</span> <span class=\"n\">get</span>    <span class=\"n\">ptx</span> <span class=\"o\">=</span> <span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">ptx</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>  <span class=\"n\">File</span> <span class=\"s\">\"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/compiler.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">397</span><span class=\"p\">,</span> <span class=\"n\">in</span> <span class=\"n\">get</span>    <span class=\"o\">**</span><span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">_extra_options</span><span class=\"p\">)</span>  <span class=\"n\">File</span> <span class=\"s\">\"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/cudadrv/nvvm.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">496</span><span class=\"p\">,</span> <span class=\"n\">in</span> <span class=\"n\">llvm_to_ptx</span>    <span class=\"n\">ptx</span> <span class=\"o\">=</span> <span class=\"n\">cu</span><span class=\"p\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">opts</span><span class=\"p\">)</span>  <span class=\"n\">File</span> <span class=\"s\">\"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/cudadrv/nvvm.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">233</span><span class=\"p\">,</span> <span class=\"n\">in</span> <span class=\"n\">compile</span>    <span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">_try_error</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">,</span> <span class=\"err\">'</span><span class=\"n\">Failed</span> <span class=\"n\">to</span> <span class=\"n\">compile</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"err\">'</span><span class=\"p\">)</span>  <span class=\"n\">File</span> <span class=\"s\">\"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/cudadrv/nvvm.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">251</span><span class=\"p\">,</span> <span class=\"n\">in</span> <span class=\"n\">_try_error</span>    <span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">driver</span><span class=\"p\">.</span><span class=\"n\">check_error</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">,</span> <span class=\"s\">\"%s</span><span class=\"se\">\\n</span><span class=\"s\">%s\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">get_log</span><span class=\"p\">()))</span>  <span class=\"n\">File</span> <span class=\"s\">\"/home/rajesh/.local/lib/python3.6/site-packages/numba/cuda/cudadrv/nvvm.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">141</span><span class=\"p\">,</span> <span class=\"n\">in</span> <span class=\"n\">check_error</span>    <span class=\"n\">raise</span> <span class=\"n\">exc</span><span class=\"n\">numba</span><span class=\"p\">.</span><span class=\"n\">cuda</span><span class=\"p\">.</span><span class=\"n\">cudadrv</span><span class=\"p\">.</span><span class=\"n\">error</span><span class=\"p\">.</span><span class=\"n\">NvvmError</span><span class=\"o\">:</span> <span class=\"n\">Failed</span> <span class=\"n\">to</span> <span class=\"n\">compile</span><span class=\"o\">&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;</span> <span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">parse</span> <span class=\"n\">expected</span> <span class=\"n\">comma</span> <span class=\"n\">after</span> <span class=\"n\">load</span><span class=\"err\">'</span><span class=\"n\">s</span> <span class=\"n\">type</span><span class=\"n\">NVVM_ERROR_COMPILATION</span></code></pre></div></div><h3 id=\"steps-to-resolve\">Steps to Resolve.</h3><ol>  <li>Uninstall dependencies <code class=\"language-plaintext highlighter-rouge\">pip3 uninstall cupy numba numpy</code></li>  <li>Set newer environment <code class=\"language-plaintext highlighter-rouge\">export CUDA_HOME=/usr/local/cuda-11.5</code></li>  <li>Install again. <code class=\"language-plaintext highlighter-rouge\">pip3 install cupy numba numpy</code></li>  <li>Make sure to export <code class=\"language-plaintext highlighter-rouge\">CUDA_HOME</code>  or in <code class=\"language-plaintext highlighter-rouge\">.bashrc</code> before running <code class=\"language-plaintext highlighter-rouge\">python3 gpu-program.py</code></li></ol><h2 id=\"office-use\">Office use</h2><h3 id=\"collect-env-details\">Collect env details</h3><p>Took this from pytorch git repo.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\"># For security purposes, please check the contents of collect_env.py before running it.</span><span class=\"n\">wget</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py </span><span class=\"n\">python3</span> <span class=\"n\">collect_env</span><span class=\"p\">.</span><span class=\"n\">py</span></code></pre></div></div><h3 id=\"my-env-details\">My env details.</h3><p>On my local machine.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">Collecting</span> <span class=\"n\">environment</span> <span class=\"n\">information</span><span class=\"p\">...</span><span class=\"n\">PyTorch</span> <span class=\"n\">version</span><span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"mi\">13</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"o\">+</span><span class=\"n\">cu117</span><span class=\"n\">Is</span> <span class=\"n\">debug</span> <span class=\"n\">build</span><span class=\"o\">:</span> <span class=\"n\">False</span><span class=\"n\">CUDA</span> <span class=\"n\">used</span> <span class=\"n\">to</span> <span class=\"n\">build</span> <span class=\"n\">PyTorch</span><span class=\"o\">:</span> <span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">7</span><span class=\"n\">ROCM</span> <span class=\"n\">used</span> <span class=\"n\">to</span> <span class=\"n\">build</span> <span class=\"n\">PyTorch</span><span class=\"o\">:</span> <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span><span class=\"n\">OS</span><span class=\"o\">:</span> <span class=\"n\">Linux</span> <span class=\"n\">Mint</span> <span class=\"mi\">20</span><span class=\"p\">.</span><span class=\"mi\">3</span> <span class=\"p\">(</span><span class=\"n\">x86_64</span><span class=\"p\">)</span><span class=\"n\">GCC</span> <span class=\"n\">version</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"n\">Ubuntu</span> <span class=\"mi\">9</span><span class=\"p\">.</span><span class=\"mi\">4</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"mi\">1u</span><span class=\"n\">buntu1</span><span class=\"o\">~</span><span class=\"mi\">20</span><span class=\"p\">.</span><span class=\"mo\">04</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"mi\">9</span><span class=\"p\">.</span><span class=\"mi\">4</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"n\">Clang</span> <span class=\"n\">version</span><span class=\"o\">:</span> <span class=\"n\">Could</span> <span class=\"n\">not</span> <span class=\"n\">collect</span><span class=\"n\">CMake</span> <span class=\"n\">version</span><span class=\"o\">:</span> <span class=\"n\">version</span> <span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"mi\">16</span><span class=\"p\">.</span><span class=\"mi\">3</span><span class=\"n\">Libc</span> <span class=\"n\">version</span><span class=\"o\">:</span> <span class=\"n\">glibc</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">.</span><span class=\"mi\">31</span><span class=\"n\">Python</span> <span class=\"n\">version</span><span class=\"o\">:</span> <span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"mi\">8</span><span class=\"p\">.</span><span class=\"mi\">10</span> <span class=\"p\">(</span><span class=\"k\">default</span><span class=\"p\">,</span> <span class=\"n\">Jun</span> <span class=\"mi\">22</span> <span class=\"mi\">2022</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"o\">:</span><span class=\"mi\">18</span><span class=\"o\">:</span><span class=\"mi\">18</span><span class=\"p\">)</span>  <span class=\"p\">[</span><span class=\"n\">GCC</span> <span class=\"mi\">9</span><span class=\"p\">.</span><span class=\"mi\">4</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"o\">-</span><span class=\"n\">bit</span> <span class=\"n\">runtime</span><span class=\"p\">)</span><span class=\"n\">Python</span> <span class=\"n\">platform</span><span class=\"o\">:</span> <span class=\"n\">Linux</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">.</span><span class=\"mi\">15</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"mi\">41</span><span class=\"o\">-</span><span class=\"n\">generic</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">with</span><span class=\"o\">-</span><span class=\"n\">glibc2</span><span class=\"p\">.</span><span class=\"mi\">29</span><span class=\"n\">Is</span> <span class=\"n\">CUDA</span> <span class=\"n\">available</span><span class=\"o\">:</span> <span class=\"n\">True</span><span class=\"n\">CUDA</span> <span class=\"n\">runtime</span> <span class=\"n\">version</span><span class=\"o\">:</span> <span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">7</span><span class=\"p\">.</span><span class=\"mi\">64</span><span class=\"n\">CUDA_MODULE_LOADING</span> <span class=\"n\">set</span> <span class=\"n\">to</span><span class=\"o\">:</span> <span class=\"n\">LAZY</span><span class=\"n\">GPU</span> <span class=\"n\">models</span> <span class=\"n\">and</span> <span class=\"n\">configuration</span><span class=\"o\">:</span> <span class=\"n\">GPU</span> <span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">NVIDIA</span> <span class=\"n\">GeForce</span> <span class=\"n\">RTX</span> <span class=\"mi\">3060</span> <span class=\"n\">Laptop</span> <span class=\"n\">GPU</span><span class=\"n\">Nvidia</span> <span class=\"n\">driver</span> <span class=\"n\">version</span><span class=\"o\">:</span> <span class=\"mi\">515</span><span class=\"p\">.</span><span class=\"mi\">48</span><span class=\"p\">.</span><span class=\"mo\">07</span><span class=\"n\">cuDNN</span> <span class=\"n\">version</span><span class=\"o\">:</span> <span class=\"n\">Could</span> <span class=\"n\">not</span> <span class=\"n\">collect</span><span class=\"n\">HIP</span> <span class=\"n\">runtime</span> <span class=\"n\">version</span><span class=\"o\">:</span> <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span><span class=\"n\">MIOpen</span> <span class=\"n\">runtime</span> <span class=\"n\">version</span><span class=\"o\">:</span> <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span><span class=\"n\">Is</span> <span class=\"n\">XNNPACK</span> <span class=\"n\">available</span><span class=\"o\">:</span> <span class=\"n\">True</span><span class=\"n\">Versions</span> <span class=\"n\">of</span> <span class=\"n\">relevant</span> <span class=\"n\">libraries</span><span class=\"o\">:</span><span class=\"p\">[</span><span class=\"n\">pip3</span><span class=\"p\">]</span> <span class=\"n\">numpy</span><span class=\"o\">==</span><span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"mi\">23</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"p\">[</span><span class=\"n\">pip3</span><span class=\"p\">]</span> <span class=\"n\">torch</span><span class=\"o\">==</span><span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"mi\">13</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">[</span><span class=\"n\">pip3</span><span class=\"p\">]</span> <span class=\"n\">torchaudio</span><span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">13</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">[</span><span class=\"n\">pip3</span><span class=\"p\">]</span> <span class=\"n\">torchvision</span><span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">14</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">[</span><span class=\"n\">conda</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"n\">relevant</span> <span class=\"n\">packages</span></code></pre></div></div>",
            "url": "https://mrprajesh.co.in/blog/understand-cuda-packages-using-pip.html",
            
            
            
            "tags": ["python","cuda","pip","cupy","numba","numpy"],
            
            "date_published": "2022-12-28T14:25:34+05:30",
            "date_modified": "2022-12-28T14:25:34+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/dockering-jupyter-notebook-for-cpp.html",
            "title": "Dockerizing Jupyter notebook for cpp",
            "summary": null,
            "content_text": "In continuation to my earlier post about running C++ Programs on Jypyter notebook.I just docker-ed those steps using my Github Repo. Cool! :sunglasses:We use docker :heart: to install xeus-cling underneath. Thanks to xeus-cling!Reqirements  Docker v20+ // My Docker Installation Post  Diskspace upto 5 GB.  Tested Ubuntu 20.04/Mint 20.3. Docker 20.10.22. Should work on similar OS or better.# Get my repo.git clone https://github.com/mrprajesh/jupyter-for-cpp.gitcd jupyter-for-cpp# Build. Get some Coffee!☕☕☕$ sudo docker build -t test:latest .  # Run$ sudo docker run -p 8888:8888 test:latest# open browser on the host machine: http://127.0.0.1:8888# You may run the last cell to see the output! This understanding helped a lot. I can now docker my artifact of our papers.Let’s docker!  :cowboy_hat_face:",
            "content_html": "<p>In continuation to my earlier post about <a href=\"https://mrprajesh.co.in/blog/how-to-run-cpp-on-jupyter-notebook.html\">running C++ Programs on Jypyter notebook</a>.I just docker-ed those steps using my <a href=\"https://github.com/mrprajesh/jupyter-for-cpp\">Github Repo</a>. Cool! :sunglasses:</p><p>We use <code class=\"language-plaintext highlighter-rouge\">docker</code> :heart: to install <code class=\"language-plaintext highlighter-rouge\">xeus-cling</code> underneath. Thanks to <a href=\"https://github.com/jupyter-xeus/xeus-cling\">xeus-cling!</a></p><h2 id=\"reqirements\">Reqirements</h2><ul>  <li>Docker v20+ // <a href=\"https://mrprajesh.co.in/blog/install-docker-on-linux.html\">My Docker Installation Post</a></li>  <li>Diskspace upto 5 GB.</li>  <li>Tested Ubuntu 20.04/Mint 20.3. Docker 20.10.22. Should work on similar OS or better.</li></ul><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\"># Get my repo.</span><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//github.com/mrprajesh/jupyter-for-cpp.git</span><span class=\"n\">cd</span> <span class=\"n\">jupyter</span><span class=\"o\">-</span><span class=\"k\">for</span><span class=\"o\">-</span><span class=\"n\">cpp</span><span class=\"cp\"># Build. Get some Coffee!☕☕☕</span><span class=\"err\">$</span> <span class=\"n\">sudo</span> <span class=\"n\">docker</span> <span class=\"n\">build</span> <span class=\"o\">-</span><span class=\"n\">t</span> <span class=\"n\">test</span><span class=\"o\">:</span><span class=\"n\">latest</span> <span class=\"p\">.</span>  <span class=\"cp\"># Run</span><span class=\"err\">$</span> <span class=\"n\">sudo</span> <span class=\"n\">docker</span> <span class=\"n\">run</span> <span class=\"o\">-</span><span class=\"n\">p</span> <span class=\"mi\">8888</span><span class=\"o\">:</span><span class=\"mi\">8888</span> <span class=\"n\">test</span><span class=\"o\">:</span><span class=\"n\">latest</span><span class=\"cp\"># open browser on the host machine: http://127.0.0.1:8888# You may run the last cell to see the output! </span></code></pre></div></div><p>This understanding helped a lot. I can now docker my artifact of our papers.Let’s docker!  :cowboy_hat_face:</p>",
            "url": "https://mrprajesh.co.in/blog/dockering-jupyter-notebook-for-cpp.html",
            
            
            
            "tags": ["cpp","jupyter","docker"],
            
            "date_published": "2022-12-27T16:55:01+05:30",
            "date_modified": "2022-12-27T16:55:01+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/install-docker-on-linux.html",
            "title": "How to Install Docker on Linux Mint or Ubuntu",
            "summary": null,
            "content_text": "Requirements  Tested on Ubuntu 20.04Steps for Installation.# Prereq# Step 0 &amp; 1$ sudo apt-get update$ sudo apt-get install ca-certificates curl gnupg lsb-release# Step 2. keyring$ sudo mkdir -p /etc/apt/keyrings$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg# Step. 3.A if Ubuntu$ echo \\  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\  $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null# Step. 3.B if Linux Mint 20.3. Note added \"focal\"  $ echo \\  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\  focal stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null################################  # Step 4. Install Docker################################  sudo apt-get update  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin  Testing InstallationIf docker is installed fine, it should display as below.sudo docker run hello-worldHello from Docker!This message shows that your installation appears to be working correctly.To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.    (amd64) 3. The Docker daemon created a new container from that image which runs the    executable that produces the output you are currently reading. 4. The Docker daemon streamed that output to the Docker client, which sent it    to your terminal.To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bashShare images, automate workflows, and more with a free Docker ID: https://hub.docker.com/For more examples and ideas, visit: https://docs.docker.com/get-started/Reference  Docker Official Guide",
            "content_html": "<h2 id=\"requirements\">Requirements</h2><ul>  <li>Tested on Ubuntu 20.04</li></ul><h2 id=\"steps-for-installation\">Steps for Installation.</h2><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\"># Prereq# Step 0 &amp; 1</span><span class=\"err\">$</span> <span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">update</span><span class=\"err\">$</span> <span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"n\">ca</span><span class=\"o\">-</span><span class=\"n\">certificates</span> <span class=\"n\">curl</span> <span class=\"n\">gnupg</span> <span class=\"n\">lsb</span><span class=\"o\">-</span><span class=\"n\">release</span><span class=\"cp\"># Step 2. keyring</span><span class=\"err\">$</span> <span class=\"n\">sudo</span> <span class=\"n\">mkdir</span> <span class=\"o\">-</span><span class=\"n\">p</span> <span class=\"o\">/</span><span class=\"n\">etc</span><span class=\"o\">/</span><span class=\"n\">apt</span><span class=\"o\">/</span><span class=\"n\">keyrings</span><span class=\"err\">$</span> <span class=\"n\">curl</span> <span class=\"o\">-</span><span class=\"n\">fsSL</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg</span><span class=\"cp\"># Step. 3.A if Ubuntu</span><span class=\"err\">$</span> <span class=\"n\">echo</span> \\  <span class=\"s\">\"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\  $(lsb_release -cs) stable\"</span> <span class=\"o\">|</span> <span class=\"n\">sudo</span> <span class=\"n\">tee</span> <span class=\"o\">/</span><span class=\"n\">etc</span><span class=\"o\">/</span><span class=\"n\">apt</span><span class=\"o\">/</span><span class=\"n\">sources</span><span class=\"p\">.</span><span class=\"n\">list</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"o\">/</span><span class=\"n\">docker</span><span class=\"p\">.</span><span class=\"n\">list</span> <span class=\"o\">&gt;</span> <span class=\"o\">/</span><span class=\"n\">dev</span><span class=\"o\">/</span><span class=\"n\">null</span><span class=\"cp\"># Step. 3.B if Linux Mint 20.3. Note added \"focal\"  </span><span class=\"err\">$</span> <span class=\"n\">echo</span> \\  <span class=\"s\">\"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\  focal stable\"</span> <span class=\"o\">|</span> <span class=\"n\">sudo</span> <span class=\"n\">tee</span> <span class=\"o\">/</span><span class=\"n\">etc</span><span class=\"o\">/</span><span class=\"n\">apt</span><span class=\"o\">/</span><span class=\"n\">sources</span><span class=\"p\">.</span><span class=\"n\">list</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"o\">/</span><span class=\"n\">docker</span><span class=\"p\">.</span><span class=\"n\">list</span> <span class=\"o\">&gt;</span> <span class=\"o\">/</span><span class=\"n\">dev</span><span class=\"o\">/</span><span class=\"n\">null</span><span class=\"cp\">################################  # Step 4. Install Docker################################  </span><span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">update</span>  <span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"n\">docker</span><span class=\"o\">-</span><span class=\"n\">ce</span> <span class=\"n\">docker</span><span class=\"o\">-</span><span class=\"n\">ce</span><span class=\"o\">-</span><span class=\"n\">cli</span> <span class=\"n\">containerd</span><span class=\"p\">.</span><span class=\"n\">io</span> <span class=\"n\">docker</span><span class=\"o\">-</span><span class=\"n\">compose</span><span class=\"o\">-</span><span class=\"n\">plugin</span>  </code></pre></div></div><h2 id=\"testing-installation\">Testing Installation</h2><p>If docker is installed fine, it should display as below.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">sudo</span> <span class=\"n\">docker</span> <span class=\"n\">run</span> <span class=\"n\">hello</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"n\">Hello</span> <span class=\"n\">from</span> <span class=\"n\">Docker</span><span class=\"o\">!</span><span class=\"n\">This</span> <span class=\"n\">message</span> <span class=\"n\">shows</span> <span class=\"n\">that</span> <span class=\"n\">your</span> <span class=\"n\">installation</span> <span class=\"n\">appears</span> <span class=\"n\">to</span> <span class=\"n\">be</span> <span class=\"n\">working</span> <span class=\"n\">correctly</span><span class=\"p\">.</span><span class=\"n\">To</span> <span class=\"n\">generate</span> <span class=\"n\">this</span> <span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">Docker</span> <span class=\"n\">took</span> <span class=\"n\">the</span> <span class=\"n\">following</span> <span class=\"n\">steps</span><span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"p\">.</span> <span class=\"n\">The</span> <span class=\"n\">Docker</span> <span class=\"n\">client</span> <span class=\"n\">contacted</span> <span class=\"n\">the</span> <span class=\"n\">Docker</span> <span class=\"n\">daemon</span><span class=\"p\">.</span> <span class=\"mi\">2</span><span class=\"p\">.</span> <span class=\"n\">The</span> <span class=\"n\">Docker</span> <span class=\"n\">daemon</span> <span class=\"n\">pulled</span> <span class=\"n\">the</span> <span class=\"s\">\"hello-world\"</span> <span class=\"n\">image</span> <span class=\"n\">from</span> <span class=\"n\">the</span> <span class=\"n\">Docker</span> <span class=\"n\">Hub</span><span class=\"p\">.</span>    <span class=\"p\">(</span><span class=\"n\">amd64</span><span class=\"p\">)</span> <span class=\"mi\">3</span><span class=\"p\">.</span> <span class=\"n\">The</span> <span class=\"n\">Docker</span> <span class=\"n\">daemon</span> <span class=\"n\">created</span> <span class=\"n\">a</span> <span class=\"n\">new</span> <span class=\"n\">container</span> <span class=\"n\">from</span> <span class=\"n\">that</span> <span class=\"n\">image</span> <span class=\"n\">which</span> <span class=\"n\">runs</span> <span class=\"n\">the</span>    <span class=\"n\">executable</span> <span class=\"n\">that</span> <span class=\"n\">produces</span> <span class=\"n\">the</span> <span class=\"n\">output</span> <span class=\"n\">you</span> <span class=\"n\">are</span> <span class=\"n\">currently</span> <span class=\"n\">reading</span><span class=\"p\">.</span> <span class=\"mi\">4</span><span class=\"p\">.</span> <span class=\"n\">The</span> <span class=\"n\">Docker</span> <span class=\"n\">daemon</span> <span class=\"n\">streamed</span> <span class=\"n\">that</span> <span class=\"n\">output</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">Docker</span> <span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">which</span> <span class=\"n\">sent</span> <span class=\"n\">it</span>    <span class=\"n\">to</span> <span class=\"n\">your</span> <span class=\"n\">terminal</span><span class=\"p\">.</span><span class=\"n\">To</span> <span class=\"n\">try</span> <span class=\"n\">something</span> <span class=\"n\">more</span> <span class=\"n\">ambitious</span><span class=\"p\">,</span> <span class=\"n\">you</span> <span class=\"n\">can</span> <span class=\"n\">run</span> <span class=\"n\">an</span> <span class=\"n\">Ubuntu</span> <span class=\"n\">container</span> <span class=\"n\">with</span><span class=\"o\">:</span> <span class=\"err\">$</span> <span class=\"n\">docker</span> <span class=\"n\">run</span> <span class=\"o\">-</span><span class=\"n\">it</span> <span class=\"n\">ubuntu</span> <span class=\"n\">bash</span><span class=\"n\">Share</span> <span class=\"n\">images</span><span class=\"p\">,</span> <span class=\"n\">automate</span> <span class=\"n\">workflows</span><span class=\"p\">,</span> <span class=\"n\">and</span> <span class=\"n\">more</span> <span class=\"n\">with</span> <span class=\"n\">a</span> <span class=\"n\">free</span> <span class=\"n\">Docker</span> <span class=\"n\">ID</span><span class=\"o\">:</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//hub.docker.com/</span><span class=\"n\">For</span> <span class=\"n\">more</span> <span class=\"n\">examples</span> <span class=\"n\">and</span> <span class=\"n\">ideas</span><span class=\"p\">,</span> <span class=\"n\">visit</span><span class=\"o\">:</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//docs.docker.com/get-started/</span></code></pre></div></div><h3 id=\"reference\">Reference</h3><ul>  <li><a href=\"https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository\">Docker Official Guide</a></li></ul>",
            "url": "https://mrprajesh.co.in/blog/install-docker-on-linux.html",
            
            
            
            "tags": ["docker","ubuntu","linuxmint"],
            
            "date_published": "2022-12-27T16:32:32+05:30",
            "date_modified": "2022-12-27T16:32:32+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/set-a-default-devtool-set-in-centos.html",
            "title": "How to set a default devtool set in CentOS.",
            "summary": null,
            "content_text": "We used to use the below command to enable a particular gcc or devtoolset as our earlier post suggested.scl enable devtoolset-9 bashUnfortunately, we can NOT put this into our .bashrc as it would trigger a forkbomb (infinite looping of sourcing bash).  It turns out a slightly modified command than the original produces intended effect avoiding forkbomb!source scl_source enable devtoolset-9Let’s append it into .bashrc and check gcc/g++ version upon login.g++ --versiong++ (GCC) 9.3.1 20200408 (Red Hat 9.3.1-2)Copyright (C) 2019 Free Software Foundation, Inc.This is free software; see the source for copying conditions.  There is NOwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.Assuming you have already installed devtoolset-9, if not, install using the cmds from office use section.Reference  https://unix.stackexchange.com/a/195219/484734  https://developers.redhat.com/products/developertoolset/hello-worldOffice use.# Login as root and install the required version. su -yum update #optional step.yum install devtoolset-9",
            "content_html": "<p>We used to use the below command to enable a particular <code class=\"language-plaintext highlighter-rouge\">gcc</code> or <code class=\"language-plaintext highlighter-rouge\">devtoolset</code> as our <a href=\"https://mrprajesh.co.in/blog//devtoolset-on-centos.html\">earlier post suggested.</a></p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">scl</span> <span class=\"n\">enable</span> <span class=\"n\">devtoolset</span><span class=\"o\">-</span><span class=\"mi\">9</span> <span class=\"n\">bash</span></code></pre></div></div><p>Unfortunately, we can NOT put this into our <code class=\"language-plaintext highlighter-rouge\">.bashrc</code> as it would trigger a forkbomb (infinite looping of sourcing bash).</p><blockquote>  <p>It turns out a slightly modified command than the original produces intended effect avoiding forkbomb!</p></blockquote><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">source</span> <span class=\"n\">scl_source</span> <span class=\"n\">enable</span> <span class=\"n\">devtoolset</span><span class=\"o\">-</span><span class=\"mi\">9</span></code></pre></div></div><p>Let’s append it into <code class=\"language-plaintext highlighter-rouge\">.bashrc</code> and check gcc/g++ version upon login.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">g</span><span class=\"o\">++</span> <span class=\"o\">--</span><span class=\"n\">version</span><span class=\"n\">g</span><span class=\"o\">++</span> <span class=\"p\">(</span><span class=\"n\">GCC</span><span class=\"p\">)</span> <span class=\"mi\">9</span><span class=\"p\">.</span><span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"mi\">1</span> <span class=\"mi\">20200408</span> <span class=\"p\">(</span><span class=\"n\">Red</span> <span class=\"n\">Hat</span> <span class=\"mi\">9</span><span class=\"p\">.</span><span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"n\">Copyright</span> <span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">)</span> <span class=\"mi\">2019</span> <span class=\"n\">Free</span> <span class=\"n\">Software</span> <span class=\"n\">Foundation</span><span class=\"p\">,</span> <span class=\"n\">Inc</span><span class=\"p\">.</span><span class=\"n\">This</span> <span class=\"n\">is</span> <span class=\"n\">free</span> <span class=\"n\">software</span><span class=\"p\">;</span> <span class=\"n\">see</span> <span class=\"n\">the</span> <span class=\"n\">source</span> <span class=\"k\">for</span> <span class=\"n\">copying</span> <span class=\"n\">conditions</span><span class=\"p\">.</span>  <span class=\"n\">There</span> <span class=\"n\">is</span> <span class=\"n\">NO</span><span class=\"n\">warranty</span><span class=\"p\">;</span> <span class=\"n\">not</span> <span class=\"n\">even</span> <span class=\"k\">for</span> <span class=\"n\">MERCHANTABILITY</span> <span class=\"n\">or</span> <span class=\"n\">FITNESS</span> <span class=\"n\">FOR</span> <span class=\"n\">A</span> <span class=\"n\">PARTICULAR</span> <span class=\"n\">PURPOSE</span><span class=\"p\">.</span></code></pre></div></div><p>Assuming you have already installed devtoolset-9, if not, install using the cmds from office use section.</p><h2 id=\"reference\">Reference</h2><ul>  <li><a href=\"https://unix.stackexchange.com/a/195219/484734\">https://unix.stackexchange.com/a/195219/484734</a></li>  <li><a href=\"https://developers.redhat.com/products/developertoolset/hello-world\">https://developers.redhat.com/products/developertoolset/hello-world</a></li></ul><h2 id=\"office-use\">Office use.</h2><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\"># Login as root and install the required version. </span><span class=\"n\">su</span> <span class=\"o\">-</span><span class=\"n\">yum</span> <span class=\"n\">update</span> <span class=\"err\">#</span><span class=\"n\">optional</span> <span class=\"n\">step</span><span class=\"p\">.</span><span class=\"n\">yum</span> <span class=\"n\">install</span> <span class=\"n\">devtoolset</span><span class=\"o\">-</span><span class=\"mi\">9</span></code></pre></div></div>",
            "url": "https://mrprajesh.co.in/blog/set-a-default-devtool-set-in-centos.html",
            
            
            
            "tags": ["cpp","gcc","devtoolset","linux"],
            
            "date_published": "2022-12-26T14:08:44+05:30",
            "date_modified": "2022-12-26T14:08:44+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/how-to-run-cpp-on-jupyter-notebook.html",
            "title": "How to run cpp on jupyter notebook",
            "summary": null,
            "content_text": "Requirements  Conda  Works on Ubuntu 20.04We use xeus-cling to run cpp on jupyter notebook.Check out My GitHub repo &amp; In case you have docker, you can do all the below in just 3 steps. Check out my other post! :heart_eyes:Just in case, you want to learn more but suffer/sweat/bleed a little then follow the below. :yum: :joy:#Download minconda Download and run file for linux x64 https://docs.conda.io/en/latest/miniconda.html                        # DO NOT ENABLE BY DEFAULTconda config --set auto_activate_base false# HAVE A DEFAULTconda update -n base -c defaults conda# CREATE ONE FOR CLINGconda create -n cling#INSTALL THE REQUIREDconda install jupyter conda install notebook#ACTIVATEconda activate cling   #okay!# INSTALLconda install xeus-cling -c conda-forge #NOT WORKING?#RUNjupyter notebook # Browsehttp://localhost:8888/Choose C++11/14/17 from dropdown based on requrement.The Activate and Run step is what we require after installation.Check out my github repogit clone https://github.com/mrprajesh/run-cpp-on-jupyter.gitcd run-cpp-on-jupyter#ACTIVATEconda activate cling   #RUNjupyter notebook # Open Browser, Write and Run# Usually it is http://localhost:8888/Office use.#ACTIVATEsource activate cling   #not working# LETS DOWNGRADEconda install xeus-cling==0.9.0 -c conda-forge# NOT WORKINGjupyter console --kernel xcpp14 jupyter kernelspec install PREFIX/share/jupyter/xcpp14 --sys-prefix",
            "content_html": "<h1 id=\"requirements\">Requirements</h1><ul>  <li>Conda</li>  <li>Works on Ubuntu 20.04</li></ul><p>We use <a href=\"https://github.com/jupyter-xeus/xeus-cling\">xeus-cling</a> to run cpp on jupyter notebook.Check out <a href=\"https://github.com/mrprajesh/run-cpp-on-jupyter\">My GitHub repo</a> &amp; <a href=\"https://mybinder.org/v2/gh/mrprajesh/run-cpp-on-jupyter/HEAD?labpath=HelloCppJupyter.ipynb\"><img src=\"https://mybinder.org/badge_logo.svg\" alt=\"Binder\" /></a></p><p>In case you have docker, you can do all the below in just 3 steps. Check out <a href=\"http://127.0.0.1:4000/blog/dockering-jupyter-notebook-for-cpp.html\">my other post!</a> :heart_eyes:Just in case, you want to learn more but suffer/sweat/bleed a little then follow the below. :yum: :joy:</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">#Download minconda </span><span class=\"n\">Download</span> <span class=\"n\">and</span> <span class=\"n\">run</span> <span class=\"n\">file</span> <span class=\"k\">for</span> <span class=\"n\">linux</span> <span class=\"n\">x64</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//docs.conda.io/en/latest/miniconda.html </span>                       <span class=\"cp\"># DO NOT ENABLE BY DEFAULT</span><span class=\"n\">conda</span> <span class=\"n\">config</span> <span class=\"o\">--</span><span class=\"n\">set</span> <span class=\"n\">auto_activate_base</span> <span class=\"nb\">false</span><span class=\"cp\"># HAVE A DEFAULT</span><span class=\"n\">conda</span> <span class=\"n\">update</span> <span class=\"o\">-</span><span class=\"n\">n</span> <span class=\"n\">base</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">defaults</span> <span class=\"n\">conda</span><span class=\"cp\"># CREATE ONE FOR CLING</span><span class=\"n\">conda</span> <span class=\"n\">create</span> <span class=\"o\">-</span><span class=\"n\">n</span> <span class=\"n\">cling</span><span class=\"cp\">#INSTALL THE REQUIRED</span><span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"n\">jupyter</span> <span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"n\">notebook</span><span class=\"cp\">#ACTIVATE</span><span class=\"n\">conda</span> <span class=\"n\">activate</span> <span class=\"n\">cling</span>   <span class=\"err\">#</span><span class=\"n\">okay</span><span class=\"o\">!</span><span class=\"cp\"># INSTALL</span><span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"n\">xeus</span><span class=\"o\">-</span><span class=\"n\">cling</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">conda</span><span class=\"o\">-</span><span class=\"n\">forge</span> <span class=\"err\">#</span><span class=\"n\">NOT</span> <span class=\"n\">WORKING</span><span class=\"o\">?</span><span class=\"cp\">#RUN</span><span class=\"n\">jupyter</span> <span class=\"n\">notebook</span> <span class=\"cp\"># Browse</span><span class=\"n\">http</span><span class=\"o\">:</span><span class=\"c1\">//localhost:8888/</span><span class=\"n\">Choose</span> <span class=\"n\">C</span><span class=\"o\">++</span><span class=\"mi\">11</span><span class=\"o\">/</span><span class=\"mi\">14</span><span class=\"o\">/</span><span class=\"mi\">17</span> <span class=\"n\">from</span> <span class=\"n\">dropdown</span> <span class=\"n\">based</span> <span class=\"n\">on</span> <span class=\"n\">requrement</span><span class=\"p\">.</span></code></pre></div></div><h3 id=\"the-activate-and-run-step-is-what-we-require-after-installation\">The Activate and Run step is what we require after installation.</h3><p>Check out my <a href=\"https://github.com/mrprajesh/run-cpp-on-jupyter\">github repo</a></p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//github.com/mrprajesh/run-cpp-on-jupyter.git</span><span class=\"n\">cd</span> <span class=\"n\">run</span><span class=\"o\">-</span><span class=\"n\">cpp</span><span class=\"o\">-</span><span class=\"n\">on</span><span class=\"o\">-</span><span class=\"n\">jupyter</span><span class=\"cp\">#ACTIVATE</span><span class=\"n\">conda</span> <span class=\"n\">activate</span> <span class=\"n\">cling</span>   <span class=\"cp\">#RUN</span><span class=\"n\">jupyter</span> <span class=\"n\">notebook</span> <span class=\"cp\"># Open Browser, Write and Run# Usually it is http://localhost:8888/</span></code></pre></div></div><h3 id=\"office-use\">Office use.</h3><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">#ACTIVATE</span><span class=\"n\">source</span> <span class=\"n\">activate</span> <span class=\"n\">cling</span>   <span class=\"err\">#</span><span class=\"n\">not</span> <span class=\"n\">working</span><span class=\"cp\"># LETS DOWNGRADE</span><span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"n\">xeus</span><span class=\"o\">-</span><span class=\"n\">cling</span><span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">9</span><span class=\"p\">.</span><span class=\"mi\">0</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">conda</span><span class=\"o\">-</span><span class=\"n\">forge</span><span class=\"cp\"># NOT WORKING</span><span class=\"n\">jupyter</span> <span class=\"n\">console</span> <span class=\"o\">--</span><span class=\"n\">kernel</span> <span class=\"n\">xcpp14</span> <span class=\"n\">jupyter</span> <span class=\"n\">kernelspec</span> <span class=\"n\">install</span> <span class=\"n\">PREFIX</span><span class=\"o\">/</span><span class=\"n\">share</span><span class=\"o\">/</span><span class=\"n\">jupyter</span><span class=\"o\">/</span><span class=\"n\">xcpp14</span> <span class=\"o\">--</span><span class=\"n\">sys</span><span class=\"o\">-</span><span class=\"n\">prefix</span></code></pre></div></div>",
            "url": "https://mrprajesh.co.in/blog/how-to-run-cpp-on-jupyter-notebook.html",
            
            
            
            "tags": ["cpp","jupyter","conda","cling"],
            
            "date_published": "2022-12-26T13:42:46+05:30",
            "date_modified": "2022-12-26T13:42:46+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/new-english-words.html",
            "title": "New english words",
            "summary": null,
            "content_text": "Some new terms that I got to know recently.      Scambaiter – / noun. computing slang / The practice of pretending to fall for fraudulent online schemes in order to waste the time of the perpetrators.Some popular ones. I am fan of Jim.    Declarative vs Imperative programming language          Declarative programming is a paradigm describing WHAT the program does, without explicitly specifying its control flow. Imperative programming is a paradigm describing HOW the program should do something by explicitly specifying each instruction (or statement) step by step, which mutate the program’s stateEg. Dec: Haskell/Erlang. Imp: C/CPP/Java.More pros and cons.Thanks to Conor Hoekstra.            Prompt.  After ChatGPT there is a lot of talk about geting your Prompt right!        Gross. very obvious and unacceptable.  //Sheena Melwani        Rhetorical question. A question asked in order to create a dramatic effect or to make a point rather than to get an answer. //Top Gun: Maverick        FWIW. For What is worth. //reddit        WTFPL. Do What The F-word You Want To Public License        Torricelli.  Torricelli’s mercury barometer. //During my training    Terse.  brief, concise, to the point. Using few words, sometimes in a way that seems rude or unfriendly",
            "content_html": "<h3 id=\"some-new-terms-that-i-got-to-know-recently\">Some new terms that I got to know recently.</h3><ol>  <li>    <p><strong>Scambaiter</strong> – / noun. computing slang / The practice of pretending to fall for fraudulent online schemes in order to waste the time of the perpetrators.<a href=\"https://www.about-fraud.com/2022/03/22/youtube-fraud-channels/\">Some popular ones</a>. I am fan of Jim.</p>  </li>  <li><strong>Declarative vs Imperative programming language</strong>    <blockquote>      <p><strong>Declarative programming</strong> is a paradigm describing WHAT the program does, without explicitly specifying its control flow. <strong>Imperative programming</strong> is a paradigm describing HOW the program should do something by explicitly specifying each instruction (or statement) step by step, which mutate the program’s stateEg. Dec: Haskell/Erlang. Imp: C/CPP/Java.<a href=\"https://www.geeksforgeeks.org/difference-between-imperative-and-declarative-programming/\">More pros and cons.</a>Thanks to Conor Hoekstra.</p>    </blockquote>  </li>  <li>    <p><strong>Prompt.</strong>  After ChatGPT there is a lot of talk about geting your <a href=\"https://en.wikipedia.org/wiki/Prompt_engineering\">Prompt</a> right!</p>  </li>  <li>    <p><strong>Gross.</strong> very obvious and unacceptable.  //Sheena Melwani</p>  </li>  <li>    <p><strong>Rhetorical question.</strong> A question asked in order to create a dramatic effect or to make a point rather than to get an answer. //Top Gun: Maverick</p>  </li>  <li>    <p><strong>FWIW.</strong> For What is worth. //reddit</p>  </li>  <li>    <p><strong>WTFPL.</strong> <a href=\"https://en.wikipedia.org/wiki/WTFPL\">Do What The F-word You Want To Public License</a></p>  </li>  <li>    <p><strong>Torricelli.</strong>  Torricelli’s mercury <a href=\"https://www.vacuumscienceworld.com/vacuum-science-facts/torricelli-mercury-barometer\">barometer</a>. //During my <a href=\"https://twitter.com/mrprajesh/status/1602171621242195968\">training</a></p>  </li>  <li><strong>Terse</strong>.  brief, concise, to the point. Using few words, sometimes in a way that seems rude or unfriendly</li></ol>",
            "url": "https://mrprajesh.co.in/blog/new-english-words.html",
            
            
            
            "tags": ["english","coding"],
            
            "date_published": "2022-12-23T13:49:23+05:30",
            "date_modified": "2022-12-23T13:49:23+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/how-to-run-cuda-programs-on-google-collab.html",
            "title": "How to run CUDA programs on Google Collab",
            "summary": null,
            "content_text": "Click this Collab to try it out! You may need to signing using gmail account.  Visit Google Collab  Choose run time as GPU. On Menubar, Runtime &gt; Change runtime &gt; select GPU as accelerator &amp; Save.  Connect if it did not connect automatically. You can see the status right top. Tick mark + RAM+DISK.  Install+Load the plugin by running the following.!pip install git+https://github.com/andreinechaev/nvcc4jupyter.git%load_ext nvcc_plugin  Write a CUDA Program and click run.%%cu#include &lt;stdio.h&gt;#include &lt;cuda.h&gt;__global__ void kernel(){  printf(\"Hi, I am Thread %d\\n\", threadIdx.x);}int main(){  kernel&lt;&lt;&lt;1,32&gt;&gt;&gt;();  cudaDeviceSynchronize();  return 0;}  You see the Reference section below for an alternate way to run CUDA!Office use.Last two steps should produce output something like this.!pip install git+https://github.com/andreinechaev/nvcc4jupyter.git%load_ext nvcc_pluginLooking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/Collecting git+https://github.com/andreinechaev/nvcc4jupyter.git  Cloning https://github.com/andreinechaev/nvcc4jupyter.git to /tmp/pip-req-build-s5n0gpv5  Running command git clone -q https://github.com/andreinechaev/nvcc4jupyter.git /tmp/pip-req-build-s5n0gpv5Building wheels for collected packages: NVCCPlugin  Building wheel for NVCCPlugin (setup.py) ... done  Created wheel for NVCCPlugin: filename=NVCCPlugin-0.0.2-py3-none-any.whl size=4304 sha256=9c3e8f18056b715a0a495cb582277bbfb1ec08efc8eb8b07df4e300cbd79c1e5  Stored in directory: /tmp/pip-ephem-wheel-cache-wn6sdoxp/wheels/f3/08/cc/e2b5b0e1c92df07dbb50a6f024a68ce090f5e7b2316b41756dSuccessfully built NVCCPluginInstalling collected packages: NVCCPluginSuccessfully installed NVCCPlugin-0.0.2created output directory at /content/srcOut bin /content/result.out%%cu#include &lt;stdio.h&gt;#include &lt;cuda.h&gt;__global__ void kernel(){  printf(\"Hi, I am Thread %d\\n\", threadIdx.x);}int main(){  kernel&lt;&lt;&lt;1,32&gt;&gt;&gt;();  cudaDeviceSynchronize();  return 0;}Hi, I am Thread 0Hi, I am Thread 1Hi, I am Thread 2Hi, I am Thread 3Hi, I am Thread 4Hi, I am Thread 5Hi, I am Thread 6Hi, I am Thread 7Hi, I am Thread 8Hi, I am Thread 9Hi, I am Thread 10Hi, I am Thread 11Hi, I am Thread 12Hi, I am Thread 13Hi, I am Thread 14Hi, I am Thread 15Hi, I am Thread 16Hi, I am Thread 17Hi, I am Thread 18Hi, I am Thread 19Hi, I am Thread 20Hi, I am Thread 21Hi, I am Thread 22Hi, I am Thread 23Hi, I am Thread 24Hi, I am Thread 25Hi, I am Thread 26Hi, I am Thread 27Hi, I am Thread 28Hi, I am Thread 29Hi, I am Thread 30Hi, I am Thread 31Reference  My video on YouTube.  My Google Collab page which also shows an alternate way to compile and run manually without the plugin.",
            "content_html": "<p><a href=\"https://colab.research.google.com/drive/10bGP2-M3Bh2ccgiwXh9Nygb--vchD-wh?usp=sharing\">Click this Collab</a> to try it out! You may need to signing using gmail account.</p><ol>  <li>Visit <a href=\"https://colab.research.google.com/\">Google Collab</a></li>  <li>Choose run time as GPU. On Menubar, Runtime &gt; Change runtime &gt; select GPU as accelerator &amp; Save.</li>  <li>Connect if it did not connect automatically. You can see the status right top. Tick mark + RAM+DISK.</li>  <li>Install+Load the plugin by running the following.</li></ol><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">!</span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">git</span><span class=\"o\">+</span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//github.com/andreinechaev/nvcc4jupyter.git</span><span class=\"o\">%</span><span class=\"n\">load_ext</span> <span class=\"n\">nvcc_plugin</span></code></pre></div></div><ol>  <li>Write a CUDA Program and click run.</li></ol><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">%%</span><span class=\"n\">cu</span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;stdio.h&gt;</span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;cuda.h&gt;</span><span class=\"cp\"></span><span class=\"n\">__global__</span> <span class=\"kt\">void</span> <span class=\"nf\">kernel</span><span class=\"p\">(){</span>  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Hi, I am Thread %d</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span> <span class=\"n\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"p\">}</span><span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(){</span>  <span class=\"n\">kernel</span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">32</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"p\">();</span>  <span class=\"n\">cudaDeviceSynchronize</span><span class=\"p\">();</span>  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"p\">}</span></code></pre></div></div><ol>  <li>You see the Reference section below for an alternate way to run CUDA!</li></ol><h3 id=\"office-use\">Office use.</h3><p>Last two steps should produce output something like this.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">!</span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">git</span><span class=\"o\">+</span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//github.com/andreinechaev/nvcc4jupyter.git</span><span class=\"o\">%</span><span class=\"n\">load_ext</span> <span class=\"n\">nvcc_plugin</span><span class=\"n\">Looking</span> <span class=\"n\">in</span> <span class=\"n\">indexes</span><span class=\"o\">:</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/</span><span class=\"n\">Collecting</span> <span class=\"n\">git</span><span class=\"o\">+</span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//github.com/andreinechaev/nvcc4jupyter.git</span>  <span class=\"n\">Cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//github.com/andreinechaev/nvcc4jupyter.git to /tmp/pip-req-build-s5n0gpv5</span>  <span class=\"n\">Running</span> <span class=\"n\">command</span> <span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"o\">-</span><span class=\"n\">q</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//github.com/andreinechaev/nvcc4jupyter.git /tmp/pip-req-build-s5n0gpv5</span><span class=\"n\">Building</span> <span class=\"n\">wheels</span> <span class=\"k\">for</span> <span class=\"n\">collected</span> <span class=\"n\">packages</span><span class=\"o\">:</span> <span class=\"n\">NVCCPlugin</span>  <span class=\"n\">Building</span> <span class=\"n\">wheel</span> <span class=\"k\">for</span> <span class=\"nf\">NVCCPlugin</span> <span class=\"p\">(</span><span class=\"n\">setup</span><span class=\"p\">.</span><span class=\"n\">py</span><span class=\"p\">)</span> <span class=\"p\">...</span> <span class=\"n\">done</span>  <span class=\"n\">Created</span> <span class=\"n\">wheel</span> <span class=\"k\">for</span> <span class=\"n\">NVCCPlugin</span><span class=\"o\">:</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"n\">NVCCPlugin</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"o\">-</span><span class=\"n\">py3</span><span class=\"o\">-</span><span class=\"n\">none</span><span class=\"o\">-</span><span class=\"n\">any</span><span class=\"p\">.</span><span class=\"n\">whl</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">4304</span> <span class=\"n\">sha256</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"n\">c3e8f18056b715a0a495cb582277bbfb1ec08efc8eb8b07df4e300cbd79c1e5</span>  <span class=\"n\">Stored</span> <span class=\"n\">in</span> <span class=\"n\">directory</span><span class=\"o\">:</span> <span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">pip</span><span class=\"o\">-</span><span class=\"n\">ephem</span><span class=\"o\">-</span><span class=\"n\">wheel</span><span class=\"o\">-</span><span class=\"n\">cache</span><span class=\"o\">-</span><span class=\"n\">wn6sdoxp</span><span class=\"o\">/</span><span class=\"n\">wheels</span><span class=\"o\">/</span><span class=\"n\">f3</span><span class=\"o\">/</span><span class=\"mi\">08</span><span class=\"o\">/</span><span class=\"n\">cc</span><span class=\"o\">/</span><span class=\"n\">e2b5b0e1c92df07dbb50a6f024a68ce090f5e7b2316b41756d</span><span class=\"n\">Successfully</span> <span class=\"n\">built</span> <span class=\"n\">NVCCPlugin</span><span class=\"n\">Installing</span> <span class=\"n\">collected</span> <span class=\"n\">packages</span><span class=\"o\">:</span> <span class=\"n\">NVCCPlugin</span><span class=\"n\">Successfully</span> <span class=\"n\">installed</span> <span class=\"n\">NVCCPlugin</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"n\">created</span> <span class=\"n\">output</span> <span class=\"n\">directory</span> <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">content</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"n\">Out</span> <span class=\"n\">bin</span> <span class=\"o\">/</span><span class=\"n\">content</span><span class=\"o\">/</span><span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">out</span><span class=\"o\">%%</span><span class=\"n\">cu</span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;stdio.h&gt;</span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;cuda.h&gt;</span><span class=\"cp\"></span><span class=\"n\">__global__</span> <span class=\"kt\">void</span> <span class=\"n\">kernel</span><span class=\"p\">(){</span>  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Hi, I am Thread %d</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span> <span class=\"n\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"p\">}</span><span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(){</span>  <span class=\"n\">kernel</span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">32</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"p\">();</span>  <span class=\"n\">cudaDeviceSynchronize</span><span class=\"p\">();</span>  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"p\">}</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">0</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">1</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">2</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">3</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">4</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">5</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">6</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">7</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">8</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">9</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">10</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">11</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">12</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">13</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">14</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">15</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">16</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">17</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">18</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">19</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">20</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">21</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">22</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">23</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">24</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">25</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">26</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">27</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">28</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">29</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">30</span><span class=\"n\">Hi</span><span class=\"p\">,</span> <span class=\"n\">I</span> <span class=\"n\">am</span> <span class=\"n\">Thread</span> <span class=\"mi\">31</span></code></pre></div></div><h3 id=\"reference\">Reference</h3><ul>  <li>My <a href=\"url\">video</a> on YouTube.</li>  <li>My <a href=\"https://colab.research.google.com/drive/1xv2sZbgOO-HlyjL4Mq3Lkf3D0kj-ARCy?usp=sharing\">Google Collab page</a> which also shows an alternate way to compile and run manually without the plugin.</li></ul>",
            "url": "https://mrprajesh.co.in/blog/how-to-run-cuda-programs-on-google-collab.html",
            
            
            
            "tags": ["cuda","google","collab"],
            
            "date_published": "2022-12-15T01:22:06+05:30",
            "date_modified": "2022-12-15T01:22:06+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/how-to-build-custinger-or-hornet.html",
            "title": "How to Build cuStinger or Hornet",
            "summary": null,
            "content_text": "  On Ubuntu 20.04/Mint 20.3.  cuStinger is outdated. hornet is comparitively active.  cuHornet seems the future. Too bad they have not edited readme steps. Let’s fall back to hornet repo.  Tried the current master. SOA / AOS seems half baked.  Let’s try from release v0.5. Dowload this .zip Pre SOA and extract.  rename in external folder, cub-1.8.x to cub folder as CUB+Thrust is bundled with CUDA Now.  CMake 23 had some error w.r.t cuda architecture. using 3.16export CUDACXX=`which nvcc`cd hornet-0.5/hornet/buildrm -rf * ; cmake ..; make -j4  will get an error as in office use below.  on hornet-0.5/hornet/include/Core/DataLayout/DataLayoutDev.i.cuh  make Line 43 as AoSdev&lt;TArgs...&gt;::AoSdev(void* d_ptr):removed the template parm pack for ctor  rm -rf * ; cmake ..; make -j4rm -rf * ; cmake ..; make -j4-- The CXX compiler identification is GNU 9.4.0-- The CUDA compiler identification is NVIDIA 11.7.64-- Check for working CXX compiler: /usr/bin/c++-- Check for working CXX compiler: /usr/bin/c++ -- works-- Detecting CXX compiler ABI info-- Detecting CXX compiler ABI info - done-- Detecting CXX compile features-- Detecting CXX compile features - done-- Check for working CUDA compiler: /usr/local/cuda-11.7/bin/nvcc-- Check for working CUDA compiler: /usr/local/cuda-11.7/bin/nvcc -- works-- Detecting CUDA compiler ABI info-- Detecting CUDA compiler ABI info - done-- Found OpenMP_CXX: -fopenmp (found version \"4.5\") -- Found OpenMP: TRUE (found version \"4.5\")  -- Using Nvidia Tools Extension-- Configuring done-- Generating done-- Build files have been written to: /home/rajesh/temp/hornet-0.5/hornet/buildScanning dependencies of target hornet[  6%] Building CXX object CMakeFiles/hornet.dir/src/Util/CommandLineParam.cpp.o[  6%] Building CXX object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Device/Util/CudaUtil.cpp.o[  9%] Building CXX object CMakeFiles/hornet.dir/src/Util/BatchFunctions.cpp.o[ 12%] Building CXX object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Device/Util/DeviceProperties.cpp.o[ 15%] Building CXX object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Device/Util/SafeCudaAPI.cpp.o[ 18%] Building CXX object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Graph/BFS.cpp.o[ 21%] Building CXX object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Graph/BellmanFord.cpp.o[ 25%] Building CXX object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Graph/Brim.cpp.o[ 28%] Building CXX object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Graph/Dijkstra.cpp.o[ 31%] Building CXX object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Graph/GraphBase.cpp.o[ 34%] Building CXX object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Graph/GraphStd.cpp.o[ 37%] Building CXX object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Graph/GraphStdRead.cpp.o[ 40%] Building CXX object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Graph/GraphWeight.cpp.o[ 43%] Building CXX object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Graph/GraphWeightRead.cpp.o[ 46%] Building CXX object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Graph/SCC.cpp.o[ 50%] Building CXX object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Graph/WCC.cpp.o[ 53%] Building CXX object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Host/FileUtil.cpp.o[ 56%] Building CXX object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Host/PrintExt.cpp.o[ 59%] Building CUDA object CMakeFiles/hornet.dir/home/rajesh/temp/hornet-0.5/xlib/src/Device/Primitives/CubWrapper.cu.o[ 62%] Linking CXX static library libhornet.a[ 62%] Built target hornetScanning dependencies of target hornet_delete_testScanning dependencies of target hornet_insert_testScanning dependencies of target ptxtestScanning dependencies of target mem_benchmark[ 68%] Building CUDA object CMakeFiles/ptxtest.dir/test/ptxtest.cu.o[ 68%] Building CUDA object CMakeFiles/mem_benchmark.dir/test/MemBenchmark.cu.o[ 71%] Building CUDA object CMakeFiles/hornet_delete_test.dir/test/HornetDeleteTest.cu.o[ 75%] Building CUDA object CMakeFiles/hornet_insert_test.dir/test/HornetInsertTest.cu.o[ 78%] Linking CXX executable ptxtest[ 81%] Linking CXX executable mem_benchmark[ 81%] Built target ptxtestScanning dependencies of target hornet_test[ 84%] Building CUDA object CMakeFiles/hornet_test.dir/test/HornetTest.cu.o[ 84%] Built target mem_benchmarkScanning dependencies of target lb_test[ 87%] Building CUDA object CMakeFiles/lb_test.dir/test/BinarySearchTest.cu.o[ 90%] Linking CXX executable hornet_insert_test[ 90%] Built target hornet_insert_test[ 93%] Linking CXX executable hornet_delete_test[ 93%] Built target hornet_delete_test[ 96%] Linking CXX executable lb_test[ 96%] Built target lb_test[100%] Linking CXX executable hornet_test[100%] Built target hornet_test[ble: elapsed 36.194s (CPU 158.6%)] rm -rf * ; cmake ..; make -j4office use./home/rajesh/temp/hornet-0.5/hornet/include/Core/DataLayout/DataLayoutDev.i.cuh(43): error: name followed by \"::\" must be a class or namespace name/home/rajesh/temp/hornet-0.5/hornet/include/Core/DataLayout/DataLayoutDev.i.cuh(43): error: argument list for class template \"hornets_nest::AoSdev\" is missing/home/rajesh/temp/hornet-0.5/hornet/include/Core/DataLayout/DataLayoutDev.i.cuh(43): error: expected a \";\"/home/rajesh/temp/hornet-0.5/hornet/include/Core/DataLayout/DataLayoutDev.i.cuh(115): warning #12-D: parsing restarts here after previous syntax error/home/rajesh/temp/hornet-0.5/hornet/include/Core/DataLayout/DataLayoutDev.i.cuh(43): error: name followed by \"::\" must be a class or namespace name/home/rajesh/temp/hornet-0.5/hornet/include/Core/DataLayout/DataLayoutDev.i.cuh(43): error: argument list for class template \"hornets_nest::AoSdev\" is missing/home/rajesh/temp/hornet-0.5/hornet/include/Core/DataLayout/DataLayoutDev.i.cuh(43): error: expected a \";\"",
            "content_html": "<ul>  <li>On Ubuntu 20.04/Mint 20.3.</li>  <li><a href=\"https://github.com/cuStinger/cuStinger\">cuStinger</a> is outdated. <a href=\"https://github.com/hornet-gt/hornet/\">hornet</a> is comparitively active.</li>  <li><a href=\"https://github.com/rapidsai/cuhornet\">cuHornet</a> seems the future. Too bad they have not edited readme steps. Let’s fall back to <code class=\"language-plaintext highlighter-rouge\">hornet</code> repo.</li>  <li>Tried the current master. SOA / AOS seems half baked.</li>  <li>Let’s try from release v0.5. Dowload this .zip <a href=\"https://github.com/hornet-gt/hornet/archive/refs/tags/0.5.zip\">Pre SOA</a> and extract.</li>  <li>rename in external folder, <code class=\"language-plaintext highlighter-rouge\">cub-1.8.x</code> to <code class=\"language-plaintext highlighter-rouge\">cub</code> folder as CUB+Thrust is bundled with CUDA Now.</li>  <li>CMake 23 had some error w.r.t cuda architecture. using 3.16</li></ul><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">export</span> <span class=\"n\">CUDACXX</span><span class=\"o\">=</span><span class=\"err\">`</span><span class=\"n\">which</span> <span class=\"n\">nvcc</span><span class=\"err\">`</span><span class=\"n\">cd</span> <span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"n\">rm</span> <span class=\"o\">-</span><span class=\"n\">rf</span> <span class=\"o\">*</span> <span class=\"p\">;</span> <span class=\"n\">cmake</span> <span class=\"p\">..;</span> <span class=\"n\">make</span> <span class=\"o\">-</span><span class=\"n\">j4</span></code></pre></div></div><ul>  <li>will get an error as in office use below.</li>  <li>on <code class=\"language-plaintext highlighter-rouge\">hornet-0.5/hornet/include/Core/DataLayout/DataLayoutDev.i.cuh</code>  make Line 43 as <code class=\"language-plaintext highlighter-rouge\">AoSdev&lt;TArgs...&gt;::AoSdev(void* d_ptr):</code>removed the template parm pack for ctor</li>  <li><code class=\"language-plaintext highlighter-rouge\">rm -rf * ; cmake ..; make -j4</code></li></ul><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">rm</span> <span class=\"o\">-</span><span class=\"n\">rf</span> <span class=\"o\">*</span> <span class=\"p\">;</span> <span class=\"n\">cmake</span> <span class=\"p\">..;</span> <span class=\"n\">make</span> <span class=\"o\">-</span><span class=\"n\">j4</span><span class=\"o\">--</span> <span class=\"n\">The</span> <span class=\"n\">CXX</span> <span class=\"n\">compiler</span> <span class=\"n\">identification</span> <span class=\"n\">is</span> <span class=\"n\">GNU</span> <span class=\"mi\">9</span><span class=\"p\">.</span><span class=\"mi\">4</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"o\">--</span> <span class=\"n\">The</span> <span class=\"n\">CUDA</span> <span class=\"n\">compiler</span> <span class=\"n\">identification</span> <span class=\"n\">is</span> <span class=\"n\">NVIDIA</span> <span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">7</span><span class=\"p\">.</span><span class=\"mi\">64</span><span class=\"o\">--</span> <span class=\"n\">Check</span> <span class=\"k\">for</span> <span class=\"n\">working</span> <span class=\"n\">CXX</span> <span class=\"n\">compiler</span><span class=\"o\">:</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++</span><span class=\"o\">--</span> <span class=\"n\">Check</span> <span class=\"k\">for</span> <span class=\"n\">working</span> <span class=\"n\">CXX</span> <span class=\"n\">compiler</span><span class=\"o\">:</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++</span> <span class=\"o\">--</span> <span class=\"n\">works</span><span class=\"o\">--</span> <span class=\"n\">Detecting</span> <span class=\"n\">CXX</span> <span class=\"n\">compiler</span> <span class=\"n\">ABI</span> <span class=\"n\">info</span><span class=\"o\">--</span> <span class=\"n\">Detecting</span> <span class=\"n\">CXX</span> <span class=\"n\">compiler</span> <span class=\"n\">ABI</span> <span class=\"n\">info</span> <span class=\"o\">-</span> <span class=\"n\">done</span><span class=\"o\">--</span> <span class=\"n\">Detecting</span> <span class=\"n\">CXX</span> <span class=\"n\">compile</span> <span class=\"n\">features</span><span class=\"o\">--</span> <span class=\"n\">Detecting</span> <span class=\"n\">CXX</span> <span class=\"n\">compile</span> <span class=\"n\">features</span> <span class=\"o\">-</span> <span class=\"n\">done</span><span class=\"o\">--</span> <span class=\"n\">Check</span> <span class=\"k\">for</span> <span class=\"n\">working</span> <span class=\"n\">CUDA</span> <span class=\"n\">compiler</span><span class=\"o\">:</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">nvcc</span><span class=\"o\">--</span> <span class=\"n\">Check</span> <span class=\"k\">for</span> <span class=\"n\">working</span> <span class=\"n\">CUDA</span> <span class=\"n\">compiler</span><span class=\"o\">:</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">nvcc</span> <span class=\"o\">--</span> <span class=\"n\">works</span><span class=\"o\">--</span> <span class=\"n\">Detecting</span> <span class=\"n\">CUDA</span> <span class=\"n\">compiler</span> <span class=\"n\">ABI</span> <span class=\"n\">info</span><span class=\"o\">--</span> <span class=\"n\">Detecting</span> <span class=\"n\">CUDA</span> <span class=\"n\">compiler</span> <span class=\"n\">ABI</span> <span class=\"n\">info</span> <span class=\"o\">-</span> <span class=\"n\">done</span><span class=\"o\">--</span> <span class=\"n\">Found</span> <span class=\"n\">OpenMP_CXX</span><span class=\"o\">:</span> <span class=\"o\">-</span><span class=\"n\">fopenmp</span> <span class=\"p\">(</span><span class=\"n\">found</span> <span class=\"n\">version</span> <span class=\"s\">\"4.5\"</span><span class=\"p\">)</span> <span class=\"o\">--</span> <span class=\"n\">Found</span> <span class=\"n\">OpenMP</span><span class=\"o\">:</span> <span class=\"n\">TRUE</span> <span class=\"p\">(</span><span class=\"n\">found</span> <span class=\"n\">version</span> <span class=\"s\">\"4.5\"</span><span class=\"p\">)</span>  <span class=\"o\">--</span> <span class=\"n\">Using</span> <span class=\"n\">Nvidia</span> <span class=\"n\">Tools</span> <span class=\"n\">Extension</span><span class=\"o\">--</span> <span class=\"n\">Configuring</span> <span class=\"n\">done</span><span class=\"o\">--</span> <span class=\"n\">Generating</span> <span class=\"n\">done</span><span class=\"o\">--</span> <span class=\"n\">Build</span> <span class=\"n\">files</span> <span class=\"n\">have</span> <span class=\"n\">been</span> <span class=\"n\">written</span> <span class=\"n\">to</span><span class=\"o\">:</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"n\">Scanning</span> <span class=\"n\">dependencies</span> <span class=\"n\">of</span> <span class=\"n\">target</span> <span class=\"n\">hornet</span><span class=\"p\">[</span>  <span class=\"mi\">6</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Util</span><span class=\"o\">/</span><span class=\"n\">CommandLineParam</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span>  <span class=\"mi\">6</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Device</span><span class=\"o\">/</span><span class=\"n\">Util</span><span class=\"o\">/</span><span class=\"n\">CudaUtil</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span>  <span class=\"mi\">9</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Util</span><span class=\"o\">/</span><span class=\"n\">BatchFunctions</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">12</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Device</span><span class=\"o\">/</span><span class=\"n\">Util</span><span class=\"o\">/</span><span class=\"n\">DeviceProperties</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">15</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Device</span><span class=\"o\">/</span><span class=\"n\">Util</span><span class=\"o\">/</span><span class=\"n\">SafeCudaAPI</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">18</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Graph</span><span class=\"o\">/</span><span class=\"n\">BFS</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">21</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Graph</span><span class=\"o\">/</span><span class=\"n\">BellmanFord</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">25</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Graph</span><span class=\"o\">/</span><span class=\"n\">Brim</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">28</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Graph</span><span class=\"o\">/</span><span class=\"n\">Dijkstra</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">31</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Graph</span><span class=\"o\">/</span><span class=\"n\">GraphBase</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">34</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Graph</span><span class=\"o\">/</span><span class=\"n\">GraphStd</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">37</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Graph</span><span class=\"o\">/</span><span class=\"n\">GraphStdRead</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">40</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Graph</span><span class=\"o\">/</span><span class=\"n\">GraphWeight</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">43</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Graph</span><span class=\"o\">/</span><span class=\"n\">GraphWeightRead</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">46</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Graph</span><span class=\"o\">/</span><span class=\"n\">SCC</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">50</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Graph</span><span class=\"o\">/</span><span class=\"n\">WCC</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">53</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Host</span><span class=\"o\">/</span><span class=\"n\">FileUtil</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">56</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CXX</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Host</span><span class=\"o\">/</span><span class=\"n\">PrintExt</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">59</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CUDA</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">xlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Device</span><span class=\"o\">/</span><span class=\"n\">Primitives</span><span class=\"o\">/</span><span class=\"n\">CubWrapper</span><span class=\"p\">.</span><span class=\"n\">cu</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">62</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">CXX</span> <span class=\"k\">static</span> <span class=\"n\">library</span> <span class=\"n\">libhornet</span><span class=\"p\">.</span><span class=\"n\">a</span><span class=\"p\">[</span> <span class=\"mi\">62</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Built</span> <span class=\"n\">target</span> <span class=\"n\">hornet</span><span class=\"n\">Scanning</span> <span class=\"n\">dependencies</span> <span class=\"n\">of</span> <span class=\"n\">target</span> <span class=\"n\">hornet_delete_test</span><span class=\"n\">Scanning</span> <span class=\"n\">dependencies</span> <span class=\"n\">of</span> <span class=\"n\">target</span> <span class=\"n\">hornet_insert_test</span><span class=\"n\">Scanning</span> <span class=\"n\">dependencies</span> <span class=\"n\">of</span> <span class=\"n\">target</span> <span class=\"n\">ptxtest</span><span class=\"n\">Scanning</span> <span class=\"n\">dependencies</span> <span class=\"n\">of</span> <span class=\"n\">target</span> <span class=\"n\">mem_benchmark</span><span class=\"p\">[</span> <span class=\"mi\">68</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CUDA</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">ptxtest</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ptxtest</span><span class=\"p\">.</span><span class=\"n\">cu</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">68</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CUDA</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">mem_benchmark</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">MemBenchmark</span><span class=\"p\">.</span><span class=\"n\">cu</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">71</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CUDA</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet_delete_test</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">HornetDeleteTest</span><span class=\"p\">.</span><span class=\"n\">cu</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">75</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CUDA</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet_insert_test</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">HornetInsertTest</span><span class=\"p\">.</span><span class=\"n\">cu</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">78</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">CXX</span> <span class=\"n\">executable</span> <span class=\"n\">ptxtest</span><span class=\"p\">[</span> <span class=\"mi\">81</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">CXX</span> <span class=\"n\">executable</span> <span class=\"n\">mem_benchmark</span><span class=\"p\">[</span> <span class=\"mi\">81</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Built</span> <span class=\"n\">target</span> <span class=\"n\">ptxtest</span><span class=\"n\">Scanning</span> <span class=\"n\">dependencies</span> <span class=\"n\">of</span> <span class=\"n\">target</span> <span class=\"n\">hornet_test</span><span class=\"p\">[</span> <span class=\"mi\">84</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CUDA</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">hornet_test</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">HornetTest</span><span class=\"p\">.</span><span class=\"n\">cu</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">84</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Built</span> <span class=\"n\">target</span> <span class=\"n\">mem_benchmark</span><span class=\"n\">Scanning</span> <span class=\"n\">dependencies</span> <span class=\"n\">of</span> <span class=\"n\">target</span> <span class=\"n\">lb_test</span><span class=\"p\">[</span> <span class=\"mi\">87</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">CUDA</span> <span class=\"n\">object</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">lb_test</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">BinarySearchTest</span><span class=\"p\">.</span><span class=\"n\">cu</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">90</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">CXX</span> <span class=\"n\">executable</span> <span class=\"n\">hornet_insert_test</span><span class=\"p\">[</span> <span class=\"mi\">90</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Built</span> <span class=\"n\">target</span> <span class=\"n\">hornet_insert_test</span><span class=\"p\">[</span> <span class=\"mi\">93</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">CXX</span> <span class=\"n\">executable</span> <span class=\"n\">hornet_delete_test</span><span class=\"p\">[</span> <span class=\"mi\">93</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Built</span> <span class=\"n\">target</span> <span class=\"n\">hornet_delete_test</span><span class=\"p\">[</span> <span class=\"mi\">96</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">CXX</span> <span class=\"n\">executable</span> <span class=\"n\">lb_test</span><span class=\"p\">[</span> <span class=\"mi\">96</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Built</span> <span class=\"n\">target</span> <span class=\"n\">lb_test</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">CXX</span> <span class=\"n\">executable</span> <span class=\"n\">hornet_test</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Built</span> <span class=\"n\">target</span> <span class=\"n\">hornet_test</span><span class=\"p\">[</span><span class=\"n\">ble</span><span class=\"o\">:</span> <span class=\"n\">elapsed</span> <span class=\"mi\">36</span><span class=\"p\">.</span><span class=\"mi\">194</span><span class=\"n\">s</span> <span class=\"p\">(</span><span class=\"n\">CPU</span> <span class=\"mi\">158</span><span class=\"p\">.</span><span class=\"mi\">6</span><span class=\"o\">%</span><span class=\"p\">)]</span> <span class=\"n\">rm</span> <span class=\"o\">-</span><span class=\"n\">rf</span> <span class=\"o\">*</span> <span class=\"p\">;</span> <span class=\"n\">cmake</span> <span class=\"p\">..;</span> <span class=\"n\">make</span> <span class=\"o\">-</span><span class=\"n\">j4</span></code></pre></div></div><h1 id=\"office-use\">office use.</h1><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">Core</span><span class=\"o\">/</span><span class=\"n\">DataLayout</span><span class=\"o\">/</span><span class=\"n\">DataLayoutDev</span><span class=\"p\">.</span><span class=\"n\">i</span><span class=\"p\">.</span><span class=\"n\">cuh</span><span class=\"p\">(</span><span class=\"mi\">43</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">name</span> <span class=\"n\">followed</span> <span class=\"n\">by</span> <span class=\"s\">\"::\"</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">a</span> <span class=\"n\">class</span> <span class=\"n\">or</span> <span class=\"n\">namespace</span> <span class=\"n\">name</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">Core</span><span class=\"o\">/</span><span class=\"n\">DataLayout</span><span class=\"o\">/</span><span class=\"n\">DataLayoutDev</span><span class=\"p\">.</span><span class=\"n\">i</span><span class=\"p\">.</span><span class=\"n\">cuh</span><span class=\"p\">(</span><span class=\"mi\">43</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">argument</span> <span class=\"n\">list</span> <span class=\"k\">for</span> <span class=\"n\">class</span> <span class=\"n\">template</span> <span class=\"s\">\"hornets_nest::AoSdev\"</span> <span class=\"n\">is</span> <span class=\"n\">missing</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">Core</span><span class=\"o\">/</span><span class=\"n\">DataLayout</span><span class=\"o\">/</span><span class=\"n\">DataLayoutDev</span><span class=\"p\">.</span><span class=\"n\">i</span><span class=\"p\">.</span><span class=\"n\">cuh</span><span class=\"p\">(</span><span class=\"mi\">43</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">expected</span> <span class=\"n\">a</span> <span class=\"s\">\";\"</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">Core</span><span class=\"o\">/</span><span class=\"n\">DataLayout</span><span class=\"o\">/</span><span class=\"n\">DataLayoutDev</span><span class=\"p\">.</span><span class=\"n\">i</span><span class=\"p\">.</span><span class=\"n\">cuh</span><span class=\"p\">(</span><span class=\"mi\">115</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">warning</span> <span class=\"err\">#</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"n\">D</span><span class=\"o\">:</span> <span class=\"n\">parsing</span> <span class=\"n\">restarts</span> <span class=\"n\">here</span> <span class=\"n\">after</span> <span class=\"n\">previous</span> <span class=\"n\">syntax</span> <span class=\"n\">error</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">Core</span><span class=\"o\">/</span><span class=\"n\">DataLayout</span><span class=\"o\">/</span><span class=\"n\">DataLayoutDev</span><span class=\"p\">.</span><span class=\"n\">i</span><span class=\"p\">.</span><span class=\"n\">cuh</span><span class=\"p\">(</span><span class=\"mi\">43</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">name</span> <span class=\"n\">followed</span> <span class=\"n\">by</span> <span class=\"s\">\"::\"</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">a</span> <span class=\"n\">class</span> <span class=\"n\">or</span> <span class=\"n\">namespace</span> <span class=\"n\">name</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">Core</span><span class=\"o\">/</span><span class=\"n\">DataLayout</span><span class=\"o\">/</span><span class=\"n\">DataLayoutDev</span><span class=\"p\">.</span><span class=\"n\">i</span><span class=\"p\">.</span><span class=\"n\">cuh</span><span class=\"p\">(</span><span class=\"mi\">43</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">argument</span> <span class=\"n\">list</span> <span class=\"k\">for</span> <span class=\"n\">class</span> <span class=\"n\">template</span> <span class=\"s\">\"hornets_nest::AoSdev\"</span> <span class=\"n\">is</span> <span class=\"n\">missing</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">temp</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">hornet</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">Core</span><span class=\"o\">/</span><span class=\"n\">DataLayout</span><span class=\"o\">/</span><span class=\"n\">DataLayoutDev</span><span class=\"p\">.</span><span class=\"n\">i</span><span class=\"p\">.</span><span class=\"n\">cuh</span><span class=\"p\">(</span><span class=\"mi\">43</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">expected</span> <span class=\"n\">a</span> <span class=\"s\">\";\"</span></code></pre></div></div>",
            "url": "https://mrprajesh.co.in/blog/how-to-build-custinger-or-hornet.html",
            
            
            
            "tags": ["cuda","hornet"],
            
            "date_published": "2022-12-09T02:23:16+05:30",
            "date_modified": "2022-12-09T02:23:16+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/how-to-install-run-loops-on-p100.html",
            "title": "How to install+run Gunrock's Loops on P100 GPU using CentOS",
            "summary": null,
            "content_text": "Tested with  CentOS v7.9.2009  CMake v23  CUDA v11.5  GCC 9.3System setup using P100$ scl enable devtoolset-9 bash$ nvcc --versionnvcc: NVIDIA (R) Cuda compiler driverCopyright (c) 2005-2021 NVIDIA CorporationBuilt on Thu_Nov_18_09:45:30_PST_2021Cuda compilation tools, release 11.5, V11.5.119Build cuda_11.5.r11.5/compiler.30672275_0$ g++ --versiong++ (GCC) 9.3.1 20200408 (Red Hat 9.3.1-2)Copyright (C) 2019 Free Software Foundation, Inc.This is free software; see the source for copying conditions.  There is NOwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.# CAUTION: you can skip THIS STEP if P100 is your DEFAULT DEVICE 0 GPU$ export CUDA_VISIBLE_DEVICES=1$ echo $CUDA_VISIBLE_DEVICES 1# you need not run the next 2 steps. But just to show CC+DRIVER version$ ~/samples/1_Utilities/deviceQuery/deviceQuery /home/rajesh/samples/1_Utilities/deviceQuery/deviceQuery Starting... CUDA Device Query (Runtime API) version (CUDART static linking)Detected 1 CUDA Capable device(s)Device 0: \"Tesla P100-PCIE-12GB\"  CUDA Driver Version / Runtime Version          11.5 / 9.1  CUDA Capability Major/Minor version number:    6.0              &lt;&lt;&lt;==================================================HERE  Total amount of global memory:                 12198 MBytes (12790923264 bytes)  (56) Multiprocessors, ( 64) CUDA Cores/MP:     3584 CUDA Cores  GPU Max Clock rate:                            1329 MHz (1.33 GHz)  Memory Clock rate:                             715 Mhz  Memory Bus Width:                              3072-bit  L2 Cache Size:                                 3145728 bytes  Maximum Texture Dimension Size (x,y,z)         1D=(131072), 2D=(131072, 65536), 3D=(16384, 16384, 16384)  Maximum Layered 1D Texture Size, (num) layers  1D=(32768), 2048 layers  Maximum Layered 2D Texture Size, (num) layers  2D=(32768, 32768), 2048 layers  Total amount of constant memory:               65536 bytes  Total amount of shared memory per block:       49152 bytes  Total number of registers available per block: 65536  Warp size:                                     32  Maximum number of threads per multiprocessor:  2048  Maximum number of threads per block:           1024  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)  Maximum memory pitch:                          2147483647 bytes  Texture alignment:                             512 bytes  Concurrent copy and kernel execution:          Yes with 2 copy engine(s)  Run time limit on kernels:                     No  Integrated GPU sharing Host Memory:            No  Support host page-locked memory mapping:       Yes  Alignment requirement for Surfaces:            Yes  Device has ECC support:                        Enabled  Device supports Unified Addressing (UVA):      Yes  Device PCI Domain ID / Bus ID / location ID:   0 / 130 / 0  Compute Mode:     &lt; Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) &gt;deviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 11.5, CUDA Runtime Version = 9.1, NumDevs = 1, Device0 = Tesla P100-PCIE-12GBResult = PASS$ nvidia-smi Sat Nov 26 10:16:26 2022       +-----------------------------------------------------------------------------+| NVIDIA-SMI 495.29.05    Driver Version: 495.29.05    CUDA Version: 11.5     ||-------------------------------+----------------------+----------------------+| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC || Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. ||                               |                      |               MIG M. ||===============================+======================+======================||   0  NVIDIA GeForce ...  On   | 00000000:02:00.0 Off |                  N/A || 18%   29C    P8    13W / 250W |     20MiB / 11019MiB |      0%      Default ||                               |                      |                  N/A |+-------------------------------+----------------------+----------------------+|   1  Tesla P100-PCIE...  On   | 00000000:82:00.0 Off |                    0 || N/A   31C    P0    24W / 250W |      0MiB / 12198MiB |      0%      Default ||                               |                      |                  N/A |+-------------------------------+----------------------+----------------------+                                                                               +-----------------------------------------------------------------------------+| Processes:                                                                  ||  GPU   GI   CI        PID   Type   Process name                  GPU Memory ||        ID   ID                                                   Usage      ||=============================================================================||    0   N/A  N/A      1670      G   /usr/bin/X                         18MiB |+-----------------------------------------------------------------------------+Dowloading loop and run.$ git clone git@github.com:gunrock/loops.git$ cd loops #### IN CMakeLists.txt CHANGE THE LINE 72 to this: set(CMAKE_CUDA_ARCHITECTURES 60)#### i.e to use SM60 CC version THAT we found from our device query. As PER P100 GPU. $ vim CMakeLists.txt$ mkdir build &amp;&amp; cd build$ ~/install/cmake-3.23.0-linux-x86_64/bin/cmake ..       # I HAVE A NEW CMAKE BINARY IN MY HOME. HOPE YOU HAVE IT TOO.# ... wait $ make loops.spmv.merge_path # ... wait$ bin/loops.spmv.merge_path -m ../datasets/chesapeake/chesapeake.mtxmerge_path_flat,chesapeake,39,39,340,0.020256This sanity should work. Then, do make $(nproc) at penultimate step and run specific apps after wget-ting all the dataset files.Office use – Using this commit version in main.$ git lg*   40a6719 - (HEAD, origin/main, origin/HEAD, main) [skip ci] Merge pull request #24 from neoblizz/dev (20 hours ago) &lt;Muhammad Osama&gt;|\\  | * 4e99a28 - gitignore ignored the mtx file. (20 hours ago) &lt;neoblizz&gt;* |   55b5e68 - Merge pull request #23 from neoblizz/dev (4 days ago) &lt;Muhammad Osama&gt;|\\ \\  | |/  | * f348586 - [skip ci] forgot to mention ipynb. (4 days ago) &lt;neoblizz&gt;* |   c598aba - Merge pull request #22 from gunrock/dev (4 days ago) &lt;Muhammad Osama&gt;|\\ \\  | * \\   651da0c - (origin/dev) Merge pull request #21 from neoblizz/dev (4 days ago) &lt;Muhammad Osama&gt;| |\\ \\  ",
            "content_html": "<h2 id=\"tested-with\">Tested with</h2><ul>  <li>CentOS v7.9.2009</li>  <li>CMake v23</li>  <li>CUDA v11.5</li>  <li>GCC 9.3</li></ul><h2 id=\"system-setup-using-p100\">System setup using P100</h2><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">$</span> <span class=\"n\">scl</span> <span class=\"n\">enable</span> <span class=\"n\">devtoolset</span><span class=\"o\">-</span><span class=\"mi\">9</span> <span class=\"n\">bash</span><span class=\"err\">$</span> <span class=\"n\">nvcc</span> <span class=\"o\">--</span><span class=\"n\">version</span><span class=\"n\">nvcc</span><span class=\"o\">:</span> <span class=\"n\">NVIDIA</span> <span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">)</span> <span class=\"n\">Cuda</span> <span class=\"n\">compiler</span> <span class=\"n\">driver</span><span class=\"n\">Copyright</span> <span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"mi\">2005</span><span class=\"o\">-</span><span class=\"mi\">2021</span> <span class=\"n\">NVIDIA</span> <span class=\"n\">Corporation</span><span class=\"n\">Built</span> <span class=\"n\">on</span> <span class=\"n\">Thu_Nov_18_09</span><span class=\"o\">:</span><span class=\"mi\">45</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"n\">_PST_2021</span><span class=\"n\">Cuda</span> <span class=\"n\">compilation</span> <span class=\"n\">tools</span><span class=\"p\">,</span> <span class=\"n\">release</span> <span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">V11</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"p\">.</span><span class=\"mi\">119</span><span class=\"n\">Build</span> <span class=\"n\">cuda_11</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"p\">.</span><span class=\"n\">r11</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">compiler</span><span class=\"p\">.</span><span class=\"mi\">30672275</span><span class=\"n\">_0</span><span class=\"err\">$</span> <span class=\"n\">g</span><span class=\"o\">++</span> <span class=\"o\">--</span><span class=\"n\">version</span><span class=\"n\">g</span><span class=\"o\">++</span> <span class=\"p\">(</span><span class=\"n\">GCC</span><span class=\"p\">)</span> <span class=\"mi\">9</span><span class=\"p\">.</span><span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"mi\">1</span> <span class=\"mi\">20200408</span> <span class=\"p\">(</span><span class=\"n\">Red</span> <span class=\"n\">Hat</span> <span class=\"mi\">9</span><span class=\"p\">.</span><span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"n\">Copyright</span> <span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">)</span> <span class=\"mi\">2019</span> <span class=\"n\">Free</span> <span class=\"n\">Software</span> <span class=\"n\">Foundation</span><span class=\"p\">,</span> <span class=\"n\">Inc</span><span class=\"p\">.</span><span class=\"n\">This</span> <span class=\"n\">is</span> <span class=\"n\">free</span> <span class=\"n\">software</span><span class=\"p\">;</span> <span class=\"n\">see</span> <span class=\"n\">the</span> <span class=\"n\">source</span> <span class=\"k\">for</span> <span class=\"n\">copying</span> <span class=\"n\">conditions</span><span class=\"p\">.</span>  <span class=\"n\">There</span> <span class=\"n\">is</span> <span class=\"n\">NO</span><span class=\"n\">warranty</span><span class=\"p\">;</span> <span class=\"n\">not</span> <span class=\"n\">even</span> <span class=\"k\">for</span> <span class=\"n\">MERCHANTABILITY</span> <span class=\"n\">or</span> <span class=\"n\">FITNESS</span> <span class=\"n\">FOR</span> <span class=\"n\">A</span> <span class=\"n\">PARTICULAR</span> <span class=\"n\">PURPOSE</span><span class=\"p\">.</span><span class=\"cp\"># CAUTION: you can skip THIS STEP if P100 is your DEFAULT DEVICE 0 GPU</span><span class=\"err\">$</span> <span class=\"n\">export</span> <span class=\"n\">CUDA_VISIBLE_DEVICES</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">$</span> <span class=\"n\">echo</span> <span class=\"err\">$</span><span class=\"n\">CUDA_VISIBLE_DEVICES</span> <span class=\"mi\">1</span><span class=\"cp\"># you need not run the next 2 steps. But just to show CC+DRIVER version</span><span class=\"err\">$</span> <span class=\"o\">~/</span><span class=\"n\">samples</span><span class=\"o\">/</span><span class=\"mi\">1</span><span class=\"n\">_Utilities</span><span class=\"o\">/</span><span class=\"n\">deviceQuery</span><span class=\"o\">/</span><span class=\"n\">deviceQuery</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"n\">samples</span><span class=\"o\">/</span><span class=\"mi\">1</span><span class=\"n\">_Utilities</span><span class=\"o\">/</span><span class=\"n\">deviceQuery</span><span class=\"o\">/</span><span class=\"n\">deviceQuery</span> <span class=\"n\">Starting</span><span class=\"p\">...</span> <span class=\"n\">CUDA</span> <span class=\"n\">Device</span> <span class=\"n\">Query</span> <span class=\"p\">(</span><span class=\"n\">Runtime</span> <span class=\"n\">API</span><span class=\"p\">)</span> <span class=\"n\">version</span> <span class=\"p\">(</span><span class=\"n\">CUDART</span> <span class=\"k\">static</span> <span class=\"n\">linking</span><span class=\"p\">)</span><span class=\"n\">Detected</span> <span class=\"mi\">1</span> <span class=\"n\">CUDA</span> <span class=\"n\">Capable</span> <span class=\"n\">device</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"n\">Device</span> <span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"s\">\"Tesla P100-PCIE-12GB\"</span>  <span class=\"n\">CUDA</span> <span class=\"n\">Driver</span> <span class=\"n\">Version</span> <span class=\"o\">/</span> <span class=\"n\">Runtime</span> <span class=\"n\">Version</span>          <span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span> <span class=\"o\">/</span> <span class=\"mi\">9</span><span class=\"p\">.</span><span class=\"mi\">1</span>  <span class=\"n\">CUDA</span> <span class=\"n\">Capability</span> <span class=\"n\">Major</span><span class=\"o\">/</span><span class=\"n\">Minor</span> <span class=\"n\">version</span> <span class=\"n\">number</span><span class=\"o\">:</span>    <span class=\"mi\">6</span><span class=\"p\">.</span><span class=\"mi\">0</span>              <span class=\"o\">&lt;&lt;&lt;==================================================</span><span class=\"n\">HERE</span>  <span class=\"n\">Total</span> <span class=\"n\">amount</span> <span class=\"n\">of</span> <span class=\"n\">global</span> <span class=\"n\">memory</span><span class=\"o\">:</span>                 <span class=\"mi\">12198</span> <span class=\"n\">MBytes</span> <span class=\"p\">(</span><span class=\"mi\">12790923264</span> <span class=\"n\">bytes</span><span class=\"p\">)</span>  <span class=\"p\">(</span><span class=\"mi\">56</span><span class=\"p\">)</span> <span class=\"n\">Multiprocessors</span><span class=\"p\">,</span> <span class=\"p\">(</span> <span class=\"mi\">64</span><span class=\"p\">)</span> <span class=\"n\">CUDA</span> <span class=\"n\">Cores</span><span class=\"o\">/</span><span class=\"n\">MP</span><span class=\"o\">:</span>     <span class=\"mi\">3584</span> <span class=\"n\">CUDA</span> <span class=\"n\">Cores</span>  <span class=\"n\">GPU</span> <span class=\"n\">Max</span> <span class=\"n\">Clock</span> <span class=\"n\">rate</span><span class=\"o\">:</span>                            <span class=\"mi\">1329</span> <span class=\"n\">MHz</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"mi\">33</span> <span class=\"n\">GHz</span><span class=\"p\">)</span>  <span class=\"n\">Memory</span> <span class=\"n\">Clock</span> <span class=\"n\">rate</span><span class=\"o\">:</span>                             <span class=\"mi\">715</span> <span class=\"n\">Mhz</span>  <span class=\"n\">Memory</span> <span class=\"n\">Bus</span> <span class=\"n\">Width</span><span class=\"o\">:</span>                              <span class=\"mi\">3072</span><span class=\"o\">-</span><span class=\"n\">bit</span>  <span class=\"n\">L2</span> <span class=\"n\">Cache</span> <span class=\"n\">Size</span><span class=\"o\">:</span>                                 <span class=\"mi\">3145728</span> <span class=\"n\">bytes</span>  <span class=\"n\">Maximum</span> <span class=\"n\">Texture</span> <span class=\"n\">Dimension</span> <span class=\"n\">Size</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">)</span>         <span class=\"mi\">1</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">131072</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">131072</span><span class=\"p\">,</span> <span class=\"mi\">65536</span><span class=\"p\">),</span> <span class=\"mi\">3</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">16384</span><span class=\"p\">,</span> <span class=\"mi\">16384</span><span class=\"p\">,</span> <span class=\"mi\">16384</span><span class=\"p\">)</span>  <span class=\"n\">Maximum</span> <span class=\"n\">Layered</span> <span class=\"mi\">1</span><span class=\"n\">D</span> <span class=\"n\">Texture</span> <span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)</span> <span class=\"n\">layers</span>  <span class=\"mi\">1</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">32768</span><span class=\"p\">),</span> <span class=\"mi\">2048</span> <span class=\"n\">layers</span>  <span class=\"n\">Maximum</span> <span class=\"n\">Layered</span> <span class=\"mi\">2</span><span class=\"n\">D</span> <span class=\"n\">Texture</span> <span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)</span> <span class=\"n\">layers</span>  <span class=\"mi\">2</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">32768</span><span class=\"p\">,</span> <span class=\"mi\">32768</span><span class=\"p\">),</span> <span class=\"mi\">2048</span> <span class=\"n\">layers</span>  <span class=\"n\">Total</span> <span class=\"n\">amount</span> <span class=\"n\">of</span> <span class=\"n\">constant</span> <span class=\"n\">memory</span><span class=\"o\">:</span>               <span class=\"mi\">65536</span> <span class=\"n\">bytes</span>  <span class=\"n\">Total</span> <span class=\"n\">amount</span> <span class=\"n\">of</span> <span class=\"n\">shared</span> <span class=\"n\">memory</span> <span class=\"n\">per</span> <span class=\"n\">block</span><span class=\"o\">:</span>       <span class=\"mi\">49152</span> <span class=\"n\">bytes</span>  <span class=\"n\">Total</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">registers</span> <span class=\"n\">available</span> <span class=\"n\">per</span> <span class=\"n\">block</span><span class=\"o\">:</span> <span class=\"mi\">65536</span>  <span class=\"n\">Warp</span> <span class=\"n\">size</span><span class=\"o\">:</span>                                     <span class=\"mi\">32</span>  <span class=\"n\">Maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">threads</span> <span class=\"n\">per</span> <span class=\"n\">multiprocessor</span><span class=\"o\">:</span>  <span class=\"mi\">2048</span>  <span class=\"n\">Maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">threads</span> <span class=\"n\">per</span> <span class=\"n\">block</span><span class=\"o\">:</span>           <span class=\"mi\">1024</span>  <span class=\"n\">Max</span> <span class=\"n\">dimension</span> <span class=\"n\">size</span> <span class=\"n\">of</span> <span class=\"n\">a</span> <span class=\"kr\">thread</span> <span class=\"n\">block</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">)</span>  <span class=\"n\">Max</span> <span class=\"n\">dimension</span> <span class=\"n\">size</span> <span class=\"n\">of</span> <span class=\"n\">a</span> <span class=\"n\">grid</span> <span class=\"n\">size</span>    <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"mi\">2147483647</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">)</span>  <span class=\"n\">Maximum</span> <span class=\"n\">memory</span> <span class=\"n\">pitch</span><span class=\"o\">:</span>                          <span class=\"mi\">2147483647</span> <span class=\"n\">bytes</span>  <span class=\"n\">Texture</span> <span class=\"n\">alignment</span><span class=\"o\">:</span>                             <span class=\"mi\">512</span> <span class=\"n\">bytes</span>  <span class=\"n\">Concurrent</span> <span class=\"n\">copy</span> <span class=\"n\">and</span> <span class=\"n\">kernel</span> <span class=\"n\">execution</span><span class=\"o\">:</span>          <span class=\"n\">Yes</span> <span class=\"n\">with</span> <span class=\"mi\">2</span> <span class=\"n\">copy</span> <span class=\"n\">engine</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>  <span class=\"n\">Run</span> <span class=\"n\">time</span> <span class=\"n\">limit</span> <span class=\"n\">on</span> <span class=\"n\">kernels</span><span class=\"o\">:</span>                     <span class=\"n\">No</span>  <span class=\"n\">Integrated</span> <span class=\"n\">GPU</span> <span class=\"n\">sharing</span> <span class=\"n\">Host</span> <span class=\"n\">Memory</span><span class=\"o\">:</span>            <span class=\"n\">No</span>  <span class=\"n\">Support</span> <span class=\"n\">host</span> <span class=\"n\">page</span><span class=\"o\">-</span><span class=\"n\">locked</span> <span class=\"n\">memory</span> <span class=\"n\">mapping</span><span class=\"o\">:</span>       <span class=\"n\">Yes</span>  <span class=\"n\">Alignment</span> <span class=\"n\">requirement</span> <span class=\"k\">for</span> <span class=\"n\">Surfaces</span><span class=\"o\">:</span>            <span class=\"n\">Yes</span>  <span class=\"n\">Device</span> <span class=\"n\">has</span> <span class=\"n\">ECC</span> <span class=\"n\">support</span><span class=\"o\">:</span>                        <span class=\"n\">Enabled</span>  <span class=\"n\">Device</span> <span class=\"n\">supports</span> <span class=\"n\">Unified</span> <span class=\"n\">Addressing</span> <span class=\"p\">(</span><span class=\"n\">UVA</span><span class=\"p\">)</span><span class=\"o\">:</span>      <span class=\"n\">Yes</span>  <span class=\"n\">Device</span> <span class=\"n\">PCI</span> <span class=\"n\">Domain</span> <span class=\"n\">ID</span> <span class=\"o\">/</span> <span class=\"n\">Bus</span> <span class=\"n\">ID</span> <span class=\"o\">/</span> <span class=\"n\">location</span> <span class=\"n\">ID</span><span class=\"o\">:</span>   <span class=\"mi\">0</span> <span class=\"o\">/</span> <span class=\"mi\">130</span> <span class=\"o\">/</span> <span class=\"mi\">0</span>  <span class=\"n\">Compute</span> <span class=\"n\">Mode</span><span class=\"o\">:</span>     <span class=\"o\">&lt;</span> <span class=\"n\">Default</span> <span class=\"p\">(</span><span class=\"n\">multiple</span> <span class=\"n\">host</span> <span class=\"n\">threads</span> <span class=\"n\">can</span> <span class=\"n\">use</span> <span class=\"o\">::</span><span class=\"n\">cudaSetDevice</span><span class=\"p\">()</span> <span class=\"n\">with</span> <span class=\"n\">device</span> <span class=\"n\">simultaneously</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span><span class=\"n\">deviceQuery</span><span class=\"p\">,</span> <span class=\"n\">CUDA</span> <span class=\"n\">Driver</span> <span class=\"o\">=</span> <span class=\"n\">CUDART</span><span class=\"p\">,</span> <span class=\"n\">CUDA</span> <span class=\"n\">Driver</span> <span class=\"n\">Version</span> <span class=\"o\">=</span> <span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">CUDA</span> <span class=\"n\">Runtime</span> <span class=\"n\">Version</span> <span class=\"o\">=</span> <span class=\"mi\">9</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">NumDevs</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">Device0</span> <span class=\"o\">=</span> <span class=\"n\">Tesla</span> <span class=\"n\">P100</span><span class=\"o\">-</span><span class=\"n\">PCIE</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"n\">GB</span><span class=\"n\">Result</span> <span class=\"o\">=</span> <span class=\"n\">PASS</span><span class=\"err\">$</span> <span class=\"n\">nvidia</span><span class=\"o\">-</span><span class=\"n\">smi</span> <span class=\"n\">Sat</span> <span class=\"n\">Nov</span> <span class=\"mi\">26</span> <span class=\"mi\">10</span><span class=\"o\">:</span><span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">26</span> <span class=\"mi\">2022</span>       <span class=\"o\">+-----------------------------------------------------------------------------+</span><span class=\"o\">|</span> <span class=\"n\">NVIDIA</span><span class=\"o\">-</span><span class=\"n\">SMI</span> <span class=\"mi\">495</span><span class=\"p\">.</span><span class=\"mi\">29</span><span class=\"p\">.</span><span class=\"mo\">05</span>    <span class=\"n\">Driver</span> <span class=\"n\">Version</span><span class=\"o\">:</span> <span class=\"mi\">495</span><span class=\"p\">.</span><span class=\"mi\">29</span><span class=\"p\">.</span><span class=\"mo\">05</span>    <span class=\"n\">CUDA</span> <span class=\"n\">Version</span><span class=\"o\">:</span> <span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span>     <span class=\"o\">|</span><span class=\"o\">|-------------------------------+----------------------+----------------------+</span><span class=\"o\">|</span> <span class=\"n\">GPU</span>  <span class=\"n\">Name</span>        <span class=\"n\">Persistence</span><span class=\"o\">-</span><span class=\"n\">M</span><span class=\"o\">|</span> <span class=\"n\">Bus</span><span class=\"o\">-</span><span class=\"n\">Id</span>        <span class=\"n\">Disp</span><span class=\"p\">.</span><span class=\"n\">A</span> <span class=\"o\">|</span> <span class=\"n\">Volatile</span> <span class=\"n\">Uncorr</span><span class=\"p\">.</span> <span class=\"n\">ECC</span> <span class=\"o\">|</span><span class=\"o\">|</span> <span class=\"n\">Fan</span>  <span class=\"n\">Temp</span>  <span class=\"n\">Perf</span>  <span class=\"n\">Pwr</span><span class=\"o\">:</span><span class=\"n\">Usage</span><span class=\"o\">/</span><span class=\"n\">Cap</span><span class=\"o\">|</span>         <span class=\"n\">Memory</span><span class=\"o\">-</span><span class=\"n\">Usage</span> <span class=\"o\">|</span> <span class=\"n\">GPU</span><span class=\"o\">-</span><span class=\"n\">Util</span>  <span class=\"n\">Compute</span> <span class=\"n\">M</span><span class=\"p\">.</span> <span class=\"o\">|</span><span class=\"o\">|</span>                               <span class=\"o\">|</span>                      <span class=\"o\">|</span>               <span class=\"n\">MIG</span> <span class=\"n\">M</span><span class=\"p\">.</span> <span class=\"o\">|</span><span class=\"o\">|===============================+======================+======================|</span><span class=\"o\">|</span>   <span class=\"mi\">0</span>  <span class=\"n\">NVIDIA</span> <span class=\"n\">GeForce</span> <span class=\"p\">...</span>  <span class=\"n\">On</span>   <span class=\"o\">|</span> <span class=\"mo\">00000000</span><span class=\"o\">:</span><span class=\"mo\">02</span><span class=\"o\">:</span><span class=\"mo\">00</span><span class=\"p\">.</span><span class=\"mi\">0</span> <span class=\"n\">Off</span> <span class=\"o\">|</span>                  <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span> <span class=\"o\">|</span><span class=\"o\">|</span> <span class=\"mi\">18</span><span class=\"o\">%</span>   <span class=\"mi\">29</span><span class=\"n\">C</span>    <span class=\"n\">P8</span>    <span class=\"mi\">13</span><span class=\"n\">W</span> <span class=\"o\">/</span> <span class=\"mi\">250</span><span class=\"n\">W</span> <span class=\"o\">|</span>     <span class=\"mi\">20</span><span class=\"n\">MiB</span> <span class=\"o\">/</span> <span class=\"mi\">11019</span><span class=\"n\">MiB</span> <span class=\"o\">|</span>      <span class=\"mi\">0</span><span class=\"o\">%</span>      <span class=\"n\">Default</span> <span class=\"o\">|</span><span class=\"o\">|</span>                               <span class=\"o\">|</span>                      <span class=\"o\">|</span>                  <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span> <span class=\"o\">|</span><span class=\"o\">+-------------------------------+----------------------+----------------------+</span><span class=\"o\">|</span>   <span class=\"mi\">1</span>  <span class=\"n\">Tesla</span> <span class=\"n\">P100</span><span class=\"o\">-</span><span class=\"n\">PCIE</span><span class=\"p\">...</span>  <span class=\"n\">On</span>   <span class=\"o\">|</span> <span class=\"mo\">00000000</span><span class=\"o\">:</span><span class=\"mi\">82</span><span class=\"o\">:</span><span class=\"mo\">00</span><span class=\"p\">.</span><span class=\"mi\">0</span> <span class=\"n\">Off</span> <span class=\"o\">|</span>                    <span class=\"mi\">0</span> <span class=\"o\">|</span><span class=\"o\">|</span> <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span>   <span class=\"mi\">31</span><span class=\"n\">C</span>    <span class=\"n\">P0</span>    <span class=\"mi\">24</span><span class=\"n\">W</span> <span class=\"o\">/</span> <span class=\"mi\">250</span><span class=\"n\">W</span> <span class=\"o\">|</span>      <span class=\"mi\">0</span><span class=\"n\">MiB</span> <span class=\"o\">/</span> <span class=\"mi\">12198</span><span class=\"n\">MiB</span> <span class=\"o\">|</span>      <span class=\"mi\">0</span><span class=\"o\">%</span>      <span class=\"n\">Default</span> <span class=\"o\">|</span><span class=\"o\">|</span>                               <span class=\"o\">|</span>                      <span class=\"o\">|</span>                  <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span> <span class=\"o\">|</span><span class=\"o\">+-------------------------------+----------------------+----------------------+</span>                                                                               <span class=\"o\">+-----------------------------------------------------------------------------+</span><span class=\"o\">|</span> <span class=\"n\">Processes</span><span class=\"o\">:</span>                                                                  <span class=\"o\">|</span><span class=\"o\">|</span>  <span class=\"n\">GPU</span>   <span class=\"n\">GI</span>   <span class=\"n\">CI</span>        <span class=\"n\">PID</span>   <span class=\"n\">Type</span>   <span class=\"n\">Process</span> <span class=\"n\">name</span>                  <span class=\"n\">GPU</span> <span class=\"n\">Memory</span> <span class=\"o\">|</span><span class=\"o\">|</span>        <span class=\"n\">ID</span>   <span class=\"n\">ID</span>                                                   <span class=\"n\">Usage</span>      <span class=\"o\">|</span><span class=\"o\">|=============================================================================|</span><span class=\"o\">|</span>    <span class=\"mi\">0</span>   <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span>  <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span>      <span class=\"mi\">1670</span>      <span class=\"n\">G</span>   <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">X</span>                         <span class=\"mi\">18</span><span class=\"n\">MiB</span> <span class=\"o\">|</span><span class=\"o\">+-----------------------------------------------------------------------------+</span></code></pre></div></div><h2 id=\"dowloading-loop-and-run\">Dowloading loop and run.</h2><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">$</span> <span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">git</span><span class=\"err\">@</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">:</span><span class=\"n\">gunrock</span><span class=\"o\">/</span><span class=\"n\">loops</span><span class=\"p\">.</span><span class=\"n\">git</span><span class=\"err\">$</span> <span class=\"n\">cd</span> <span class=\"n\">loops</span> <span class=\"cp\">#### IN CMakeLists.txt CHANGE THE LINE 72 to this: set(CMAKE_CUDA_ARCHITECTURES 60)#### i.e to use SM60 CC version THAT we found from our device query. As PER P100 GPU. </span><span class=\"err\">$</span> <span class=\"n\">vim</span> <span class=\"n\">CMakeLists</span><span class=\"p\">.</span><span class=\"n\">txt</span><span class=\"err\">$</span> <span class=\"n\">mkdir</span> <span class=\"n\">build</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">cd</span> <span class=\"n\">build</span><span class=\"err\">$</span> <span class=\"o\">~/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">cmake</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"mi\">23</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">cmake</span> <span class=\"p\">..</span>       <span class=\"err\">#</span> <span class=\"n\">I</span> <span class=\"n\">HAVE</span> <span class=\"n\">A</span> <span class=\"n\">NEW</span> <span class=\"n\">CMAKE</span> <span class=\"n\">BINARY</span> <span class=\"n\">IN</span> <span class=\"n\">MY</span> <span class=\"n\">HOME</span><span class=\"p\">.</span> <span class=\"n\">HOPE</span> <span class=\"n\">YOU</span> <span class=\"n\">HAVE</span> <span class=\"n\">IT</span> <span class=\"n\">TOO</span><span class=\"p\">.</span><span class=\"cp\"># ... wait</span> <span class=\"err\">$</span> <span class=\"n\">make</span> <span class=\"n\">loops</span><span class=\"p\">.</span><span class=\"n\">spmv</span><span class=\"p\">.</span><span class=\"n\">merge_path</span> <span class=\"cp\"># ... wait</span><span class=\"err\">$</span> <span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">loops</span><span class=\"p\">.</span><span class=\"n\">spmv</span><span class=\"p\">.</span><span class=\"n\">merge_path</span> <span class=\"o\">-</span><span class=\"n\">m</span> <span class=\"p\">..</span><span class=\"o\">/</span><span class=\"n\">datasets</span><span class=\"o\">/</span><span class=\"n\">chesapeake</span><span class=\"o\">/</span><span class=\"n\">chesapeake</span><span class=\"p\">.</span><span class=\"n\">mtx</span><span class=\"n\">merge_path_flat</span><span class=\"p\">,</span><span class=\"n\">chesapeake</span><span class=\"p\">,</span><span class=\"mi\">39</span><span class=\"p\">,</span><span class=\"mi\">39</span><span class=\"p\">,</span><span class=\"mi\">340</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mo\">020256</span></code></pre></div></div><p>This sanity should work. Then, do <code class=\"language-plaintext highlighter-rouge\">make $(nproc)</code> at penultimate step and run specific apps after <code class=\"language-plaintext highlighter-rouge\">wget</code>-ting all the dataset files.</p><h2 id=\"office-use--using-this-commit-version-in-main\">Office use – Using this commit version in main.</h2><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">$</span> <span class=\"n\">git</span> <span class=\"n\">lg</span><span class=\"o\">*</span>   <span class=\"mi\">40</span><span class=\"n\">a6719</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"n\">HEAD</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">/</span><span class=\"n\">HEAD</span><span class=\"p\">,</span> <span class=\"n\">main</span><span class=\"p\">)</span> <span class=\"p\">[</span><span class=\"n\">skip</span> <span class=\"n\">ci</span><span class=\"p\">]</span> <span class=\"n\">Merge</span> <span class=\"n\">pull</span> <span class=\"n\">request</span> <span class=\"err\">#</span><span class=\"mi\">24</span> <span class=\"n\">from</span> <span class=\"n\">neoblizz</span><span class=\"o\">/</span><span class=\"n\">dev</span> <span class=\"p\">(</span><span class=\"mi\">20</span> <span class=\"n\">hours</span> <span class=\"n\">ago</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">Muhammad</span> <span class=\"n\">Osama</span><span class=\"o\">&gt;</span><span class=\"o\">|</span><span class=\"err\">\\</span>  <span class=\"o\">|</span> <span class=\"o\">*</span> <span class=\"mf\">4e99</span><span class=\"n\">a28</span> <span class=\"o\">-</span> <span class=\"n\">gitignore</span> <span class=\"n\">ignored</span> <span class=\"n\">the</span> <span class=\"n\">mtx</span> <span class=\"n\">file</span><span class=\"p\">.</span> <span class=\"p\">(</span><span class=\"mi\">20</span> <span class=\"n\">hours</span> <span class=\"n\">ago</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">neoblizz</span><span class=\"o\">&gt;</span><span class=\"o\">*</span> <span class=\"o\">|</span>   <span class=\"mi\">55</span><span class=\"n\">b5e68</span> <span class=\"o\">-</span> <span class=\"n\">Merge</span> <span class=\"n\">pull</span> <span class=\"n\">request</span> <span class=\"err\">#</span><span class=\"mi\">23</span> <span class=\"n\">from</span> <span class=\"n\">neoblizz</span><span class=\"o\">/</span><span class=\"n\">dev</span> <span class=\"p\">(</span><span class=\"mi\">4</span> <span class=\"n\">days</span> <span class=\"n\">ago</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">Muhammad</span> <span class=\"n\">Osama</span><span class=\"o\">&gt;</span><span class=\"o\">|</span><span class=\"err\">\\</span> <span class=\"err\">\\</span>  <span class=\"o\">|</span> <span class=\"o\">|/</span>  <span class=\"o\">|</span> <span class=\"o\">*</span> <span class=\"n\">f348586</span> <span class=\"o\">-</span> <span class=\"p\">[</span><span class=\"n\">skip</span> <span class=\"n\">ci</span><span class=\"p\">]</span> <span class=\"n\">forgot</span> <span class=\"n\">to</span> <span class=\"n\">mention</span> <span class=\"n\">ipynb</span><span class=\"p\">.</span> <span class=\"p\">(</span><span class=\"mi\">4</span> <span class=\"n\">days</span> <span class=\"n\">ago</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">neoblizz</span><span class=\"o\">&gt;</span><span class=\"o\">*</span> <span class=\"o\">|</span>   <span class=\"n\">c598aba</span> <span class=\"o\">-</span> <span class=\"n\">Merge</span> <span class=\"n\">pull</span> <span class=\"n\">request</span> <span class=\"err\">#</span><span class=\"mi\">22</span> <span class=\"n\">from</span> <span class=\"n\">gunrock</span><span class=\"o\">/</span><span class=\"n\">dev</span> <span class=\"p\">(</span><span class=\"mi\">4</span> <span class=\"n\">days</span> <span class=\"n\">ago</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">Muhammad</span> <span class=\"n\">Osama</span><span class=\"o\">&gt;</span><span class=\"o\">|</span><span class=\"err\">\\</span> <span class=\"err\">\\</span>  <span class=\"o\">|</span> <span class=\"o\">*</span> <span class=\"err\">\\</span>   <span class=\"mi\">651</span><span class=\"n\">da0c</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"n\">origin</span><span class=\"o\">/</span><span class=\"n\">dev</span><span class=\"p\">)</span> <span class=\"n\">Merge</span> <span class=\"n\">pull</span> <span class=\"n\">request</span> <span class=\"err\">#</span><span class=\"mi\">21</span> <span class=\"n\">from</span> <span class=\"n\">neoblizz</span><span class=\"o\">/</span><span class=\"n\">dev</span> <span class=\"p\">(</span><span class=\"mi\">4</span> <span class=\"n\">days</span> <span class=\"n\">ago</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">Muhammad</span> <span class=\"n\">Osama</span><span class=\"o\">&gt;</span><span class=\"o\">|</span> <span class=\"o\">|</span><span class=\"err\">\\</span> <span class=\"err\">\\</span>  </code></pre></div></div>",
            "url": "https://mrprajesh.co.in/blog/how-to-install-run-loops-on-p100.html",
            
            
            
            "tags": ["cuda","loops","gunrock","centos","p00"],
            
            "date_published": "2022-11-26T12:32:46+05:30",
            "date_modified": "2022-11-26T12:32:46+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/how-to-install-sycl.html",
            "title": "2022 How to Install, Compile and Run SYCL using NVIDIA GPUs",
            "summary": null,
            "content_text": "Prerequisites  All preq for LLVM          git      cmake version 3.14+      python      ninja      C++ compiler GCC version 7.1.0+ (TLDR C++17 support)        CUDA Toolkit 11.5+ in default path (11.7 and 11.8 are only partially supported as on date!)  I am using Ubuntu 20.04; should work any Linux which has all above.Build a C++ Complier for SYCL#Create folder; Assume is as $DPCPP_HOMEmkdir $HOME/installcd $HOME/install# Build INTEL's LLVM# get sycl branchgit clone https://github.com/intel/llvm.git -b syclcd llvm# OPTIONAL STEP. Warning LLVM undergoes a lot changes. # In case, recent commit did not work, use the below that worked for me# 082cde6 - (HEAD, origin/sycl, origin/HEAD, sycl) [CI][1/3] Add Ubuntu 22 containers build (#7106) &lt;Pavel Chupin&gt;git checkout 082cde6# configurepython ./buildbot/configure.py --cuda -t release --cmake-gen \"Unix Makefiles\"# Assuming no error. Build takes 20mins. Get a coffee!cd buildmake sycl-toolchain -j `nproc`make install# assumes $HOME/install/llvm installationHelloWorld SYCL - Compile and Run  Step1. create a file simple-sycl-app-cuda.cpp#include &lt;sycl/sycl.hpp&gt;int main() {  // Creating buffer of 4 ints to be used inside the kernel code  sycl::buffer&lt;sycl::cl_int, 1&gt; Buffer(4);  // Creating SYCL queue  sycl::queue Queue;  // Size of index space for kernel  sycl::range&lt;1&gt; NumOfWorkItems{Buffer.size()};  // Submitting command group(work) to queue  Queue.submit([&amp;](sycl::handler &amp;cgh) {    // Getting write only access to the buffer on a device    auto Accessor = Buffer.get_access&lt;sycl::access::mode::write&gt;(cgh);    // Executing kernel    cgh.parallel_for&lt;class FillBuffer&gt;(        NumOfWorkItems, [=](sycl::id&lt;1&gt; WIid) {          // Fill buffer with indexes          Accessor[WIid] = (sycl::cl_int)WIid.get(0);        });  });  // Getting read only access to the buffer on the host.  // Implicit barrier waiting for queue to complete the work.  const auto HostAccessor = Buffer.get_access&lt;sycl::access::mode::read&gt;();  // Check the results  bool MismatchFound = false;  for (size_t I = 0; I &lt; Buffer.size(); ++I) {    if (HostAccessor[I] != I) {      std::cout &lt;&lt; \"The result is incorrect for element: \" &lt;&lt; I                &lt;&lt; \" , expected: \" &lt;&lt; I &lt;&lt; \" , got: \" &lt;&lt; HostAccessor[I]                &lt;&lt; std::endl;      MismatchFound = true;    }  }  if (!MismatchFound) {    std::cout &lt;&lt; \"The results are correct!\" &lt;&lt; std::endl;  }  return MismatchFound;}  Step 2. Exports# do itexport PATH=$HOME/install/llvm/build/bin:$PATHexport LD_LIBRARY_PATH=$HOME/install/llvm/build/lib:$LD_LIBRARY_PATH# verify$ clang++ --versionclang version 16.0.0    Step 3. Compile and run#complieclang++ -fsycl -fsycl-targets=nvptx64-nvidia-cuda simple-sycl-app.cpp -o simple-sycl-app-cuda#run./simple-sycl-app-cudaThe results are correct!Non-default CUDA installationIf CUDA installation folder is different or default CUDA is not the required version. Modify only two steps from above rest is the same.Assuming SYCL to use this /usr/local/cuda-11.5 version....# configurepython3 ./buildbot/configure.py --cuda -t release --cmake-gen \"Unix Makefiles\" --cmake-opt=\"-DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-11.5\"...# compileclang++ -fsycl -fsycl-targets=nvptx64-nvidia-cuda simple-sycl-app.cpp -o simple-sycl-app-cuda --cuda-path=/usr/local/cuda-11.5/That’s it. TATA.References  https://codeplay.com/solutions/oneapi/for-cuda/#getting-started  https://intel.github.io/llvm-docs/GetStartedGuide.html#build-dpc-toolchain-with-support-for-nvidia-cudaUpdate27NOV2023.  similar Err 1  similar Err 2  NOTE: An installation of at least CUDA 11.6 due to this issue",
            "content_html": "<h3 id=\"prerequisites\">Prerequisites</h3><ul>  <li><a href=\"https://intel.github.io/llvm-docs/GetStartedGuide.html#prerequisites\">All preq for LLVM</a>    <ul>      <li>git</li>      <li>cmake version 3.14+</li>      <li>python</li>      <li>ninja</li>      <li>C++ compiler GCC version 7.1.0+ (TLDR C++17 support)</li>    </ul>  </li>  <li>CUDA Toolkit 11.5+ in default path <em>(11.7 and 11.8 are only partially supported as on date!)</em></li>  <li>I am using Ubuntu 20.04; should work any Linux which has all above.</li></ul><h3 id=\"build-a-c-complier-for-sycl\">Build a C++ Complier for SYCL</h3><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">#Create folder; Assume is as $DPCPP_HOME</span><span class=\"n\">mkdir</span> <span class=\"err\">$</span><span class=\"n\">HOME</span><span class=\"o\">/</span><span class=\"n\">install</span><span class=\"n\">cd</span> <span class=\"err\">$</span><span class=\"n\">HOME</span><span class=\"o\">/</span><span class=\"n\">install</span><span class=\"cp\"># Build INTEL's LLVM# get sycl branch</span><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//github.com/intel/llvm.git -b sycl</span><span class=\"n\">cd</span> <span class=\"n\">llvm</span><span class=\"cp\"># OPTIONAL STEP. Warning LLVM undergoes a lot changes. # In case, recent commit did not work, use the below that worked for me# 082cde6 - (HEAD, origin/sycl, origin/HEAD, sycl) [CI][1/3] Add Ubuntu 22 containers build (#7106) &lt;Pavel Chupin&gt;</span><span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"mi\">082</span><span class=\"n\">cde6</span><span class=\"cp\"># configure</span><span class=\"n\">python</span> <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">buildbot</span><span class=\"o\">/</span><span class=\"n\">configure</span><span class=\"p\">.</span><span class=\"n\">py</span> <span class=\"o\">--</span><span class=\"n\">cuda</span> <span class=\"o\">-</span><span class=\"n\">t</span> <span class=\"n\">release</span> <span class=\"o\">--</span><span class=\"n\">cmake</span><span class=\"o\">-</span><span class=\"n\">gen</span> <span class=\"s\">\"Unix Makefiles\"</span><span class=\"cp\"># Assuming no error. Build takes 20mins. Get a coffee!</span><span class=\"n\">cd</span> <span class=\"n\">build</span><span class=\"n\">make</span> <span class=\"n\">sycl</span><span class=\"o\">-</span><span class=\"n\">toolchain</span> <span class=\"o\">-</span><span class=\"n\">j</span> <span class=\"err\">`</span><span class=\"n\">nproc</span><span class=\"err\">`</span><span class=\"n\">make</span> <span class=\"n\">install</span><span class=\"cp\"># assumes $HOME/install/llvm installation</span></code></pre></div></div><h3 id=\"helloworld-sycl---compile-and-run\">HelloWorld SYCL - Compile and Run</h3><ul>  <li><strong>Step1.</strong> create a file <code class=\"language-plaintext highlighter-rouge\">simple-sycl-app-cuda.cpp</code></li></ul><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;sycl/sycl.hpp&gt;</span><span class=\"cp\"></span><span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>  <span class=\"c1\">// Creating buffer of 4 ints to be used inside the kernel code</span>  <span class=\"n\">sycl</span><span class=\"o\">::</span><span class=\"n\">buffer</span><span class=\"o\">&lt;</span><span class=\"n\">sycl</span><span class=\"o\">::</span><span class=\"n\">cl_int</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span> <span class=\"n\">Buffer</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">);</span>  <span class=\"c1\">// Creating SYCL queue</span>  <span class=\"n\">sycl</span><span class=\"o\">::</span><span class=\"n\">queue</span> <span class=\"n\">Queue</span><span class=\"p\">;</span>  <span class=\"c1\">// Size of index space for kernel</span>  <span class=\"n\">sycl</span><span class=\"o\">::</span><span class=\"n\">range</span><span class=\"o\">&lt;</span><span class=\"mi\">1</span><span class=\"o\">&gt;</span> <span class=\"n\">NumOfWorkItems</span><span class=\"p\">{</span><span class=\"n\">Buffer</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">()};</span>  <span class=\"c1\">// Submitting command group(work) to queue</span>  <span class=\"n\">Queue</span><span class=\"p\">.</span><span class=\"n\">submit</span><span class=\"p\">([</span><span class=\"o\">&amp;</span><span class=\"p\">](</span><span class=\"n\">sycl</span><span class=\"o\">::</span><span class=\"n\">handler</span> <span class=\"o\">&amp;</span><span class=\"n\">cgh</span><span class=\"p\">)</span> <span class=\"p\">{</span>    <span class=\"c1\">// Getting write only access to the buffer on a device</span>    <span class=\"k\">auto</span> <span class=\"n\">Accessor</span> <span class=\"o\">=</span> <span class=\"n\">Buffer</span><span class=\"p\">.</span><span class=\"n\">get_access</span><span class=\"o\">&lt;</span><span class=\"n\">sycl</span><span class=\"o\">::</span><span class=\"n\">access</span><span class=\"o\">::</span><span class=\"n\">mode</span><span class=\"o\">::</span><span class=\"n\">write</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">cgh</span><span class=\"p\">);</span>    <span class=\"c1\">// Executing kernel</span>    <span class=\"n\">cgh</span><span class=\"p\">.</span><span class=\"n\">parallel_for</span><span class=\"o\">&lt;</span><span class=\"n\">class</span> <span class=\"n\">FillBuffer</span><span class=\"o\">&gt;</span><span class=\"p\">(</span>        <span class=\"n\">NumOfWorkItems</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"o\">=</span><span class=\"p\">](</span><span class=\"n\">sycl</span><span class=\"o\">::</span><span class=\"n\">id</span><span class=\"o\">&lt;</span><span class=\"mi\">1</span><span class=\"o\">&gt;</span> <span class=\"n\">WIid</span><span class=\"p\">)</span> <span class=\"p\">{</span>          <span class=\"c1\">// Fill buffer with indexes</span>          <span class=\"n\">Accessor</span><span class=\"p\">[</span><span class=\"n\">WIid</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">sycl</span><span class=\"o\">::</span><span class=\"n\">cl_int</span><span class=\"p\">)</span><span class=\"n\">WIid</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>        <span class=\"p\">});</span>  <span class=\"p\">});</span>  <span class=\"c1\">// Getting read only access to the buffer on the host.</span>  <span class=\"c1\">// Implicit barrier waiting for queue to complete the work.</span>  <span class=\"k\">const</span> <span class=\"k\">auto</span> <span class=\"n\">HostAccessor</span> <span class=\"o\">=</span> <span class=\"n\">Buffer</span><span class=\"p\">.</span><span class=\"n\">get_access</span><span class=\"o\">&lt;</span><span class=\"n\">sycl</span><span class=\"o\">::</span><span class=\"n\">access</span><span class=\"o\">::</span><span class=\"n\">mode</span><span class=\"o\">::</span><span class=\"n\">read</span><span class=\"o\">&gt;</span><span class=\"p\">();</span>  <span class=\"c1\">// Check the results</span>  <span class=\"n\">bool</span> <span class=\"n\">MismatchFound</span> <span class=\"o\">=</span> <span class=\"nb\">false</span><span class=\"p\">;</span>  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">size_t</span> <span class=\"n\">I</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">I</span> <span class=\"o\">&lt;</span> <span class=\"n\">Buffer</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">();</span> <span class=\"o\">++</span><span class=\"n\">I</span><span class=\"p\">)</span> <span class=\"p\">{</span>    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">HostAccessor</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">I</span><span class=\"p\">)</span> <span class=\"p\">{</span>      <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">\"The result is incorrect for element: \"</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">I</span>                <span class=\"o\">&lt;&lt;</span> <span class=\"s\">\" , expected: \"</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">I</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">\" , got: \"</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">HostAccessor</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span>                <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>      <span class=\"n\">MismatchFound</span> <span class=\"o\">=</span> <span class=\"nb\">true</span><span class=\"p\">;</span>    <span class=\"p\">}</span>  <span class=\"p\">}</span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">MismatchFound</span><span class=\"p\">)</span> <span class=\"p\">{</span>    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">\"The results are correct!\"</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>  <span class=\"p\">}</span>  <span class=\"k\">return</span> <span class=\"n\">MismatchFound</span><span class=\"p\">;</span><span class=\"p\">}</span></code></pre></div></div><ul>  <li><strong>Step 2</strong>. Exports</li></ul><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\"># do it</span><span class=\"n\">export</span> <span class=\"n\">PATH</span><span class=\"o\">=</span><span class=\"err\">$</span><span class=\"n\">HOME</span><span class=\"o\">/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">:</span><span class=\"err\">$</span><span class=\"n\">PATH</span><span class=\"n\">export</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=</span><span class=\"err\">$</span><span class=\"n\">HOME</span><span class=\"o\">/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"err\">$</span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"cp\"># verify</span><span class=\"err\">$</span> <span class=\"n\">clang</span><span class=\"o\">++</span> <span class=\"o\">--</span><span class=\"n\">version</span><span class=\"n\">clang</span> <span class=\"n\">version</span> <span class=\"mi\">16</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">0</span>  </code></pre></div></div><ul>  <li><strong>Step 3.</strong> Compile and run</li></ul><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">#complie</span><span class=\"n\">clang</span><span class=\"o\">++</span> <span class=\"o\">-</span><span class=\"n\">fsycl</span> <span class=\"o\">-</span><span class=\"n\">fsycl</span><span class=\"o\">-</span><span class=\"n\">targets</span><span class=\"o\">=</span><span class=\"n\">nvptx64</span><span class=\"o\">-</span><span class=\"n\">nvidia</span><span class=\"o\">-</span><span class=\"n\">cuda</span> <span class=\"n\">simple</span><span class=\"o\">-</span><span class=\"n\">sycl</span><span class=\"o\">-</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">cpp</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">simple</span><span class=\"o\">-</span><span class=\"n\">sycl</span><span class=\"o\">-</span><span class=\"n\">app</span><span class=\"o\">-</span><span class=\"n\">cuda</span><span class=\"cp\">#run</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">simple</span><span class=\"o\">-</span><span class=\"n\">sycl</span><span class=\"o\">-</span><span class=\"n\">app</span><span class=\"o\">-</span><span class=\"n\">cuda</span><span class=\"n\">The</span> <span class=\"n\">results</span> <span class=\"n\">are</span> <span class=\"n\">correct</span><span class=\"o\">!</span></code></pre></div></div><h2 id=\"non-default-cuda-installation\">Non-default CUDA installation</h2><p>If CUDA installation folder is different or default CUDA is not the required version. Modify only two steps from above rest is the same.Assuming SYCL to use this <code class=\"language-plaintext highlighter-rouge\">/usr/local/cuda-11.5</code> version.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">...</span><span class=\"cp\"># configure</span><span class=\"n\">python3</span> <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">buildbot</span><span class=\"o\">/</span><span class=\"n\">configure</span><span class=\"p\">.</span><span class=\"n\">py</span> <span class=\"o\">--</span><span class=\"n\">cuda</span> <span class=\"o\">-</span><span class=\"n\">t</span> <span class=\"n\">release</span> <span class=\"o\">--</span><span class=\"n\">cmake</span><span class=\"o\">-</span><span class=\"n\">gen</span> <span class=\"s\">\"Unix Makefiles\"</span> <span class=\"o\">--</span><span class=\"n\">cmake</span><span class=\"o\">-</span><span class=\"n\">opt</span><span class=\"o\">=</span><span class=\"s\">\"-DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-11.5\"</span><span class=\"p\">...</span><span class=\"cp\"># compile</span><span class=\"n\">clang</span><span class=\"o\">++</span> <span class=\"o\">-</span><span class=\"n\">fsycl</span> <span class=\"o\">-</span><span class=\"n\">fsycl</span><span class=\"o\">-</span><span class=\"n\">targets</span><span class=\"o\">=</span><span class=\"n\">nvptx64</span><span class=\"o\">-</span><span class=\"n\">nvidia</span><span class=\"o\">-</span><span class=\"n\">cuda</span> <span class=\"n\">simple</span><span class=\"o\">-</span><span class=\"n\">sycl</span><span class=\"o\">-</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">cpp</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">simple</span><span class=\"o\">-</span><span class=\"n\">sycl</span><span class=\"o\">-</span><span class=\"n\">app</span><span class=\"o\">-</span><span class=\"n\">cuda</span> <span class=\"o\">--</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"n\">path</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span></code></pre></div></div><p>That’s it. TATA.</p><h3 id=\"references\">References</h3><ul>  <li><a href=\"https://codeplay.com/solutions/oneapi/for-cuda/#getting-started\">https://codeplay.com/solutions/oneapi/for-cuda/#getting-started</a></li>  <li><a href=\"https://intel.github.io/llvm-docs/GetStartedGuide.html#build-dpc-toolchain-with-support-for-nvidia-cuda\">https://intel.github.io/llvm-docs/GetStartedGuide.html#build-dpc-toolchain-with-support-for-nvidia-cuda</a></li></ul><h3 id=\"update\">Update</h3><p>27NOV2023.</p><ul>  <li><a href=\"https://github.com/intel/llvm/issues/11918#issuecomment-1815220117\">similar Err 1</a></li>  <li><a href=\"https://github.com/intel/llvm/issues/11918#issuecomment-1815220117\">similar Err 2</a></li>  <li>NOTE: An installation of at least CUDA 11.6 due to this <a href=\"https://forums.developer.nvidia.com/t/libdevice-functions-causing-ptxas-segfault/193352\">issue</a></li></ul>",
            "url": "https://mrprajesh.co.in/blog/how-to-install-sycl.html",
            
            
            
            "tags": ["sycl","cuda","nvidia","intel","oneapi","dpcpp"],
            
            "date_published": "2022-11-15T10:12:43+05:30",
            "date_modified": "2022-11-15T10:12:43+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/to-install-cuda-on-centos7.html",
            "title": "How to install CUDA 11.5 on Centos7",
            "summary": null,
            "content_text": "How to install a newer CUDA On CentOS 7.# Enable a better GCC (Do not use default -- GCC 4.8.5 in my case )scl enable devtoolset-9 bash# download the required CUDA file from here https://developer.nvidia.com/cuda-toolkit-archive# In my case I am choosing CUDA 11.5.2 for some specific reasons.# Choose the OS and Run file like https://developer.nvidia.com/cuda-11-5-2-download-archive?target_os=Linux&amp;target_arch=x86_64&amp;Distribution=CentOS&amp;target_version=7&amp;target_type=runfile_local wget https://developer.download.nvidia.com/compute/cuda/11.5.2/local_installers/cuda_11.5.2_495.29.05_linux.runsudo sh cuda_11.5.2_495.29.05_linux.run# Checkmark Driver, Toolkit, Demo, Docs# Should result in something like below upon success.============ Summary ============Driver:   InstalledToolkit:  Installed in /usr/local/cuda-11.5/Samples:  Installed in /root/Please make sure that -   PATH includes /usr/local/cuda-11.5/bin -   LD_LIBRARY_PATH includes /usr/local/cuda-11.5/lib64, or, add /usr/local/cuda-11.5/lib64 to /etc/ld.so.conf and run ldconfig as rootTo uninstall the CUDA Toolkit, run cuda-uninstaller in /usr/local/cuda-11.5/binTo uninstall the NVIDIA Driver, run nvidia-uninstallLogfile is /var/log/cuda-installer.log# both should be working. deviceQuery nvidia-smi REBOOTrebootboth should be workingor write a HelloWorld.cudeviceQuery nvidia-smi That’s all.For office use only.To uninstall driversnvidia-uninstall#no override backup x configTo uninstall particular CUDA/usr/local/cuda-11.8/bin/cuda-uninstallerblacklist-nouveauEnsure Step 1 is done. If not the do both 1 and 2.# Step 1: Create a file at /etc/modprobe.d/blacklist-nouveau.conf with the following contents:blacklist nouveauoptions nouveau modeset=0# Step 2: Regenerate the kernel initramfs:sudo dracut --forcebuiding and running deviceQuerycd NVIDIA_CUDA-11.5_Samples/1_Utilities/deviceQuery[root@rn-gpu-p100 deviceQuery]# lltotal 40-rw-r--r--. 1 root root 12721 Nov 14 11:12 deviceQuery.cpp-rw-r--r--. 1 root root 12317 Nov 14 11:12 Makefile-rw-r--r--. 1 root root  1815 Nov 14 11:12 NsightEclipse.xml-rw-r--r--. 1 root root   168 Nov 14 11:12 readme.txt[root@rn-gpu-p100 deviceQuery]# make/usr/local/cuda/bin/nvcc -ccbin g++ -I../../common/inc  -m64    --threads 0 --std=c++11 -gencode arch=compute_35,code=sm_35 -gencode arch=compute_37,code=sm_37 -gencode arch=compute_50,code=sm_50 -gencode arch=compute_52,code=sm_52 -gencode arch=compute_60,code=sm_60 -gencode arch=compute_61,code=sm_61 -gencode arch=compute_70,code=sm_70 -gencode arch=compute_75,code=sm_75 -gencode arch=compute_80,code=sm_80 -gencode arch=compute_86,code=sm_86 -gencode arch=compute_86,code=compute_86 -o deviceQuery.o -c deviceQuery.cppnvcc warning : The 'compute_35', 'compute_37', 'compute_50', 'sm_35', 'sm_37' and 'sm_50' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning)./usr/local/cuda/bin/nvcc -ccbin g++   -m64      -gencode arch=compute_35,code=sm_35 -gencode arch=compute_37,code=sm_37 -gencode arch=compute_50,code=sm_50 -gencode arch=compute_52,code=sm_52 -gencode arch=compute_60,code=sm_60 -gencode arch=compute_61,code=sm_61 -gencode arch=compute_70,code=sm_70 -gencode arch=compute_75,code=sm_75 -gencode arch=compute_80,code=sm_80 -gencode arch=compute_86,code=sm_86 -gencode arch=compute_86,code=compute_86 -o deviceQuery deviceQuery.o nvcc warning : The 'compute_35', 'compute_37', 'compute_50', 'sm_35', 'sm_37' and 'sm_50' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).mkdir -p ../../bin/x86_64/linux/releasecp deviceQuery ../../bin/x86_64/linux/release[root@rn-gpu-p100 deviceQuery]# ./deviceQuery ./deviceQuery Starting... CUDA Device Query (Runtime API) version (CUDART static linking)Detected 2 CUDA Capable device(s)Device 0: \"NVIDIA GeForce RTX 2080 Ti\"  CUDA Driver Version / Runtime Version          11.5 / 11.5  CUDA Capability Major/Minor version number:    7.5  Total amount of global memory:                 11019 MBytes (11554717696 bytes)  (068) Multiprocessors, (064) CUDA Cores/MP:    4352 CUDA Cores  GPU Max Clock rate:                            1545 MHz (1.54 GHz)  Memory Clock rate:                             7000 Mhz  Memory Bus Width:                              352-bit  L2 Cache Size:                                 5767168 bytes  Maximum Texture Dimension Size (x,y,z)         1D=(131072), 2D=(131072, 65536), 3D=(16384, 16384, 16384)  Maximum Layered 1D Texture Size, (num) layers  1D=(32768), 2048 layers  Maximum Layered 2D Texture Size, (num) layers  2D=(32768, 32768), 2048 layers  Total amount of constant memory:               65536 bytes  Total amount of shared memory per block:       49152 bytes  Total shared memory per multiprocessor:        65536 bytes  Total number of registers available per block: 65536  Warp size:                                     32  Maximum number of threads per multiprocessor:  1024  Maximum number of threads per block:           1024  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)  Maximum memory pitch:                          2147483647 bytes  Texture alignment:                             512 bytes  Concurrent copy and kernel execution:          Yes with 3 copy engine(s)  Run time limit on kernels:                     No  Integrated GPU sharing Host Memory:            No  Support host page-locked memory mapping:       Yes  Alignment requirement for Surfaces:            Yes  Device has ECC support:                        Disabled  Device supports Unified Addressing (UVA):      Yes  Device supports Managed Memory:                Yes  Device supports Compute Preemption:            Yes  Supports Cooperative Kernel Launch:            Yes  Supports MultiDevice Co-op Kernel Launch:      Yes  Device PCI Domain ID / Bus ID / location ID:   0 / 2 / 0  Compute Mode:     &lt; Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) &gt;Device 1: \"Tesla P100-PCIE-12GB\"  CUDA Driver Version / Runtime Version          11.5 / 11.5  CUDA Capability Major/Minor version number:    6.0  Total amount of global memory:                 12198 MBytes (12790923264 bytes)  (056) Multiprocessors, (064) CUDA Cores/MP:    3584 CUDA Cores  GPU Max Clock rate:                            1329 MHz (1.33 GHz)  Memory Clock rate:                             715 Mhz  Memory Bus Width:                              3072-bit  L2 Cache Size:                                 3145728 bytes  Maximum Texture Dimension Size (x,y,z)         1D=(131072), 2D=(131072, 65536), 3D=(16384, 16384, 16384)  Maximum Layered 1D Texture Size, (num) layers  1D=(32768), 2048 layers  Maximum Layered 2D Texture Size, (num) layers  2D=(32768, 32768), 2048 layers  Total amount of constant memory:               65536 bytes  Total amount of shared memory per block:       49152 bytes  Total shared memory per multiprocessor:        65536 bytes  Total number of registers available per block: 65536  Warp size:                                     32  Maximum number of threads per multiprocessor:  2048  Maximum number of threads per block:           1024  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)  Maximum memory pitch:                          2147483647 bytes  Texture alignment:                             512 bytes  Concurrent copy and kernel execution:          Yes with 2 copy engine(s)  Run time limit on kernels:                     No  Integrated GPU sharing Host Memory:            No  Support host page-locked memory mapping:       Yes  Alignment requirement for Surfaces:            Yes  Device has ECC support:                        Enabled  Device supports Unified Addressing (UVA):      Yes  Device supports Managed Memory:                Yes  Device supports Compute Preemption:            Yes  Supports Cooperative Kernel Launch:            Yes  Supports MultiDevice Co-op Kernel Launch:      Yes  Device PCI Domain ID / Bus ID / location ID:   0 / 130 / 0  Compute Mode:     &lt; Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) &gt;&gt; Peer access from NVIDIA GeForce RTX 2080 Ti (GPU0) -&gt; Tesla P100-PCIE-12GB (GPU1) : No&gt; Peer access from Tesla P100-PCIE-12GB (GPU1) -&gt; NVIDIA GeForce RTX 2080 Ti (GPU0) : NodeviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 11.5, CUDA Runtime Version = 11.5, NumDevs = 2Result = PASSrunning nvidia-smi[root@rn-gpu-p100 deviceQuery]# nvidia-smi Mon Nov 14 11:14:38 2022       +-----------------------------------------------------------------------------+| NVIDIA-SMI 495.29.05    Driver Version: 495.29.05    CUDA Version: 11.5     ||-------------------------------+----------------------+----------------------+| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC || Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. ||                               |                      |               MIG M. ||===============================+======================+======================||   0  NVIDIA GeForce ...  Off  | 00000000:02:00.0 Off |                  N/A || 27%   48C    P0    54W / 250W |      0MiB / 11019MiB |      0%      Default ||                               |                      |                  N/A |+-------------------------------+----------------------+----------------------+|   1  Tesla P100-PCIE...  Off  | 00000000:82:00.0 Off |                    0 || N/A   32C    P0    25W / 250W |      0MiB / 12198MiB |      2%      Default ||                               |                      |                  N/A |+-------------------------------+----------------------+----------------------+                                                                               +-----------------------------------------------------------------------------+| Processes:                                                                  ||  GPU   GI   CI        PID   Type   Process name                  GPU Memory ||        ID   ID                                                   Usage      ||=============================================================================||  No running processes found                                                 |+-----------------------------------------------------------------------------+Nvidia driver-GCC-Mapingcat /proc/driver/nvidia/versionNVRM version: NVIDIA UNIX x86_64 Kernel Module  495.29.05  Thu Sep 30 16:00:29 UTC 2021GCC version:  gcc version 9.3.1 20200408 (Red Hat 9.3.1-2) (GCC)",
            "content_html": "<h1 id=\"how-to-install-a-newer-cuda-on-centos-7\">How to install a newer CUDA On CentOS 7.</h1><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\"># Enable a better GCC (Do not use default -- GCC 4.8.5 in my case )</span><span class=\"n\">scl</span> <span class=\"n\">enable</span> <span class=\"n\">devtoolset</span><span class=\"o\">-</span><span class=\"mi\">9</span> <span class=\"n\">bash</span><span class=\"cp\"># download the required CUDA file from here https://developer.nvidia.com/cuda-toolkit-archive# In my case I am choosing CUDA 11.5.2 for some specific reasons.# Choose the OS and Run file like https://developer.nvidia.com/cuda-11-5-2-download-archive?target_os=Linux&amp;target_arch=x86_64&amp;Distribution=CentOS&amp;target_version=7&amp;target_type=runfile_local </span><span class=\"n\">wget</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//developer.download.nvidia.com/compute/cuda/11.5.2/local_installers/cuda_11.5.2_495.29.05_linux.run</span><span class=\"n\">sudo</span> <span class=\"n\">sh</span> <span class=\"n\">cuda_11</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"n\">_495</span><span class=\"p\">.</span><span class=\"mi\">29</span><span class=\"p\">.</span><span class=\"mo\">05</span><span class=\"n\">_linux</span><span class=\"p\">.</span><span class=\"n\">run</span><span class=\"cp\"># Checkmark Driver, Toolkit, Demo, Docs</span><span class=\"cp\"># Should result in something like below upon success.</span><span class=\"o\">===========</span><span class=\"o\">=</span> <span class=\"n\">Summary</span> <span class=\"o\">=</span><span class=\"o\">===========</span><span class=\"n\">Driver</span><span class=\"o\">:</span>   <span class=\"n\">Installed</span><span class=\"n\">Toolkit</span><span class=\"o\">:</span>  <span class=\"n\">Installed</span> <span class=\"n\">in</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">Samples</span><span class=\"o\">:</span>  <span class=\"n\">Installed</span> <span class=\"n\">in</span> <span class=\"o\">/</span><span class=\"n\">root</span><span class=\"o\">/</span><span class=\"n\">Please</span> <span class=\"n\">make</span> <span class=\"n\">sure</span> <span class=\"n\">that</span> <span class=\"o\">-</span>   <span class=\"n\">PATH</span> <span class=\"n\">includes</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">bin</span> <span class=\"o\">-</span>   <span class=\"n\">LD_LIBRARY_PATH</span> <span class=\"n\">includes</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">lib64</span><span class=\"p\">,</span> <span class=\"n\">or</span><span class=\"p\">,</span> <span class=\"n\">add</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">lib64</span> <span class=\"n\">to</span> <span class=\"o\">/</span><span class=\"n\">etc</span><span class=\"o\">/</span><span class=\"n\">ld</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"p\">.</span><span class=\"n\">conf</span> <span class=\"n\">and</span> <span class=\"n\">run</span> <span class=\"n\">ldconfig</span> <span class=\"n\">as</span> <span class=\"n\">root</span><span class=\"n\">To</span> <span class=\"n\">uninstall</span> <span class=\"n\">the</span> <span class=\"n\">CUDA</span> <span class=\"n\">Toolkit</span><span class=\"p\">,</span> <span class=\"n\">run</span> <span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"n\">uninstaller</span> <span class=\"n\">in</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"n\">To</span> <span class=\"n\">uninstall</span> <span class=\"n\">the</span> <span class=\"n\">NVIDIA</span> <span class=\"n\">Driver</span><span class=\"p\">,</span> <span class=\"n\">run</span> <span class=\"n\">nvidia</span><span class=\"o\">-</span><span class=\"n\">uninstall</span><span class=\"n\">Logfile</span> <span class=\"n\">is</span> <span class=\"o\">/</span><span class=\"n\">var</span><span class=\"o\">/</span><span class=\"n\">log</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"n\">installer</span><span class=\"p\">.</span><span class=\"n\">log</span><span class=\"cp\"># both should be working. </span><span class=\"n\">deviceQuery</span> <span class=\"n\">nvidia</span><span class=\"o\">-</span><span class=\"n\">smi</span> </code></pre></div></div><h3 id=\"reboot\">REBOOT</h3><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">reboot</span></code></pre></div></div><h4 id=\"both-should-be-working\">both should be working</h4><p>or write a HelloWorld.cu</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">deviceQuery</span> <span class=\"n\">nvidia</span><span class=\"o\">-</span><span class=\"n\">smi</span> </code></pre></div></div><p>That’s all.</p><h2 id=\"for-office-use-only\">For office use only.</h2><h3 id=\"to-uninstall-drivers\">To uninstall drivers</h3><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">nvidia</span><span class=\"o\">-</span><span class=\"n\">uninstall</span><span class=\"cp\">#no override backup x config</span></code></pre></div></div><h3 id=\"to-uninstall-particular-cuda\">To uninstall particular CUDA</h3><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"n\">uninstaller</span></code></pre></div></div><h3 id=\"blacklist-nouveau\">blacklist-nouveau</h3><p>Ensure Step 1 is done. If not the do both 1 and 2.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\"># Step 1: Create a file at /etc/modprobe.d/blacklist-nouveau.conf with the following contents:</span><span class=\"n\">blacklist</span> <span class=\"n\">nouveau</span><span class=\"n\">options</span> <span class=\"n\">nouveau</span> <span class=\"n\">modeset</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"cp\"># Step 2: Regenerate the kernel initramfs:</span><span class=\"n\">sudo</span> <span class=\"n\">dracut</span> <span class=\"o\">--</span><span class=\"n\">force</span></code></pre></div></div><h3 id=\"buiding-and-running-devicequery\">buiding and running deviceQuery</h3><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">cd</span> <span class=\"n\">NVIDIA_CUDA</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"n\">_Samples</span><span class=\"o\">/</span><span class=\"mi\">1</span><span class=\"n\">_Utilities</span><span class=\"o\">/</span><span class=\"n\">deviceQuery</span><span class=\"p\">[</span><span class=\"n\">root</span><span class=\"err\">@</span><span class=\"n\">rn</span><span class=\"o\">-</span><span class=\"n\">gpu</span><span class=\"o\">-</span><span class=\"n\">p100</span> <span class=\"n\">deviceQuery</span><span class=\"p\">]</span><span class=\"err\">#</span> <span class=\"n\">ll</span><span class=\"n\">total</span> <span class=\"mi\">40</span><span class=\"o\">-</span><span class=\"n\">rw</span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"o\">--</span><span class=\"n\">r</span><span class=\"o\">--</span><span class=\"p\">.</span> <span class=\"mi\">1</span> <span class=\"n\">root</span> <span class=\"n\">root</span> <span class=\"mi\">12721</span> <span class=\"n\">Nov</span> <span class=\"mi\">14</span> <span class=\"mi\">11</span><span class=\"o\">:</span><span class=\"mi\">12</span> <span class=\"n\">deviceQuery</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"o\">-</span><span class=\"n\">rw</span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"o\">--</span><span class=\"n\">r</span><span class=\"o\">--</span><span class=\"p\">.</span> <span class=\"mi\">1</span> <span class=\"n\">root</span> <span class=\"n\">root</span> <span class=\"mi\">12317</span> <span class=\"n\">Nov</span> <span class=\"mi\">14</span> <span class=\"mi\">11</span><span class=\"o\">:</span><span class=\"mi\">12</span> <span class=\"n\">Makefile</span><span class=\"o\">-</span><span class=\"n\">rw</span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"o\">--</span><span class=\"n\">r</span><span class=\"o\">--</span><span class=\"p\">.</span> <span class=\"mi\">1</span> <span class=\"n\">root</span> <span class=\"n\">root</span>  <span class=\"mi\">1815</span> <span class=\"n\">Nov</span> <span class=\"mi\">14</span> <span class=\"mi\">11</span><span class=\"o\">:</span><span class=\"mi\">12</span> <span class=\"n\">NsightEclipse</span><span class=\"p\">.</span><span class=\"n\">xml</span><span class=\"o\">-</span><span class=\"n\">rw</span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"o\">--</span><span class=\"n\">r</span><span class=\"o\">--</span><span class=\"p\">.</span> <span class=\"mi\">1</span> <span class=\"n\">root</span> <span class=\"n\">root</span>   <span class=\"mi\">168</span> <span class=\"n\">Nov</span> <span class=\"mi\">14</span> <span class=\"mi\">11</span><span class=\"o\">:</span><span class=\"mi\">12</span> <span class=\"n\">readme</span><span class=\"p\">.</span><span class=\"n\">txt</span><span class=\"p\">[</span><span class=\"n\">root</span><span class=\"err\">@</span><span class=\"n\">rn</span><span class=\"o\">-</span><span class=\"n\">gpu</span><span class=\"o\">-</span><span class=\"n\">p100</span> <span class=\"n\">deviceQuery</span><span class=\"p\">]</span><span class=\"err\">#</span> <span class=\"n\">make</span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">nvcc</span> <span class=\"o\">-</span><span class=\"n\">ccbin</span> <span class=\"n\">g</span><span class=\"o\">++</span> <span class=\"o\">-</span><span class=\"n\">I</span><span class=\"p\">..</span><span class=\"o\">/</span><span class=\"p\">..</span><span class=\"o\">/</span><span class=\"n\">common</span><span class=\"o\">/</span><span class=\"n\">inc</span>  <span class=\"o\">-</span><span class=\"n\">m64</span>    <span class=\"o\">--</span><span class=\"n\">threads</span> <span class=\"mi\">0</span> <span class=\"o\">--</span><span class=\"n\">std</span><span class=\"o\">=</span><span class=\"n\">c</span><span class=\"o\">++</span><span class=\"mi\">11</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_35</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_35</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_37</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_37</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_50</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_50</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_52</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_52</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_60</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_60</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_61</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_61</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_70</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_70</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_75</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_75</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_80</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_80</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_86</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_86</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_86</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">compute_86</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">deviceQuery</span><span class=\"p\">.</span><span class=\"n\">o</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">deviceQuery</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"n\">nvcc</span> <span class=\"n\">warning</span> <span class=\"o\">:</span> <span class=\"n\">The</span> <span class=\"err\">'</span><span class=\"n\">compute_35</span><span class=\"err\">'</span><span class=\"p\">,</span> <span class=\"err\">'</span><span class=\"n\">compute_37</span><span class=\"err\">'</span><span class=\"p\">,</span> <span class=\"err\">'</span><span class=\"n\">compute_50</span><span class=\"err\">'</span><span class=\"p\">,</span> <span class=\"err\">'</span><span class=\"n\">sm_35</span><span class=\"err\">'</span><span class=\"p\">,</span> <span class=\"err\">'</span><span class=\"n\">sm_37</span><span class=\"err\">'</span> <span class=\"n\">and</span> <span class=\"err\">'</span><span class=\"n\">sm_50</span><span class=\"err\">'</span> <span class=\"n\">architectures</span> <span class=\"n\">are</span> <span class=\"n\">deprecated</span><span class=\"p\">,</span> <span class=\"n\">and</span> <span class=\"n\">may</span> <span class=\"n\">be</span> <span class=\"n\">removed</span> <span class=\"n\">in</span> <span class=\"n\">a</span> <span class=\"n\">future</span> <span class=\"n\">release</span> <span class=\"p\">(</span><span class=\"n\">Use</span> <span class=\"o\">-</span><span class=\"n\">Wno</span><span class=\"o\">-</span><span class=\"n\">deprecated</span><span class=\"o\">-</span><span class=\"n\">gpu</span><span class=\"o\">-</span><span class=\"n\">targets</span> <span class=\"n\">to</span> <span class=\"n\">suppress</span> <span class=\"n\">warning</span><span class=\"p\">).</span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">nvcc</span> <span class=\"o\">-</span><span class=\"n\">ccbin</span> <span class=\"n\">g</span><span class=\"o\">++</span>   <span class=\"o\">-</span><span class=\"n\">m64</span>      <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_35</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_35</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_37</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_37</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_50</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_50</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_52</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_52</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_60</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_60</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_61</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_61</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_70</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_70</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_75</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_75</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_80</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_80</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_86</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">sm_86</span> <span class=\"o\">-</span><span class=\"n\">gencode</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">compute_86</span><span class=\"p\">,</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"n\">compute_86</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">deviceQuery</span> <span class=\"n\">deviceQuery</span><span class=\"p\">.</span><span class=\"n\">o</span> <span class=\"n\">nvcc</span> <span class=\"n\">warning</span> <span class=\"o\">:</span> <span class=\"n\">The</span> <span class=\"err\">'</span><span class=\"n\">compute_35</span><span class=\"err\">'</span><span class=\"p\">,</span> <span class=\"err\">'</span><span class=\"n\">compute_37</span><span class=\"err\">'</span><span class=\"p\">,</span> <span class=\"err\">'</span><span class=\"n\">compute_50</span><span class=\"err\">'</span><span class=\"p\">,</span> <span class=\"err\">'</span><span class=\"n\">sm_35</span><span class=\"err\">'</span><span class=\"p\">,</span> <span class=\"err\">'</span><span class=\"n\">sm_37</span><span class=\"err\">'</span> <span class=\"n\">and</span> <span class=\"err\">'</span><span class=\"n\">sm_50</span><span class=\"err\">'</span> <span class=\"n\">architectures</span> <span class=\"n\">are</span> <span class=\"n\">deprecated</span><span class=\"p\">,</span> <span class=\"n\">and</span> <span class=\"n\">may</span> <span class=\"n\">be</span> <span class=\"n\">removed</span> <span class=\"n\">in</span> <span class=\"n\">a</span> <span class=\"n\">future</span> <span class=\"n\">release</span> <span class=\"p\">(</span><span class=\"n\">Use</span> <span class=\"o\">-</span><span class=\"n\">Wno</span><span class=\"o\">-</span><span class=\"n\">deprecated</span><span class=\"o\">-</span><span class=\"n\">gpu</span><span class=\"o\">-</span><span class=\"n\">targets</span> <span class=\"n\">to</span> <span class=\"n\">suppress</span> <span class=\"n\">warning</span><span class=\"p\">).</span><span class=\"n\">mkdir</span> <span class=\"o\">-</span><span class=\"n\">p</span> <span class=\"p\">..</span><span class=\"o\">/</span><span class=\"p\">..</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">x86_64</span><span class=\"o\">/</span><span class=\"n\">linux</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"n\">cp</span> <span class=\"n\">deviceQuery</span> <span class=\"p\">..</span><span class=\"o\">/</span><span class=\"p\">..</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">x86_64</span><span class=\"o\">/</span><span class=\"n\">linux</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"p\">[</span><span class=\"n\">root</span><span class=\"err\">@</span><span class=\"n\">rn</span><span class=\"o\">-</span><span class=\"n\">gpu</span><span class=\"o\">-</span><span class=\"n\">p100</span> <span class=\"n\">deviceQuery</span><span class=\"p\">]</span><span class=\"err\">#</span> <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">deviceQuery</span> <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">deviceQuery</span> <span class=\"n\">Starting</span><span class=\"p\">...</span> <span class=\"n\">CUDA</span> <span class=\"n\">Device</span> <span class=\"n\">Query</span> <span class=\"p\">(</span><span class=\"n\">Runtime</span> <span class=\"n\">API</span><span class=\"p\">)</span> <span class=\"n\">version</span> <span class=\"p\">(</span><span class=\"n\">CUDART</span> <span class=\"k\">static</span> <span class=\"n\">linking</span><span class=\"p\">)</span><span class=\"n\">Detected</span> <span class=\"mi\">2</span> <span class=\"n\">CUDA</span> <span class=\"n\">Capable</span> <span class=\"n\">device</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"n\">Device</span> <span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"s\">\"NVIDIA GeForce RTX 2080 Ti\"</span>  <span class=\"n\">CUDA</span> <span class=\"n\">Driver</span> <span class=\"n\">Version</span> <span class=\"o\">/</span> <span class=\"n\">Runtime</span> <span class=\"n\">Version</span>          <span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span> <span class=\"o\">/</span> <span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span>  <span class=\"n\">CUDA</span> <span class=\"n\">Capability</span> <span class=\"n\">Major</span><span class=\"o\">/</span><span class=\"n\">Minor</span> <span class=\"n\">version</span> <span class=\"n\">number</span><span class=\"o\">:</span>    <span class=\"mi\">7</span><span class=\"p\">.</span><span class=\"mi\">5</span>  <span class=\"n\">Total</span> <span class=\"n\">amount</span> <span class=\"n\">of</span> <span class=\"n\">global</span> <span class=\"n\">memory</span><span class=\"o\">:</span>                 <span class=\"mi\">11019</span> <span class=\"n\">MBytes</span> <span class=\"p\">(</span><span class=\"mi\">11554717696</span> <span class=\"n\">bytes</span><span class=\"p\">)</span>  <span class=\"p\">(</span><span class=\"mo\">06</span><span class=\"mi\">8</span><span class=\"p\">)</span> <span class=\"n\">Multiprocessors</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mo\">064</span><span class=\"p\">)</span> <span class=\"n\">CUDA</span> <span class=\"n\">Cores</span><span class=\"o\">/</span><span class=\"n\">MP</span><span class=\"o\">:</span>    <span class=\"mi\">4352</span> <span class=\"n\">CUDA</span> <span class=\"n\">Cores</span>  <span class=\"n\">GPU</span> <span class=\"n\">Max</span> <span class=\"n\">Clock</span> <span class=\"n\">rate</span><span class=\"o\">:</span>                            <span class=\"mi\">1545</span> <span class=\"n\">MHz</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"mi\">54</span> <span class=\"n\">GHz</span><span class=\"p\">)</span>  <span class=\"n\">Memory</span> <span class=\"n\">Clock</span> <span class=\"n\">rate</span><span class=\"o\">:</span>                             <span class=\"mi\">7000</span> <span class=\"n\">Mhz</span>  <span class=\"n\">Memory</span> <span class=\"n\">Bus</span> <span class=\"n\">Width</span><span class=\"o\">:</span>                              <span class=\"mi\">352</span><span class=\"o\">-</span><span class=\"n\">bit</span>  <span class=\"n\">L2</span> <span class=\"n\">Cache</span> <span class=\"n\">Size</span><span class=\"o\">:</span>                                 <span class=\"mi\">5767168</span> <span class=\"n\">bytes</span>  <span class=\"n\">Maximum</span> <span class=\"n\">Texture</span> <span class=\"n\">Dimension</span> <span class=\"n\">Size</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">)</span>         <span class=\"mi\">1</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">131072</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">131072</span><span class=\"p\">,</span> <span class=\"mi\">65536</span><span class=\"p\">),</span> <span class=\"mi\">3</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">16384</span><span class=\"p\">,</span> <span class=\"mi\">16384</span><span class=\"p\">,</span> <span class=\"mi\">16384</span><span class=\"p\">)</span>  <span class=\"n\">Maximum</span> <span class=\"n\">Layered</span> <span class=\"mi\">1</span><span class=\"n\">D</span> <span class=\"n\">Texture</span> <span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)</span> <span class=\"n\">layers</span>  <span class=\"mi\">1</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">32768</span><span class=\"p\">),</span> <span class=\"mi\">2048</span> <span class=\"n\">layers</span>  <span class=\"n\">Maximum</span> <span class=\"n\">Layered</span> <span class=\"mi\">2</span><span class=\"n\">D</span> <span class=\"n\">Texture</span> <span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)</span> <span class=\"n\">layers</span>  <span class=\"mi\">2</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">32768</span><span class=\"p\">,</span> <span class=\"mi\">32768</span><span class=\"p\">),</span> <span class=\"mi\">2048</span> <span class=\"n\">layers</span>  <span class=\"n\">Total</span> <span class=\"n\">amount</span> <span class=\"n\">of</span> <span class=\"n\">constant</span> <span class=\"n\">memory</span><span class=\"o\">:</span>               <span class=\"mi\">65536</span> <span class=\"n\">bytes</span>  <span class=\"n\">Total</span> <span class=\"n\">amount</span> <span class=\"n\">of</span> <span class=\"n\">shared</span> <span class=\"n\">memory</span> <span class=\"n\">per</span> <span class=\"n\">block</span><span class=\"o\">:</span>       <span class=\"mi\">49152</span> <span class=\"n\">bytes</span>  <span class=\"n\">Total</span> <span class=\"n\">shared</span> <span class=\"n\">memory</span> <span class=\"n\">per</span> <span class=\"n\">multiprocessor</span><span class=\"o\">:</span>        <span class=\"mi\">65536</span> <span class=\"n\">bytes</span>  <span class=\"n\">Total</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">registers</span> <span class=\"n\">available</span> <span class=\"n\">per</span> <span class=\"n\">block</span><span class=\"o\">:</span> <span class=\"mi\">65536</span>  <span class=\"n\">Warp</span> <span class=\"n\">size</span><span class=\"o\">:</span>                                     <span class=\"mi\">32</span>  <span class=\"n\">Maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">threads</span> <span class=\"n\">per</span> <span class=\"n\">multiprocessor</span><span class=\"o\">:</span>  <span class=\"mi\">1024</span>  <span class=\"n\">Maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">threads</span> <span class=\"n\">per</span> <span class=\"n\">block</span><span class=\"o\">:</span>           <span class=\"mi\">1024</span>  <span class=\"n\">Max</span> <span class=\"n\">dimension</span> <span class=\"n\">size</span> <span class=\"n\">of</span> <span class=\"n\">a</span> <span class=\"kr\">thread</span> <span class=\"n\">block</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">)</span>  <span class=\"n\">Max</span> <span class=\"n\">dimension</span> <span class=\"n\">size</span> <span class=\"n\">of</span> <span class=\"n\">a</span> <span class=\"n\">grid</span> <span class=\"n\">size</span>    <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"mi\">2147483647</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">)</span>  <span class=\"n\">Maximum</span> <span class=\"n\">memory</span> <span class=\"n\">pitch</span><span class=\"o\">:</span>                          <span class=\"mi\">2147483647</span> <span class=\"n\">bytes</span>  <span class=\"n\">Texture</span> <span class=\"n\">alignment</span><span class=\"o\">:</span>                             <span class=\"mi\">512</span> <span class=\"n\">bytes</span>  <span class=\"n\">Concurrent</span> <span class=\"n\">copy</span> <span class=\"n\">and</span> <span class=\"n\">kernel</span> <span class=\"n\">execution</span><span class=\"o\">:</span>          <span class=\"n\">Yes</span> <span class=\"n\">with</span> <span class=\"mi\">3</span> <span class=\"n\">copy</span> <span class=\"n\">engine</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>  <span class=\"n\">Run</span> <span class=\"n\">time</span> <span class=\"n\">limit</span> <span class=\"n\">on</span> <span class=\"n\">kernels</span><span class=\"o\">:</span>                     <span class=\"n\">No</span>  <span class=\"n\">Integrated</span> <span class=\"n\">GPU</span> <span class=\"n\">sharing</span> <span class=\"n\">Host</span> <span class=\"n\">Memory</span><span class=\"o\">:</span>            <span class=\"n\">No</span>  <span class=\"n\">Support</span> <span class=\"n\">host</span> <span class=\"n\">page</span><span class=\"o\">-</span><span class=\"n\">locked</span> <span class=\"n\">memory</span> <span class=\"n\">mapping</span><span class=\"o\">:</span>       <span class=\"n\">Yes</span>  <span class=\"n\">Alignment</span> <span class=\"n\">requirement</span> <span class=\"k\">for</span> <span class=\"n\">Surfaces</span><span class=\"o\">:</span>            <span class=\"n\">Yes</span>  <span class=\"n\">Device</span> <span class=\"n\">has</span> <span class=\"n\">ECC</span> <span class=\"n\">support</span><span class=\"o\">:</span>                        <span class=\"n\">Disabled</span>  <span class=\"n\">Device</span> <span class=\"n\">supports</span> <span class=\"n\">Unified</span> <span class=\"n\">Addressing</span> <span class=\"p\">(</span><span class=\"n\">UVA</span><span class=\"p\">)</span><span class=\"o\">:</span>      <span class=\"n\">Yes</span>  <span class=\"n\">Device</span> <span class=\"n\">supports</span> <span class=\"n\">Managed</span> <span class=\"n\">Memory</span><span class=\"o\">:</span>                <span class=\"n\">Yes</span>  <span class=\"n\">Device</span> <span class=\"n\">supports</span> <span class=\"n\">Compute</span> <span class=\"n\">Preemption</span><span class=\"o\">:</span>            <span class=\"n\">Yes</span>  <span class=\"n\">Supports</span> <span class=\"n\">Cooperative</span> <span class=\"n\">Kernel</span> <span class=\"n\">Launch</span><span class=\"o\">:</span>            <span class=\"n\">Yes</span>  <span class=\"n\">Supports</span> <span class=\"n\">MultiDevice</span> <span class=\"n\">Co</span><span class=\"o\">-</span><span class=\"n\">op</span> <span class=\"n\">Kernel</span> <span class=\"n\">Launch</span><span class=\"o\">:</span>      <span class=\"n\">Yes</span>  <span class=\"n\">Device</span> <span class=\"n\">PCI</span> <span class=\"n\">Domain</span> <span class=\"n\">ID</span> <span class=\"o\">/</span> <span class=\"n\">Bus</span> <span class=\"n\">ID</span> <span class=\"o\">/</span> <span class=\"n\">location</span> <span class=\"n\">ID</span><span class=\"o\">:</span>   <span class=\"mi\">0</span> <span class=\"o\">/</span> <span class=\"mi\">2</span> <span class=\"o\">/</span> <span class=\"mi\">0</span>  <span class=\"n\">Compute</span> <span class=\"n\">Mode</span><span class=\"o\">:</span>     <span class=\"o\">&lt;</span> <span class=\"n\">Default</span> <span class=\"p\">(</span><span class=\"n\">multiple</span> <span class=\"n\">host</span> <span class=\"n\">threads</span> <span class=\"n\">can</span> <span class=\"n\">use</span> <span class=\"o\">::</span><span class=\"n\">cudaSetDevice</span><span class=\"p\">()</span> <span class=\"n\">with</span> <span class=\"n\">device</span> <span class=\"n\">simultaneously</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span><span class=\"n\">Device</span> <span class=\"mi\">1</span><span class=\"o\">:</span> <span class=\"s\">\"Tesla P100-PCIE-12GB\"</span>  <span class=\"n\">CUDA</span> <span class=\"n\">Driver</span> <span class=\"n\">Version</span> <span class=\"o\">/</span> <span class=\"n\">Runtime</span> <span class=\"n\">Version</span>          <span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span> <span class=\"o\">/</span> <span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span>  <span class=\"n\">CUDA</span> <span class=\"n\">Capability</span> <span class=\"n\">Major</span><span class=\"o\">/</span><span class=\"n\">Minor</span> <span class=\"n\">version</span> <span class=\"n\">number</span><span class=\"o\">:</span>    <span class=\"mi\">6</span><span class=\"p\">.</span><span class=\"mi\">0</span>  <span class=\"n\">Total</span> <span class=\"n\">amount</span> <span class=\"n\">of</span> <span class=\"n\">global</span> <span class=\"n\">memory</span><span class=\"o\">:</span>                 <span class=\"mi\">12198</span> <span class=\"n\">MBytes</span> <span class=\"p\">(</span><span class=\"mi\">12790923264</span> <span class=\"n\">bytes</span><span class=\"p\">)</span>  <span class=\"p\">(</span><span class=\"mo\">056</span><span class=\"p\">)</span> <span class=\"n\">Multiprocessors</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mo\">064</span><span class=\"p\">)</span> <span class=\"n\">CUDA</span> <span class=\"n\">Cores</span><span class=\"o\">/</span><span class=\"n\">MP</span><span class=\"o\">:</span>    <span class=\"mi\">3584</span> <span class=\"n\">CUDA</span> <span class=\"n\">Cores</span>  <span class=\"n\">GPU</span> <span class=\"n\">Max</span> <span class=\"n\">Clock</span> <span class=\"n\">rate</span><span class=\"o\">:</span>                            <span class=\"mi\">1329</span> <span class=\"n\">MHz</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"mi\">33</span> <span class=\"n\">GHz</span><span class=\"p\">)</span>  <span class=\"n\">Memory</span> <span class=\"n\">Clock</span> <span class=\"n\">rate</span><span class=\"o\">:</span>                             <span class=\"mi\">715</span> <span class=\"n\">Mhz</span>  <span class=\"n\">Memory</span> <span class=\"n\">Bus</span> <span class=\"n\">Width</span><span class=\"o\">:</span>                              <span class=\"mi\">3072</span><span class=\"o\">-</span><span class=\"n\">bit</span>  <span class=\"n\">L2</span> <span class=\"n\">Cache</span> <span class=\"n\">Size</span><span class=\"o\">:</span>                                 <span class=\"mi\">3145728</span> <span class=\"n\">bytes</span>  <span class=\"n\">Maximum</span> <span class=\"n\">Texture</span> <span class=\"n\">Dimension</span> <span class=\"n\">Size</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">)</span>         <span class=\"mi\">1</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">131072</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">131072</span><span class=\"p\">,</span> <span class=\"mi\">65536</span><span class=\"p\">),</span> <span class=\"mi\">3</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">16384</span><span class=\"p\">,</span> <span class=\"mi\">16384</span><span class=\"p\">,</span> <span class=\"mi\">16384</span><span class=\"p\">)</span>  <span class=\"n\">Maximum</span> <span class=\"n\">Layered</span> <span class=\"mi\">1</span><span class=\"n\">D</span> <span class=\"n\">Texture</span> <span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)</span> <span class=\"n\">layers</span>  <span class=\"mi\">1</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">32768</span><span class=\"p\">),</span> <span class=\"mi\">2048</span> <span class=\"n\">layers</span>  <span class=\"n\">Maximum</span> <span class=\"n\">Layered</span> <span class=\"mi\">2</span><span class=\"n\">D</span> <span class=\"n\">Texture</span> <span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)</span> <span class=\"n\">layers</span>  <span class=\"mi\">2</span><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">32768</span><span class=\"p\">,</span> <span class=\"mi\">32768</span><span class=\"p\">),</span> <span class=\"mi\">2048</span> <span class=\"n\">layers</span>  <span class=\"n\">Total</span> <span class=\"n\">amount</span> <span class=\"n\">of</span> <span class=\"n\">constant</span> <span class=\"n\">memory</span><span class=\"o\">:</span>               <span class=\"mi\">65536</span> <span class=\"n\">bytes</span>  <span class=\"n\">Total</span> <span class=\"n\">amount</span> <span class=\"n\">of</span> <span class=\"n\">shared</span> <span class=\"n\">memory</span> <span class=\"n\">per</span> <span class=\"n\">block</span><span class=\"o\">:</span>       <span class=\"mi\">49152</span> <span class=\"n\">bytes</span>  <span class=\"n\">Total</span> <span class=\"n\">shared</span> <span class=\"n\">memory</span> <span class=\"n\">per</span> <span class=\"n\">multiprocessor</span><span class=\"o\">:</span>        <span class=\"mi\">65536</span> <span class=\"n\">bytes</span>  <span class=\"n\">Total</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">registers</span> <span class=\"n\">available</span> <span class=\"n\">per</span> <span class=\"n\">block</span><span class=\"o\">:</span> <span class=\"mi\">65536</span>  <span class=\"n\">Warp</span> <span class=\"n\">size</span><span class=\"o\">:</span>                                     <span class=\"mi\">32</span>  <span class=\"n\">Maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">threads</span> <span class=\"n\">per</span> <span class=\"n\">multiprocessor</span><span class=\"o\">:</span>  <span class=\"mi\">2048</span>  <span class=\"n\">Maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">threads</span> <span class=\"n\">per</span> <span class=\"n\">block</span><span class=\"o\">:</span>           <span class=\"mi\">1024</span>  <span class=\"n\">Max</span> <span class=\"n\">dimension</span> <span class=\"n\">size</span> <span class=\"n\">of</span> <span class=\"n\">a</span> <span class=\"kr\">thread</span> <span class=\"n\">block</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">)</span>  <span class=\"n\">Max</span> <span class=\"n\">dimension</span> <span class=\"n\">size</span> <span class=\"n\">of</span> <span class=\"n\">a</span> <span class=\"n\">grid</span> <span class=\"n\">size</span>    <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"mi\">2147483647</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">)</span>  <span class=\"n\">Maximum</span> <span class=\"n\">memory</span> <span class=\"n\">pitch</span><span class=\"o\">:</span>                          <span class=\"mi\">2147483647</span> <span class=\"n\">bytes</span>  <span class=\"n\">Texture</span> <span class=\"n\">alignment</span><span class=\"o\">:</span>                             <span class=\"mi\">512</span> <span class=\"n\">bytes</span>  <span class=\"n\">Concurrent</span> <span class=\"n\">copy</span> <span class=\"n\">and</span> <span class=\"n\">kernel</span> <span class=\"n\">execution</span><span class=\"o\">:</span>          <span class=\"n\">Yes</span> <span class=\"n\">with</span> <span class=\"mi\">2</span> <span class=\"n\">copy</span> <span class=\"n\">engine</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>  <span class=\"n\">Run</span> <span class=\"n\">time</span> <span class=\"n\">limit</span> <span class=\"n\">on</span> <span class=\"n\">kernels</span><span class=\"o\">:</span>                     <span class=\"n\">No</span>  <span class=\"n\">Integrated</span> <span class=\"n\">GPU</span> <span class=\"n\">sharing</span> <span class=\"n\">Host</span> <span class=\"n\">Memory</span><span class=\"o\">:</span>            <span class=\"n\">No</span>  <span class=\"n\">Support</span> <span class=\"n\">host</span> <span class=\"n\">page</span><span class=\"o\">-</span><span class=\"n\">locked</span> <span class=\"n\">memory</span> <span class=\"n\">mapping</span><span class=\"o\">:</span>       <span class=\"n\">Yes</span>  <span class=\"n\">Alignment</span> <span class=\"n\">requirement</span> <span class=\"k\">for</span> <span class=\"n\">Surfaces</span><span class=\"o\">:</span>            <span class=\"n\">Yes</span>  <span class=\"n\">Device</span> <span class=\"n\">has</span> <span class=\"n\">ECC</span> <span class=\"n\">support</span><span class=\"o\">:</span>                        <span class=\"n\">Enabled</span>  <span class=\"n\">Device</span> <span class=\"n\">supports</span> <span class=\"n\">Unified</span> <span class=\"n\">Addressing</span> <span class=\"p\">(</span><span class=\"n\">UVA</span><span class=\"p\">)</span><span class=\"o\">:</span>      <span class=\"n\">Yes</span>  <span class=\"n\">Device</span> <span class=\"n\">supports</span> <span class=\"n\">Managed</span> <span class=\"n\">Memory</span><span class=\"o\">:</span>                <span class=\"n\">Yes</span>  <span class=\"n\">Device</span> <span class=\"n\">supports</span> <span class=\"n\">Compute</span> <span class=\"n\">Preemption</span><span class=\"o\">:</span>            <span class=\"n\">Yes</span>  <span class=\"n\">Supports</span> <span class=\"n\">Cooperative</span> <span class=\"n\">Kernel</span> <span class=\"n\">Launch</span><span class=\"o\">:</span>            <span class=\"n\">Yes</span>  <span class=\"n\">Supports</span> <span class=\"n\">MultiDevice</span> <span class=\"n\">Co</span><span class=\"o\">-</span><span class=\"n\">op</span> <span class=\"n\">Kernel</span> <span class=\"n\">Launch</span><span class=\"o\">:</span>      <span class=\"n\">Yes</span>  <span class=\"n\">Device</span> <span class=\"n\">PCI</span> <span class=\"n\">Domain</span> <span class=\"n\">ID</span> <span class=\"o\">/</span> <span class=\"n\">Bus</span> <span class=\"n\">ID</span> <span class=\"o\">/</span> <span class=\"n\">location</span> <span class=\"n\">ID</span><span class=\"o\">:</span>   <span class=\"mi\">0</span> <span class=\"o\">/</span> <span class=\"mi\">130</span> <span class=\"o\">/</span> <span class=\"mi\">0</span>  <span class=\"n\">Compute</span> <span class=\"n\">Mode</span><span class=\"o\">:</span>     <span class=\"o\">&lt;</span> <span class=\"n\">Default</span> <span class=\"p\">(</span><span class=\"n\">multiple</span> <span class=\"n\">host</span> <span class=\"n\">threads</span> <span class=\"n\">can</span> <span class=\"n\">use</span> <span class=\"o\">::</span><span class=\"n\">cudaSetDevice</span><span class=\"p\">()</span> <span class=\"n\">with</span> <span class=\"n\">device</span> <span class=\"n\">simultaneously</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span><span class=\"o\">&gt;</span> <span class=\"n\">Peer</span> <span class=\"n\">access</span> <span class=\"n\">from</span> <span class=\"n\">NVIDIA</span> <span class=\"n\">GeForce</span> <span class=\"n\">RTX</span> <span class=\"mi\">2080</span> <span class=\"n\">Ti</span> <span class=\"p\">(</span><span class=\"n\">GPU0</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tesla</span> <span class=\"n\">P100</span><span class=\"o\">-</span><span class=\"n\">PCIE</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"n\">GB</span> <span class=\"p\">(</span><span class=\"n\">GPU1</span><span class=\"p\">)</span> <span class=\"o\">:</span> <span class=\"n\">No</span><span class=\"o\">&gt;</span> <span class=\"n\">Peer</span> <span class=\"n\">access</span> <span class=\"n\">from</span> <span class=\"n\">Tesla</span> <span class=\"n\">P100</span><span class=\"o\">-</span><span class=\"n\">PCIE</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"n\">GB</span> <span class=\"p\">(</span><span class=\"n\">GPU1</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">NVIDIA</span> <span class=\"n\">GeForce</span> <span class=\"n\">RTX</span> <span class=\"mi\">2080</span> <span class=\"n\">Ti</span> <span class=\"p\">(</span><span class=\"n\">GPU0</span><span class=\"p\">)</span> <span class=\"o\">:</span> <span class=\"n\">No</span><span class=\"n\">deviceQuery</span><span class=\"p\">,</span> <span class=\"n\">CUDA</span> <span class=\"n\">Driver</span> <span class=\"o\">=</span> <span class=\"n\">CUDART</span><span class=\"p\">,</span> <span class=\"n\">CUDA</span> <span class=\"n\">Driver</span> <span class=\"n\">Version</span> <span class=\"o\">=</span> <span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">CUDA</span> <span class=\"n\">Runtime</span> <span class=\"n\">Version</span> <span class=\"o\">=</span> <span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">NumDevs</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"n\">Result</span> <span class=\"o\">=</span> <span class=\"n\">PASS</span></code></pre></div></div><h3 id=\"running-nvidia-smi\">running nvidia-smi</h3><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">[</span><span class=\"n\">root</span><span class=\"err\">@</span><span class=\"n\">rn</span><span class=\"o\">-</span><span class=\"n\">gpu</span><span class=\"o\">-</span><span class=\"n\">p100</span> <span class=\"n\">deviceQuery</span><span class=\"p\">]</span><span class=\"err\">#</span> <span class=\"n\">nvidia</span><span class=\"o\">-</span><span class=\"n\">smi</span> <span class=\"n\">Mon</span> <span class=\"n\">Nov</span> <span class=\"mi\">14</span> <span class=\"mi\">11</span><span class=\"o\">:</span><span class=\"mi\">14</span><span class=\"o\">:</span><span class=\"mi\">38</span> <span class=\"mi\">2022</span>       <span class=\"o\">+-----------------------------------------------------------------------------+</span><span class=\"o\">|</span> <span class=\"n\">NVIDIA</span><span class=\"o\">-</span><span class=\"n\">SMI</span> <span class=\"mi\">495</span><span class=\"p\">.</span><span class=\"mi\">29</span><span class=\"p\">.</span><span class=\"mo\">05</span>    <span class=\"n\">Driver</span> <span class=\"n\">Version</span><span class=\"o\">:</span> <span class=\"mi\">495</span><span class=\"p\">.</span><span class=\"mi\">29</span><span class=\"p\">.</span><span class=\"mo\">05</span>    <span class=\"n\">CUDA</span> <span class=\"n\">Version</span><span class=\"o\">:</span> <span class=\"mi\">11</span><span class=\"p\">.</span><span class=\"mi\">5</span>     <span class=\"o\">|</span><span class=\"o\">|-------------------------------+----------------------+----------------------+</span><span class=\"o\">|</span> <span class=\"n\">GPU</span>  <span class=\"n\">Name</span>        <span class=\"n\">Persistence</span><span class=\"o\">-</span><span class=\"n\">M</span><span class=\"o\">|</span> <span class=\"n\">Bus</span><span class=\"o\">-</span><span class=\"n\">Id</span>        <span class=\"n\">Disp</span><span class=\"p\">.</span><span class=\"n\">A</span> <span class=\"o\">|</span> <span class=\"n\">Volatile</span> <span class=\"n\">Uncorr</span><span class=\"p\">.</span> <span class=\"n\">ECC</span> <span class=\"o\">|</span><span class=\"o\">|</span> <span class=\"n\">Fan</span>  <span class=\"n\">Temp</span>  <span class=\"n\">Perf</span>  <span class=\"n\">Pwr</span><span class=\"o\">:</span><span class=\"n\">Usage</span><span class=\"o\">/</span><span class=\"n\">Cap</span><span class=\"o\">|</span>         <span class=\"n\">Memory</span><span class=\"o\">-</span><span class=\"n\">Usage</span> <span class=\"o\">|</span> <span class=\"n\">GPU</span><span class=\"o\">-</span><span class=\"n\">Util</span>  <span class=\"n\">Compute</span> <span class=\"n\">M</span><span class=\"p\">.</span> <span class=\"o\">|</span><span class=\"o\">|</span>                               <span class=\"o\">|</span>                      <span class=\"o\">|</span>               <span class=\"n\">MIG</span> <span class=\"n\">M</span><span class=\"p\">.</span> <span class=\"o\">|</span><span class=\"o\">|===============================+======================+======================|</span><span class=\"o\">|</span>   <span class=\"mi\">0</span>  <span class=\"n\">NVIDIA</span> <span class=\"n\">GeForce</span> <span class=\"p\">...</span>  <span class=\"n\">Off</span>  <span class=\"o\">|</span> <span class=\"mo\">00000000</span><span class=\"o\">:</span><span class=\"mo\">02</span><span class=\"o\">:</span><span class=\"mo\">00</span><span class=\"p\">.</span><span class=\"mi\">0</span> <span class=\"n\">Off</span> <span class=\"o\">|</span>                  <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span> <span class=\"o\">|</span><span class=\"o\">|</span> <span class=\"mi\">27</span><span class=\"o\">%</span>   <span class=\"mi\">48</span><span class=\"n\">C</span>    <span class=\"n\">P0</span>    <span class=\"mi\">54</span><span class=\"n\">W</span> <span class=\"o\">/</span> <span class=\"mi\">250</span><span class=\"n\">W</span> <span class=\"o\">|</span>      <span class=\"mi\">0</span><span class=\"n\">MiB</span> <span class=\"o\">/</span> <span class=\"mi\">11019</span><span class=\"n\">MiB</span> <span class=\"o\">|</span>      <span class=\"mi\">0</span><span class=\"o\">%</span>      <span class=\"n\">Default</span> <span class=\"o\">|</span><span class=\"o\">|</span>                               <span class=\"o\">|</span>                      <span class=\"o\">|</span>                  <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span> <span class=\"o\">|</span><span class=\"o\">+-------------------------------+----------------------+----------------------+</span><span class=\"o\">|</span>   <span class=\"mi\">1</span>  <span class=\"n\">Tesla</span> <span class=\"n\">P100</span><span class=\"o\">-</span><span class=\"n\">PCIE</span><span class=\"p\">...</span>  <span class=\"n\">Off</span>  <span class=\"o\">|</span> <span class=\"mo\">00000000</span><span class=\"o\">:</span><span class=\"mi\">82</span><span class=\"o\">:</span><span class=\"mo\">00</span><span class=\"p\">.</span><span class=\"mi\">0</span> <span class=\"n\">Off</span> <span class=\"o\">|</span>                    <span class=\"mi\">0</span> <span class=\"o\">|</span><span class=\"o\">|</span> <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span>   <span class=\"mi\">32</span><span class=\"n\">C</span>    <span class=\"n\">P0</span>    <span class=\"mi\">25</span><span class=\"n\">W</span> <span class=\"o\">/</span> <span class=\"mi\">250</span><span class=\"n\">W</span> <span class=\"o\">|</span>      <span class=\"mi\">0</span><span class=\"n\">MiB</span> <span class=\"o\">/</span> <span class=\"mi\">12198</span><span class=\"n\">MiB</span> <span class=\"o\">|</span>      <span class=\"mi\">2</span><span class=\"o\">%</span>      <span class=\"n\">Default</span> <span class=\"o\">|</span><span class=\"o\">|</span>                               <span class=\"o\">|</span>                      <span class=\"o\">|</span>                  <span class=\"n\">N</span><span class=\"o\">/</span><span class=\"n\">A</span> <span class=\"o\">|</span><span class=\"o\">+-------------------------------+----------------------+----------------------+</span>                                                                               <span class=\"o\">+-----------------------------------------------------------------------------+</span><span class=\"o\">|</span> <span class=\"n\">Processes</span><span class=\"o\">:</span>                                                                  <span class=\"o\">|</span><span class=\"o\">|</span>  <span class=\"n\">GPU</span>   <span class=\"n\">GI</span>   <span class=\"n\">CI</span>        <span class=\"n\">PID</span>   <span class=\"n\">Type</span>   <span class=\"n\">Process</span> <span class=\"n\">name</span>                  <span class=\"n\">GPU</span> <span class=\"n\">Memory</span> <span class=\"o\">|</span><span class=\"o\">|</span>        <span class=\"n\">ID</span>   <span class=\"n\">ID</span>                                                   <span class=\"n\">Usage</span>      <span class=\"o\">|</span><span class=\"o\">|=============================================================================|</span><span class=\"o\">|</span>  <span class=\"n\">No</span> <span class=\"n\">running</span> <span class=\"n\">processes</span> <span class=\"n\">found</span>                                                 <span class=\"o\">|</span><span class=\"o\">+-----------------------------------------------------------------------------+</span></code></pre></div></div><h3 id=\"nvidia-driver-gcc-maping\">Nvidia driver-GCC-Maping</h3><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">cat</span> <span class=\"o\">/</span><span class=\"n\">proc</span><span class=\"o\">/</span><span class=\"n\">driver</span><span class=\"o\">/</span><span class=\"n\">nvidia</span><span class=\"o\">/</span><span class=\"n\">version</span><span class=\"n\">NVRM</span> <span class=\"n\">version</span><span class=\"o\">:</span> <span class=\"n\">NVIDIA</span> <span class=\"n\">UNIX</span> <span class=\"n\">x86_64</span> <span class=\"n\">Kernel</span> <span class=\"n\">Module</span>  <span class=\"mi\">495</span><span class=\"p\">.</span><span class=\"mi\">29</span><span class=\"p\">.</span><span class=\"mo\">05</span>  <span class=\"n\">Thu</span> <span class=\"n\">Sep</span> <span class=\"mi\">30</span> <span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mo\">00</span><span class=\"o\">:</span><span class=\"mi\">29</span> <span class=\"n\">UTC</span> <span class=\"mi\">2021</span><span class=\"n\">GCC</span> <span class=\"n\">version</span><span class=\"o\">:</span>  <span class=\"n\">gcc</span> <span class=\"n\">version</span> <span class=\"mi\">9</span><span class=\"p\">.</span><span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"mi\">1</span> <span class=\"mi\">20200408</span> <span class=\"p\">(</span><span class=\"n\">Red</span> <span class=\"n\">Hat</span> <span class=\"mi\">9</span><span class=\"p\">.</span><span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">GCC</span><span class=\"p\">)</span></code></pre></div></div>",
            "url": "https://mrprajesh.co.in/blog/to-install-cuda-on-centos7.html",
            
            
            
            "tags": ["cuda","nvidia","driver","centos"],
            
            "date_published": "2022-11-14T10:50:23+05:30",
            "date_modified": "2022-11-14T10:50:23+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/verified-badge-for-your-commits.html",
            "title": "How to get verified badge for your commits",
            "summary": null,
            "content_text": "How to get verified badge for your commits#sign all commits by defaultgit config --global commit.gpgsign true# find your gpp keygpg --list-secret-keys --keyid-format=long/home/rajesh/.gnupg/pubring.kbx-------------------------------sec   rsa2048/DD95F119EA64BABE 2011-02-11 [SCA]      79B36A390B6A4BBFA103483BDD95F119EA64BABEuid                 [ultimate] Rajesh Pandian M (This is my True Gmail ID - Rajz) &lt;someone@gmail.com&gt;#use your key heregit config --global user.signingkey DD95F119EA64BABE# make available [ -f ~/.bashrc ] &amp;&amp; echo 'export GPG_TTY=$(tty)' &gt;&gt; ~/.bashrc You will see verified badge as here.",
            "content_html": "<h3 id=\"how-to-get-verified-badge-for-your-commits\">How to get verified badge for your commits</h3><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">#sign all commits by default</span><span class=\"n\">git</span> <span class=\"n\">config</span> <span class=\"o\">--</span><span class=\"n\">global</span> <span class=\"n\">commit</span><span class=\"p\">.</span><span class=\"n\">gpgsign</span> <span class=\"nb\">true</span><span class=\"cp\"># find your gpp key</span><span class=\"n\">gpg</span> <span class=\"o\">--</span><span class=\"n\">list</span><span class=\"o\">-</span><span class=\"n\">secret</span><span class=\"o\">-</span><span class=\"n\">keys</span> <span class=\"o\">--</span><span class=\"n\">keyid</span><span class=\"o\">-</span><span class=\"n\">format</span><span class=\"o\">=</span><span class=\"kt\">long</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajesh</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">gnupg</span><span class=\"o\">/</span><span class=\"n\">pubring</span><span class=\"p\">.</span><span class=\"n\">kbx</span><span class=\"o\">-------------------------------</span><span class=\"n\">sec</span>   <span class=\"n\">rsa2048</span><span class=\"o\">/</span><span class=\"n\">DD95F119EA64BABE</span> <span class=\"mi\">2011</span><span class=\"o\">-</span><span class=\"mo\">02</span><span class=\"o\">-</span><span class=\"mi\">11</span> <span class=\"p\">[</span><span class=\"n\">SCA</span><span class=\"p\">]</span>      <span class=\"mi\">79</span><span class=\"n\">B36A390B6A4BBFA103483BDD95F119EA64BABE</span><span class=\"n\">uid</span>                 <span class=\"p\">[</span><span class=\"n\">ultimate</span><span class=\"p\">]</span> <span class=\"n\">Rajesh</span> <span class=\"n\">Pandian</span> <span class=\"n\">M</span> <span class=\"p\">(</span><span class=\"n\">This</span> <span class=\"n\">is</span> <span class=\"n\">my</span> <span class=\"n\">True</span> <span class=\"n\">Gmail</span> <span class=\"n\">ID</span> <span class=\"o\">-</span> <span class=\"n\">Rajz</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">someone</span><span class=\"err\">@</span><span class=\"n\">gmail</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">&gt;</span><span class=\"cp\">#use your key here</span><span class=\"n\">git</span> <span class=\"n\">config</span> <span class=\"o\">--</span><span class=\"n\">global</span> <span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">signingkey</span> <span class=\"n\">DD95F119EA64BABE</span><span class=\"cp\"># make available</span> <span class=\"p\">[</span> <span class=\"o\">-</span><span class=\"n\">f</span> <span class=\"o\">~/</span><span class=\"p\">.</span><span class=\"n\">bashrc</span> <span class=\"p\">]</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">echo</span> <span class=\"err\">'</span><span class=\"n\">export</span> <span class=\"n\">GPG_TTY</span><span class=\"o\">=</span><span class=\"err\">$</span><span class=\"p\">(</span><span class=\"n\">tty</span><span class=\"p\">)</span><span class=\"err\">'</span> <span class=\"o\">&gt;&gt;</span> <span class=\"o\">~/</span><span class=\"p\">.</span><span class=\"n\">bashrc</span> </code></pre></div></div><p>You will see <code class=\"language-plaintext highlighter-rouge\">verified</code> badge as <a href=\"https://github.com/mrprajesh/blog/commits/master\">here</a>.</p>",
            "url": "https://mrprajesh.co.in/blog/verified-badge-for-your-commits.html",
            
            
            
            "tags": ["git","verified"],
            
            "date_published": "2022-09-09T19:24:20+05:30",
            "date_modified": "2022-09-09T19:24:20+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/hello-world-apl.html",
            "title": "Hello world APL language",
            "summary": null,
            "content_text": "Hope you remember I had mentioned about APL before.  Download Dyalog from here with email (SERIALNUMBER will be sent to your email).      As mentioned in here       # install dependencies   sudo apt install libncurses5   # Add you serial number to this file.   vim $HOME/.dyalog/serial        Download and install RIDE package      Run from installed programs. Look for Dyalog APL (not Dyalog APL TTY)  or run the below.          env RIDE_SPAWN=/usr/bin/dyalog /usr/bin/ride-4.4      Hello World  type tick i.e. ~ without shift. It means iota. Infact, C++ got that name from APL.`i 10# displays 1 to 10 both inclusive.⍳ 101 2 3 4 5 6 7 8 9 10# this is reduce operation      +/⍳1055# this is a scan operation.      +\\⍳ 101 3 6 10 15 21 28 36 45 55Online on a browser  https://tryapl.org/Gettting started.  https://www.dyalog.com/getting-started.htm  Mastering APLMy Vision  If you can think in APL for your program, you can write better parallel codes in OMP or CUDA.",
            "content_html": "<p>Hope you remember I had mentioned about APL <a href=\"/blog/cpp-stl-enlightment.html\">before</a>.</p><ol>  <li>Download <a href=\"https://www.dyalog.com/download-zone.htm\">Dyalog</a> from here with email (SERIALNUMBER will be sent to your email).</li>  <li>    <p>As mentioned in <a href=\"https://help.dyalog.com/latest/Content/UNIX_IUG/Dyalog%20Serial%20Number.htm\">here</a></p>    <div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>   <span class=\"cp\"># install dependencies</span>   <span class=\"n\">sudo</span> <span class=\"n\">apt</span> <span class=\"n\">install</span> <span class=\"n\">libncurses5</span>   <span class=\"cp\"># Add you serial number to this file.</span>   <span class=\"n\">vim</span> <span class=\"err\">$</span><span class=\"n\">HOME</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">dyalog</span><span class=\"o\">/</span><span class=\"n\">serial</span></code></pre></div>    </div>  </li>  <li>Download and install RIDE <a href=\"https://github.com/Dyalog/ride/releases\">package</a></li>  <li>    <p>Run from installed programs. Look for Dyalog APL (not Dyalog APL TTY)  or run the below.</p>    <div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>      <span class=\"n\">env</span> <span class=\"n\">RIDE_SPAWN</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">dyalog</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">ride</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">.</span><span class=\"mi\">4</span></code></pre></div>    </div>  </li></ol><h2 id=\"hello-world\">Hello World</h2><ul>  <li>type tick i.e. ~ without shift. It means <a href=\"https://en.cppreference.com/w/cpp/algorithm/iota\">iota</a>. Infact, C++ got that name from APL.</li></ul><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">`</span><span class=\"n\">i</span> <span class=\"mi\">10</span><span class=\"cp\"># displays 1 to 10 both inclusive.</span><span class=\"err\">⍳</span> <span class=\"mi\">10</span><span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span> <span class=\"mi\">5</span> <span class=\"mi\">6</span> <span class=\"mi\">7</span> <span class=\"mi\">8</span> <span class=\"mi\">9</span> <span class=\"mi\">10</span><span class=\"cp\"># this is reduce operation</span>      <span class=\"o\">+/</span><span class=\"err\">⍳</span><span class=\"mi\">10</span><span class=\"mi\">55</span><span class=\"cp\"># this is a scan operation.</span>      <span class=\"o\">+</span><span class=\"err\">\\⍳</span> <span class=\"mi\">10</span><span class=\"mi\">1</span> <span class=\"mi\">3</span> <span class=\"mi\">6</span> <span class=\"mi\">10</span> <span class=\"mi\">15</span> <span class=\"mi\">21</span> <span class=\"mi\">28</span> <span class=\"mi\">36</span> <span class=\"mi\">45</span> <span class=\"mi\">55</span></code></pre></div></div><h2 id=\"online-on-a-browser\">Online on a browser</h2><ul>  <li><a href=\"https://tryapl.org/\">https://tryapl.org/</a></li></ul><h2 id=\"gettting-started\">Gettting started.</h2><ul>  <li><a href=\"https://www.dyalog.com/getting-started.htm\">https://www.dyalog.com/getting-started.htm</a></li>  <li><a href=\"https://www.dyalog.com/uploads/documents/MasteringDyalogAPL.pdf\">Mastering APL</a></li></ul><h2 id=\"my-vision\">My Vision</h2><blockquote>  <p>If you can think in APL for your program, you can write better parallel codes in OMP or CUDA.</p></blockquote>",
            "url": "https://mrprajesh.co.in/blog/hello-world-apl.html",
            
            
            
            "tags": ["APL","coding"],
            
            "date_published": "2022-09-09T16:56:02+05:30",
            "date_modified": "2022-09-09T16:56:02+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/cloud-storage.html",
            "title": "cloud storage",
            "summary": null,
            "content_text": "As my dropbox is getting full soon. I have to resort to some other freecloud storage provider for saving and syncing my local files on linux.I have downloaded  MegaSync  pCloud  InternxtAll seems working fine for now.",
            "content_html": "<p>As my dropbox is getting full soon. I have to resort to some other freecloud storage provider for saving and syncing my local files on linux.</p><p>I have downloaded</p><ol>  <li>MegaSync</li>  <li>pCloud</li>  <li>Internxt</li></ol><p>All seems working fine for now.</p>",
            "url": "https://mrprajesh.co.in/blog/cloud-storage.html",
            
            
            
            "tags": ["cloud","linux","storage"],
            
            "date_published": "2022-08-27T15:58:36+05:30",
            "date_modified": "2022-08-27T15:58:36+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/alert-for-battery-low-and-high.html",
            "title": "Audible alert for battery low and high",
            "summary": null,
            "content_text": "As both prolonged usage with AC power on the laptop and critically low battery degreades battery life;I decided to write a script that give an audio alert to disconnec/connect the charger.I have scheduled this script on cron. Now, both my life and battery life is better.alert-on-full-battery.sh#!/bin/bash## ALL STATS OF BATTERY#~ find /sys/class/power_supply/BAT0/ -type f | xargs -tn1 cat## BATTERY LOW LEVE ALERTLOW_LEVEL=15## DEFAULT ALERT ON 95## USER CAN SPECIFY 1st ARG AS custom  threshold levelTHRESHOLD=95if [ $# -ge 1 ]then    if [ $1 -ge 0 -a  $1 -lt 100 ] ## -a means and condition  then    THRESHOLD=$1  fifi# post 4.2 keernel (see using uaname -a)  recommended usage to get batter percent /sys/class/power_supply/BAT0# ll /sys/class/power_supply/BAT*# cat /sys/class/power_supply/BAT0/capacity #in my machine  somtime it might in BAT1 !? :|## GET CURRENT BATTERY STATECURRENT_LEVEL=$(cat /sys/class/power_supply/BAT0/capacity)printf \"$(date +\"%d-%b-%Y %T (%Z)\"), $(cat /sys/class/power_supply/BAT0/status), current battery level: $CURRENT_LEVEL, threshold: $THRESHOLD\"## if current battery level is more than threahholdif [ $CURRENT_LEVEL -ge $THRESHOLD ]then  #~ LOUD  #~ paplay /usr/share/sounds/LinuxMint/stereo/phone-incoming-call.ogg  #~ MILD  paplay /usr/share/sounds/freedesktop/stereo/complete.oga  echo \"save power\" | espeak  printf \", HIGH ALERT\"fiif [ $CURRENT_LEVEL -lt $LOW_LEVEL ]then  paplay /usr/share/sounds/freedesktop/stereo/complete.oga  echo \"connect charger\" | espeak  printf \", LOW ALERT\"fiprintf \"\\n\"## CRON: crontab -e#~ XDG_RUNTIME_DIR=/run/user/1000#~ */5 * * * * /home/rajz/auto-scripts/alert-on-full-battery.sh 95 &gt;&gt; /tmp/alert-on-full-battery.logschedule on croncrontab -e## append the below line towards the end and save. It is set to run every 5 mins.XDG_RUNTIME_DIR=/run/user/1000*/5 * * * * /home/rajz/auto-scripts/alert-on-full-battery.sh 95 &gt;&gt; /tmp/alert-on-full-battery.logThe above self explanatory.  It alerts when there is low batter.  It alerts when the battery is almost full. You can give a custom threshold. Default is 95.  It also has speaks!  This must help the bettery life.",
            "content_html": "<p>As both prolonged usage with AC power on the laptop and critically low battery degreades battery life;I decided to write a script that give an audio alert to disconnec/connect the charger.I have scheduled this script on <code class=\"language-plaintext highlighter-rouge\">cron</code>. Now, both my life and battery life is better.</p><p><strong>alert-on-full-battery.sh</strong></p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">#!/bin/bash## ALL STATS OF BATTERY#~ find /sys/class/power_supply/BAT0/ -type f | xargs -tn1 cat</span><span class=\"cp\">## BATTERY LOW LEVE ALERT</span><span class=\"n\">LOW_LEVEL</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"cp\">## DEFAULT ALERT ON 95## USER CAN SPECIFY 1st ARG AS custom  threshold level</span><span class=\"n\">THRESHOLD</span><span class=\"o\">=</span><span class=\"mi\">95</span><span class=\"k\">if</span> <span class=\"p\">[</span> <span class=\"err\">$#</span> <span class=\"o\">-</span><span class=\"n\">ge</span> <span class=\"mi\">1</span> <span class=\"p\">]</span><span class=\"n\">then</span>    <span class=\"k\">if</span> <span class=\"p\">[</span> <span class=\"err\">$</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"n\">ge</span> <span class=\"mi\">0</span> <span class=\"o\">-</span><span class=\"n\">a</span>  <span class=\"err\">$</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"n\">lt</span> <span class=\"mi\">100</span> <span class=\"p\">]</span> <span class=\"err\">##</span> <span class=\"o\">-</span><span class=\"n\">a</span> <span class=\"n\">means</span> <span class=\"n\">and</span> <span class=\"n\">condition</span>  <span class=\"n\">then</span>    <span class=\"n\">THRESHOLD</span><span class=\"o\">=</span><span class=\"err\">$</span><span class=\"mi\">1</span>  <span class=\"n\">fi</span><span class=\"n\">fi</span><span class=\"cp\"># post 4.2 keernel (see using uaname -a)  recommended usage to get batter percent /sys/class/power_supply/BAT0# ll /sys/class/power_supply/BAT*# cat /sys/class/power_supply/BAT0/capacity #in my machine  somtime it might in BAT1 !? :|</span><span class=\"cp\">## GET CURRENT BATTERY STATE</span><span class=\"n\">CURRENT_LEVEL</span><span class=\"o\">=</span><span class=\"err\">$</span><span class=\"p\">(</span><span class=\"n\">cat</span> <span class=\"o\">/</span><span class=\"n\">sys</span><span class=\"o\">/</span><span class=\"n\">class</span><span class=\"o\">/</span><span class=\"n\">power_supply</span><span class=\"o\">/</span><span class=\"n\">BAT0</span><span class=\"o\">/</span><span class=\"n\">capacity</span><span class=\"p\">)</span><span class=\"n\">printf</span> <span class=\"s\">\"$(date +\"</span><span class=\"o\">%</span><span class=\"n\">d</span><span class=\"o\">-%</span><span class=\"n\">b</span><span class=\"o\">-%</span><span class=\"n\">Y</span> <span class=\"o\">%</span><span class=\"n\">T</span> <span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">Z</span><span class=\"p\">)</span><span class=\"s\">\"), $(cat /sys/class/power_supply/BAT0/status), current battery level: $CURRENT_LEVEL, threshold: $THRESHOLD\"</span><span class=\"cp\">## if current battery level is more than threahhold</span><span class=\"k\">if</span> <span class=\"p\">[</span> <span class=\"err\">$</span><span class=\"n\">CURRENT_LEVEL</span> <span class=\"o\">-</span><span class=\"n\">ge</span> <span class=\"err\">$</span><span class=\"n\">THRESHOLD</span> <span class=\"p\">]</span><span class=\"n\">then</span>  <span class=\"cp\">#~ LOUD</span>  <span class=\"cp\">#~ paplay /usr/share/sounds/LinuxMint/stereo/phone-incoming-call.ogg</span>  <span class=\"cp\">#~ MILD</span>  <span class=\"n\">paplay</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">share</span><span class=\"o\">/</span><span class=\"n\">sounds</span><span class=\"o\">/</span><span class=\"n\">freedesktop</span><span class=\"o\">/</span><span class=\"n\">stereo</span><span class=\"o\">/</span><span class=\"n\">complete</span><span class=\"p\">.</span><span class=\"n\">oga</span>  <span class=\"n\">echo</span> <span class=\"s\">\"save power\"</span> <span class=\"o\">|</span> <span class=\"n\">espeak</span>  <span class=\"n\">printf</span> <span class=\"s\">\", HIGH ALERT\"</span><span class=\"n\">fi</span><span class=\"k\">if</span> <span class=\"p\">[</span> <span class=\"err\">$</span><span class=\"n\">CURRENT_LEVEL</span> <span class=\"o\">-</span><span class=\"n\">lt</span> <span class=\"err\">$</span><span class=\"n\">LOW_LEVEL</span> <span class=\"p\">]</span><span class=\"n\">then</span>  <span class=\"n\">paplay</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">share</span><span class=\"o\">/</span><span class=\"n\">sounds</span><span class=\"o\">/</span><span class=\"n\">freedesktop</span><span class=\"o\">/</span><span class=\"n\">stereo</span><span class=\"o\">/</span><span class=\"n\">complete</span><span class=\"p\">.</span><span class=\"n\">oga</span>  <span class=\"n\">echo</span> <span class=\"s\">\"connect charger\"</span> <span class=\"o\">|</span> <span class=\"n\">espeak</span>  <span class=\"n\">printf</span> <span class=\"s\">\", LOW ALERT\"</span><span class=\"n\">fi</span><span class=\"n\">printf</span> <span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"cp\">## CRON: crontab -e#~ XDG_RUNTIME_DIR=/run/user/1000#~ */5 * * * * /home/rajz/auto-scripts/alert-on-full-battery.sh 95 &gt;&gt; /tmp/alert-on-full-battery.log</span></code></pre></div></div><h3 id=\"schedule-on-cron\">schedule on cron</h3><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">crontab</span> <span class=\"o\">-</span><span class=\"n\">e</span><span class=\"cp\">## append the below line towards the end and save. It is set to run every 5 mins.</span><span class=\"n\">XDG_RUNTIME_DIR</span><span class=\"o\">=/</span><span class=\"n\">run</span><span class=\"o\">/</span><span class=\"n\">user</span><span class=\"o\">/</span><span class=\"mi\">1000</span><span class=\"err\">*/</span><span class=\"mi\">5</span> <span class=\"o\">*</span> <span class=\"o\">*</span> <span class=\"o\">*</span> <span class=\"o\">*</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">rajz</span><span class=\"o\">/</span><span class=\"k\">auto</span><span class=\"o\">-</span><span class=\"n\">scripts</span><span class=\"o\">/</span><span class=\"n\">alert</span><span class=\"o\">-</span><span class=\"n\">on</span><span class=\"o\">-</span><span class=\"n\">full</span><span class=\"o\">-</span><span class=\"n\">battery</span><span class=\"p\">.</span><span class=\"n\">sh</span> <span class=\"mi\">95</span> <span class=\"o\">&gt;&gt;</span> <span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">alert</span><span class=\"o\">-</span><span class=\"n\">on</span><span class=\"o\">-</span><span class=\"n\">full</span><span class=\"o\">-</span><span class=\"n\">battery</span><span class=\"p\">.</span><span class=\"n\">log</span></code></pre></div></div><p>The above self explanatory.</p><ul>  <li>It alerts when there is low batter.</li>  <li>It alerts when the battery is almost full. You can give a custom threshold. Default is 95.</li>  <li>It also has speaks!</li>  <li>This must help the bettery life.</li></ul>",
            "url": "https://mrprajesh.co.in/blog/alert-for-battery-low-and-high.html",
            
            
            
            "tags": ["linux","shell"],
            
            "date_published": "2022-05-09T19:02:06+05:30",
            "date_modified": "2022-05-09T19:02:06+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/cmake-build.html",
            "title": "cmake build is easy now.",
            "summary": null,
            "content_text": "Generally in many repo using cmake. We do the followinggit clone &lt;repo&gt;cd &lt;repo&gt;mkdir buildcd buildcmake .. # may be with more args. For now, KISS!makeNow in the recent cmake version. We can do the last 4 steps in 2 lines.# starting with CMake 3.13, use a simpler form:cmake -S . -B \"build\" # -DCMAKE_BUILD_TYPE=Release# Build the library.cmake --build \"build\" # --config Release",
            "content_html": "<p>Generally in many repo using <code class=\"language-plaintext highlighter-rouge\">cmake</code>. We do the following</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"o\">&lt;</span><span class=\"n\">repo</span><span class=\"o\">&gt;</span><span class=\"n\">cd</span> <span class=\"o\">&lt;</span><span class=\"n\">repo</span><span class=\"o\">&gt;</span><span class=\"n\">mkdir</span> <span class=\"n\">build</span><span class=\"n\">cd</span> <span class=\"n\">build</span><span class=\"n\">cmake</span> <span class=\"p\">..</span> <span class=\"err\">#</span> <span class=\"n\">may</span> <span class=\"n\">be</span> <span class=\"n\">with</span> <span class=\"n\">more</span> <span class=\"n\">args</span><span class=\"p\">.</span> <span class=\"n\">For</span> <span class=\"n\">now</span><span class=\"p\">,</span> <span class=\"n\">KISS</span><span class=\"o\">!</span><span class=\"n\">make</span></code></pre></div></div><p>Now in the recent <code class=\"language-plaintext highlighter-rouge\">cmake</code> version. We can do the last 4 steps in 2 lines.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\"># starting with CMake 3.13, use a simpler form:</span><span class=\"n\">cmake</span> <span class=\"o\">-</span><span class=\"n\">S</span> <span class=\"p\">.</span> <span class=\"o\">-</span><span class=\"n\">B</span> <span class=\"s\">\"build\"</span> <span class=\"err\">#</span> <span class=\"o\">-</span><span class=\"n\">DCMAKE_BUILD_TYPE</span><span class=\"o\">=</span><span class=\"n\">Release</span><span class=\"cp\"># Build the library.</span><span class=\"n\">cmake</span> <span class=\"o\">--</span><span class=\"n\">build</span> <span class=\"s\">\"build\"</span> <span class=\"err\">#</span> <span class=\"o\">--</span><span class=\"n\">config</span> <span class=\"n\">Release</span></code></pre></div></div>",
            "url": "https://mrprajesh.co.in/blog/cmake-build.html",
            
            
            
            "tags": ["cmake","coding"],
            
            "date_published": "2022-04-23T16:09:19+05:30",
            "date_modified": "2022-04-23T16:09:19+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/build-moderngpu.html",
            "title": "How to Build moderngpu",
            "summary": null,
            "content_text": "I have  Mint/Ubuntu 18.04 running GCC 7.4, CUDA 10.0 and Driver 410.73  cmake-3.22.3 binary.  GeForce 840M with Compute Capability (CC) 5.0I could build it but not run it. BecauseCUDA_ARCHITECTURESis set higher. Let’s change it to 50git clone https://github.com/moderngpu/moderngpu.gitcd moderngpumkdir build &amp;&amp; cd build~/install/cmake-3.22.3-linux-x86_64/bin/cmake ..make./bin/test_segreduceOn P100.  Not working with cmake 3.23  Just use 3.19  scl enable devtoolset-6 bash  and it should work.",
            "content_html": "<p>I have</p><ul>  <li>Mint/Ubuntu 18.04 running GCC 7.4, CUDA 10.0 and Driver 410.73</li>  <li>cmake-3.22.3 binary.</li>  <li>GeForce 840M with Compute Capability (CC) 5.0</li></ul><p>I could build it but not run it. Because<a href=\"https://github.com/moderngpu/moderngpu/blob/master/CMakeLists.txt#L53\">CUDA_ARCHITECTURES</a>is set higher. Let’s change it to <code class=\"language-plaintext highlighter-rouge\">50</code></p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//github.com/moderngpu/moderngpu.git</span><span class=\"n\">cd</span> <span class=\"n\">moderngpu</span><span class=\"n\">mkdir</span> <span class=\"n\">build</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">cd</span> <span class=\"n\">build</span><span class=\"o\">~/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">cmake</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"mi\">22</span><span class=\"p\">.</span><span class=\"mi\">3</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">cmake</span> <span class=\"p\">..</span><span class=\"n\">make</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">test_segreduce</span></code></pre></div></div><p>On P100.</p><ul>  <li>Not working with cmake 3.23</li>  <li>Just use 3.19</li>  <li><code class=\"language-plaintext highlighter-rouge\">scl enable devtoolset-6 bash</code></li>  <li>and it should work.</li></ul>",
            "url": "https://mrprajesh.co.in/blog/build-moderngpu.html",
            
            
            
            "tags": ["gpu","moderngpu"],
            
            "date_published": "2022-03-31T11:45:52+05:30",
            "date_modified": "2022-03-31T11:45:52+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/build-gpu-graph-libraries.html",
            "title": "build gpu graph libraries Graphit, GSwitch and SepGraph",
            "summary": null,
            "content_text": "On AQUA.Gpu Graphit G2module load cmake3.18 gcc640 python385 cuda10.0mkdir GraphItG2; cd GraphItG2; git clone -b gpu-merge https://github.com/GraphIt-DSL/graphit.git .mkdir build; cd buildcmake ..make -j 32cd ../graphit_eval/g2_cgo2021_eval/datasetmake small # or just makecd ..python3 gen_table7.py small    # without small it will run all dataset# ON AQUApython3 gen_table7.py small &lt; input## input file edit accordingly on aquacat input/lfs/usrhome/phd/cs16d003/install/GraphItG2/graphit_eval/g2_cgo2021_eval/table7_outputs/lfs/usrhome/phd/cs16d003/install/GraphItG2/graphit_eval/g2_cgo2021_eval/../../build/lfs/usrhome/phd/cs16d003/install/GraphItG2/graphit_eval/g2_cgo2021_eval/dataset/lfs/sware/cuda-10.1/bin/nvcc/lfs/sware/gcc640/bin/g++//TODO make it run via qsubGSwitchmodule load cmake3.18module load gcc640cmake ..make -j 32Scanning dependencies of target gswitch[  7%] Linking CXX static library libgswitch.a[  7%] Built target gswitch[ 30%] Building NVCC (Device) object application/CMakeFiles/GC.dir/GC_generated_gc.cu.o[ 38%] Building NVCC (Device) object application/CMakeFiles/SSSP.dir/SSSP_generated_sssp.cu.o[ 38%] Building NVCC (Device) object application/CMakeFiles/PageRank.dir/PageRank_generated_pagerank.cu.o[ 38%] Building NVCC (Device) object application/CMakeFiles/BC.dir/BC_generated_bc.cu.o[ 53%] Building NVCC (Device) object application/CMakeFiles/CC.dir/CC_generated_cc.cu.o[ 53%] Building NVCC (Device) object application/CMakeFiles/BFS.dir/BFS_generated_bfs.cu.o..Scanning dependencies of target PageRank[ 69%] Linking CXX executable PageRank[ 69%] Built target PageRankScanning dependencies of target SSSP[ 76%] Linking CXX executable SSSPScanning dependencies of target BFS[ 84%] Linking CXX executable BFSScanning dependencies of target GC[ 92%] Linking CXX executable GC[ 92%] Built target SSSP[ 92%] Built target BFS[ 92%] Built target GCScanning dependencies of target BC[100%] Linking CXX executable BC[100%] Built target BCSEP-Graphmodule load cmake3.18module load cuda-9.2src build gcc 5.4.0 at install prefix /lfs/usrhome/phd/cs16d003/install/gcc54/binccmake .. -DCUDA_TOOLKIT_ROOT_DIR=/lfs/sware/cuda-9.2 -DCMAKE_C_COMPILER=/lfs/usrhome/phd/cs16d003/install/gcc54/bin/gcc-5.4 -DCMAKE_CXX_COMPILER=/lfs/usrhome/phd/cs16d003/install/gcc54/bin/g++-5.4Git Issue",
            "content_html": "<p>On AQUA.</p><h3 id=\"gpu-graphit-g2\">Gpu Graphit G2</h3><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">module</span> <span class=\"n\">load</span> <span class=\"n\">cmake3</span><span class=\"p\">.</span><span class=\"mi\">18</span> <span class=\"n\">gcc640</span> <span class=\"n\">python385</span> <span class=\"n\">cuda10</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"n\">mkdir</span> <span class=\"n\">GraphItG2</span><span class=\"p\">;</span> <span class=\"n\">cd</span> <span class=\"n\">GraphItG2</span><span class=\"p\">;</span> <span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"o\">-</span><span class=\"n\">b</span> <span class=\"n\">gpu</span><span class=\"o\">-</span><span class=\"n\">merge</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//github.com/GraphIt-DSL/graphit.git .</span><span class=\"n\">mkdir</span> <span class=\"n\">build</span><span class=\"p\">;</span> <span class=\"n\">cd</span> <span class=\"n\">build</span><span class=\"n\">cmake</span> <span class=\"p\">..</span><span class=\"n\">make</span> <span class=\"o\">-</span><span class=\"n\">j</span> <span class=\"mi\">32</span><span class=\"n\">cd</span> <span class=\"p\">..</span><span class=\"o\">/</span><span class=\"n\">graphit_eval</span><span class=\"o\">/</span><span class=\"n\">g2_cgo2021_eval</span><span class=\"o\">/</span><span class=\"n\">dataset</span><span class=\"n\">make</span> <span class=\"n\">small</span> <span class=\"err\">#</span> <span class=\"n\">or</span> <span class=\"n\">just</span> <span class=\"n\">make</span><span class=\"n\">cd</span> <span class=\"p\">..</span><span class=\"n\">python3</span> <span class=\"n\">gen_table7</span><span class=\"p\">.</span><span class=\"n\">py</span> <span class=\"n\">small</span>    <span class=\"err\">#</span> <span class=\"n\">without</span> <span class=\"n\">small</span> <span class=\"n\">it</span> <span class=\"n\">will</span> <span class=\"n\">run</span> <span class=\"n\">all</span> <span class=\"n\">dataset</span><span class=\"cp\"># ON AQUA</span><span class=\"n\">python3</span> <span class=\"n\">gen_table7</span><span class=\"p\">.</span><span class=\"n\">py</span> <span class=\"n\">small</span> <span class=\"o\">&lt;</span> <span class=\"n\">input</span><span class=\"cp\">## input file edit accordingly on aqua</span><span class=\"n\">cat</span> <span class=\"n\">input</span><span class=\"o\">/</span><span class=\"n\">lfs</span><span class=\"o\">/</span><span class=\"n\">usrhome</span><span class=\"o\">/</span><span class=\"n\">phd</span><span class=\"o\">/</span><span class=\"n\">cs16d003</span><span class=\"o\">/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">GraphItG2</span><span class=\"o\">/</span><span class=\"n\">graphit_eval</span><span class=\"o\">/</span><span class=\"n\">g2_cgo2021_eval</span><span class=\"o\">/</span><span class=\"n\">table7_outputs</span><span class=\"o\">/</span><span class=\"n\">lfs</span><span class=\"o\">/</span><span class=\"n\">usrhome</span><span class=\"o\">/</span><span class=\"n\">phd</span><span class=\"o\">/</span><span class=\"n\">cs16d003</span><span class=\"o\">/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">GraphItG2</span><span class=\"o\">/</span><span class=\"n\">graphit_eval</span><span class=\"o\">/</span><span class=\"n\">g2_cgo2021_eval</span><span class=\"o\">/</span><span class=\"p\">..</span><span class=\"o\">/</span><span class=\"p\">..</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">lfs</span><span class=\"o\">/</span><span class=\"n\">usrhome</span><span class=\"o\">/</span><span class=\"n\">phd</span><span class=\"o\">/</span><span class=\"n\">cs16d003</span><span class=\"o\">/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">GraphItG2</span><span class=\"o\">/</span><span class=\"n\">graphit_eval</span><span class=\"o\">/</span><span class=\"n\">g2_cgo2021_eval</span><span class=\"o\">/</span><span class=\"n\">dataset</span><span class=\"o\">/</span><span class=\"n\">lfs</span><span class=\"o\">/</span><span class=\"n\">sware</span><span class=\"o\">/</span><span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">nvcc</span><span class=\"o\">/</span><span class=\"n\">lfs</span><span class=\"o\">/</span><span class=\"n\">sware</span><span class=\"o\">/</span><span class=\"n\">gcc640</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">g</span><span class=\"o\">++</span><span class=\"c1\">//TODO make it run via qsub</span></code></pre></div></div><div style=\"position: relative; padding-bottom: 56.25%; height: 0;\"><iframe src=\"https://www.loom.com/embed/8f3b9e95847c4894b8f4c69aab45773f?sid=9dfd364b-ad1a-43d5-8f24-da6448bf0a12\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe></div><h3 id=\"gswitch\">GSwitch</h3><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">module</span> <span class=\"n\">load</span> <span class=\"n\">cmake3</span><span class=\"p\">.</span><span class=\"mi\">18</span><span class=\"n\">module</span> <span class=\"n\">load</span> <span class=\"n\">gcc640</span><span class=\"n\">cmake</span> <span class=\"p\">..</span><span class=\"n\">make</span> <span class=\"o\">-</span><span class=\"n\">j</span> <span class=\"mi\">32</span><span class=\"n\">Scanning</span> <span class=\"n\">dependencies</span> <span class=\"n\">of</span> <span class=\"n\">target</span> <span class=\"n\">gswitch</span><span class=\"p\">[</span>  <span class=\"mi\">7</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">CXX</span> <span class=\"k\">static</span> <span class=\"n\">library</span> <span class=\"n\">libgswitch</span><span class=\"p\">.</span><span class=\"n\">a</span><span class=\"p\">[</span>  <span class=\"mi\">7</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Built</span> <span class=\"n\">target</span> <span class=\"n\">gswitch</span><span class=\"p\">[</span> <span class=\"mi\">30</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">NVCC</span> <span class=\"p\">(</span><span class=\"n\">Device</span><span class=\"p\">)</span> <span class=\"n\">object</span> <span class=\"n\">application</span><span class=\"o\">/</span><span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">GC</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">GC_generated_gc</span><span class=\"p\">.</span><span class=\"n\">cu</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">38</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">NVCC</span> <span class=\"p\">(</span><span class=\"n\">Device</span><span class=\"p\">)</span> <span class=\"n\">object</span> <span class=\"n\">application</span><span class=\"o\">/</span><span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">SSSP</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">SSSP_generated_sssp</span><span class=\"p\">.</span><span class=\"n\">cu</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">38</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">NVCC</span> <span class=\"p\">(</span><span class=\"n\">Device</span><span class=\"p\">)</span> <span class=\"n\">object</span> <span class=\"n\">application</span><span class=\"o\">/</span><span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">PageRank</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">PageRank_generated_pagerank</span><span class=\"p\">.</span><span class=\"n\">cu</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">38</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">NVCC</span> <span class=\"p\">(</span><span class=\"n\">Device</span><span class=\"p\">)</span> <span class=\"n\">object</span> <span class=\"n\">application</span><span class=\"o\">/</span><span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">BC</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">BC_generated_bc</span><span class=\"p\">.</span><span class=\"n\">cu</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">53</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">NVCC</span> <span class=\"p\">(</span><span class=\"n\">Device</span><span class=\"p\">)</span> <span class=\"n\">object</span> <span class=\"n\">application</span><span class=\"o\">/</span><span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">CC</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">CC_generated_cc</span><span class=\"p\">.</span><span class=\"n\">cu</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">[</span> <span class=\"mi\">53</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">NVCC</span> <span class=\"p\">(</span><span class=\"n\">Device</span><span class=\"p\">)</span> <span class=\"n\">object</span> <span class=\"n\">application</span><span class=\"o\">/</span><span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">BFS</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">BFS_generated_bfs</span><span class=\"p\">.</span><span class=\"n\">cu</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">..</span><span class=\"n\">Scanning</span> <span class=\"n\">dependencies</span> <span class=\"n\">of</span> <span class=\"n\">target</span> <span class=\"n\">PageRank</span><span class=\"p\">[</span> <span class=\"mi\">69</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">CXX</span> <span class=\"n\">executable</span> <span class=\"n\">PageRank</span><span class=\"p\">[</span> <span class=\"mi\">69</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Built</span> <span class=\"n\">target</span> <span class=\"n\">PageRank</span><span class=\"n\">Scanning</span> <span class=\"n\">dependencies</span> <span class=\"n\">of</span> <span class=\"n\">target</span> <span class=\"n\">SSSP</span><span class=\"p\">[</span> <span class=\"mi\">76</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">CXX</span> <span class=\"n\">executable</span> <span class=\"n\">SSSP</span><span class=\"n\">Scanning</span> <span class=\"n\">dependencies</span> <span class=\"n\">of</span> <span class=\"n\">target</span> <span class=\"n\">BFS</span><span class=\"p\">[</span> <span class=\"mi\">84</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">CXX</span> <span class=\"n\">executable</span> <span class=\"n\">BFS</span><span class=\"n\">Scanning</span> <span class=\"n\">dependencies</span> <span class=\"n\">of</span> <span class=\"n\">target</span> <span class=\"n\">GC</span><span class=\"p\">[</span> <span class=\"mi\">92</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">CXX</span> <span class=\"n\">executable</span> <span class=\"n\">GC</span><span class=\"p\">[</span> <span class=\"mi\">92</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Built</span> <span class=\"n\">target</span> <span class=\"n\">SSSP</span><span class=\"p\">[</span> <span class=\"mi\">92</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Built</span> <span class=\"n\">target</span> <span class=\"n\">BFS</span><span class=\"p\">[</span> <span class=\"mi\">92</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Built</span> <span class=\"n\">target</span> <span class=\"n\">GC</span><span class=\"n\">Scanning</span> <span class=\"n\">dependencies</span> <span class=\"n\">of</span> <span class=\"n\">target</span> <span class=\"n\">BC</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">CXX</span> <span class=\"n\">executable</span> <span class=\"n\">BC</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"o\">%</span><span class=\"p\">]</span> <span class=\"n\">Built</span> <span class=\"n\">target</span> <span class=\"n\">BC</span></code></pre></div></div><h3 id=\"sep-graph\">SEP-Graph</h3><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">module</span> <span class=\"n\">load</span> <span class=\"n\">cmake3</span><span class=\"p\">.</span><span class=\"mi\">18</span><span class=\"n\">module</span> <span class=\"n\">load</span> <span class=\"n\">cuda</span><span class=\"o\">-</span><span class=\"mi\">9</span><span class=\"p\">.</span><span class=\"mi\">2</span></code></pre></div></div><p><a href=\"https://mrprajesh.co.in/blog/install-gcc.html\">src build gcc 5.4.0</a> at install prefix <code class=\"language-plaintext highlighter-rouge\">/lfs/usrhome/phd/cs16d003/install/gcc54/bin</code></p><p><code class=\"language-plaintext highlighter-rouge\">ccmake .. -DCUDA_TOOLKIT_ROOT_DIR=/lfs/sware/cuda-9.2 -DCMAKE_C_COMPILER=/lfs/usrhome/phd/cs16d003/install/gcc54/bin/gcc-5.4 -DCMAKE_CXX_COMPILER=/lfs/usrhome/phd/cs16d003/install/gcc54/bin/g++-5.4</code></p><p><a href=\"https://github.com/mrprajesh/sep-graph/issues/1#issuecomment-1075839359\">Git Issue</a></p>",
            "url": "https://mrprajesh.co.in/blog/build-gpu-graph-libraries.html",
            
            
            
            "tags": ["GraphIt","GSwitch"],
            
            "date_published": "2022-03-23T08:57:52+05:30",
            "date_modified": "2022-03-23T08:57:52+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/install-gcc.html",
            "title": "building and install gcc from source on linux",
            "summary": null,
            "content_text": "  Go to GNU site download the required file.  Let’s see how to install gcc-5.4.0.tar.gz## Download and extractwget https://ftp.gnu.org/gnu/gcc/gcc-5.4.0/gcc-5.4.0.tar.gz --no-check-certificatetar -xvzf gcc-5.4.0.tar.gz## dowloads prereqcd gcc-5.4.0./contrib/download_prerequisites## configure Buildcd /tmpmkdir gcc54-buildcd gcc54-build/## change arg0 and prefix to approp locations~/install/gcc-5.4.0/configure -v --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu --prefix=/lfs/usrhome/phd/cs16d003/install/gcc54 --enable-checking=release --enable-languages=c,c++,fortran --disable-multilib --program-suffix=-5.4# note --prefix=/usr/bin/gccmake -j 32 # or based on number of cpusmake install----------------------------------------------------------------------Libraries have been installed in:   /lfs/usrhome/phd/cs16d003/install/gcc54/lib/../lib64If you ever happen to want to link against installed librariesin a given directory, LIBDIR, you must either use libtool, andspecify the full pathname of the library, or use the `-LLIBDIR'flag during linking and do at least one of the following:   - add LIBDIR to the `LD_LIBRARY_PATH' environment variable     during execution   - add LIBDIR to the `LD_RUN_PATH' environment variable     during linking   - use the `-Wl,-rpath -Wl,LIBDIR' linker flag   - have your system administrator add LIBDIR to `/etc/ld.so.conf'See any operating system documentation about shared libraries formore information, such as the ld(1) and ld.so(8) manual pages.----------------------------------------------------------------------Refs  Sorush",
            "content_html": "<ol>  <li>Go to <a href=\"https://ftp.gnu.org/gnu/gcc/\">GNU site</a> download the required file.</li>  <li>Let’s see how to install gcc-5.4.0.tar.gz</li></ol><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">## Download and extract</span><span class=\"n\">wget</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//ftp.gnu.org/gnu/gcc/gcc-5.4.0/gcc-5.4.0.tar.gz --no-check-certificate</span><span class=\"n\">tar</span> <span class=\"o\">-</span><span class=\"n\">xvzf</span> <span class=\"n\">gcc</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">.</span><span class=\"mi\">4</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">.</span><span class=\"n\">gz</span><span class=\"cp\">## dowloads prereq</span><span class=\"n\">cd</span> <span class=\"n\">gcc</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">.</span><span class=\"mi\">4</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">contrib</span><span class=\"o\">/</span><span class=\"n\">download_prerequisites</span><span class=\"cp\">## configure Build</span><span class=\"n\">cd</span> <span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"n\">mkdir</span> <span class=\"n\">gcc54</span><span class=\"o\">-</span><span class=\"n\">build</span><span class=\"n\">cd</span> <span class=\"n\">gcc54</span><span class=\"o\">-</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"cp\">## change arg0 and prefix to approp locations</span><span class=\"o\">~/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">gcc</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">.</span><span class=\"mi\">4</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"o\">/</span><span class=\"n\">configure</span> <span class=\"o\">-</span><span class=\"n\">v</span> <span class=\"o\">--</span><span class=\"n\">build</span><span class=\"o\">=</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span> <span class=\"o\">--</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span> <span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span> <span class=\"o\">--</span><span class=\"n\">prefix</span><span class=\"o\">=/</span><span class=\"n\">lfs</span><span class=\"o\">/</span><span class=\"n\">usrhome</span><span class=\"o\">/</span><span class=\"n\">phd</span><span class=\"o\">/</span><span class=\"n\">cs16d003</span><span class=\"o\">/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">gcc54</span> <span class=\"o\">--</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">checking</span><span class=\"o\">=</span><span class=\"n\">release</span> <span class=\"o\">--</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">languages</span><span class=\"o\">=</span><span class=\"n\">c</span><span class=\"p\">,</span><span class=\"n\">c</span><span class=\"o\">++</span><span class=\"p\">,</span><span class=\"n\">fortran</span> <span class=\"o\">--</span><span class=\"n\">disable</span><span class=\"o\">-</span><span class=\"n\">multilib</span> <span class=\"o\">--</span><span class=\"n\">program</span><span class=\"o\">-</span><span class=\"n\">suffix</span><span class=\"o\">=-</span><span class=\"mi\">5</span><span class=\"p\">.</span><span class=\"mi\">4</span><span class=\"cp\"># note --prefix=/usr/bin/gcc</span><span class=\"n\">make</span> <span class=\"o\">-</span><span class=\"n\">j</span> <span class=\"mi\">32</span> <span class=\"err\">#</span> <span class=\"n\">or</span> <span class=\"n\">based</span> <span class=\"n\">on</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">cpus</span><span class=\"n\">make</span> <span class=\"n\">install</span></code></pre></div></div><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">----------------------------------------------------------------------</span><span class=\"n\">Libraries</span> <span class=\"n\">have</span> <span class=\"n\">been</span> <span class=\"n\">installed</span> <span class=\"n\">in</span><span class=\"o\">:</span>   <span class=\"o\">/</span><span class=\"n\">lfs</span><span class=\"o\">/</span><span class=\"n\">usrhome</span><span class=\"o\">/</span><span class=\"n\">phd</span><span class=\"o\">/</span><span class=\"n\">cs16d003</span><span class=\"o\">/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">gcc54</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"p\">..</span><span class=\"o\">/</span><span class=\"n\">lib64</span><span class=\"n\">If</span> <span class=\"n\">you</span> <span class=\"n\">ever</span> <span class=\"n\">happen</span> <span class=\"n\">to</span> <span class=\"n\">want</span> <span class=\"n\">to</span> <span class=\"n\">link</span> <span class=\"n\">against</span> <span class=\"n\">installed</span> <span class=\"n\">libraries</span><span class=\"n\">in</span> <span class=\"n\">a</span> <span class=\"n\">given</span> <span class=\"n\">directory</span><span class=\"p\">,</span> <span class=\"n\">LIBDIR</span><span class=\"p\">,</span> <span class=\"n\">you</span> <span class=\"n\">must</span> <span class=\"n\">either</span> <span class=\"n\">use</span> <span class=\"n\">libtool</span><span class=\"p\">,</span> <span class=\"n\">and</span><span class=\"n\">specify</span> <span class=\"n\">the</span> <span class=\"n\">full</span> <span class=\"n\">pathname</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">library</span><span class=\"p\">,</span> <span class=\"n\">or</span> <span class=\"n\">use</span> <span class=\"n\">the</span> <span class=\"err\">`</span><span class=\"o\">-</span><span class=\"n\">LLIBDIR</span><span class=\"err\">'</span><span class=\"n\">flag</span> <span class=\"n\">during</span> <span class=\"n\">linking</span> <span class=\"n\">and</span> <span class=\"k\">do</span> <span class=\"n\">at</span> <span class=\"n\">least</span> <span class=\"n\">one</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">following</span><span class=\"o\">:</span>   <span class=\"o\">-</span> <span class=\"n\">add</span> <span class=\"n\">LIBDIR</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"err\">`</span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"err\">'</span> <span class=\"n\">environment</span> <span class=\"n\">variable</span>     <span class=\"n\">during</span> <span class=\"n\">execution</span>   <span class=\"o\">-</span> <span class=\"n\">add</span> <span class=\"n\">LIBDIR</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"err\">`</span><span class=\"n\">LD_RUN_PATH</span><span class=\"err\">'</span> <span class=\"n\">environment</span> <span class=\"n\">variable</span>     <span class=\"n\">during</span> <span class=\"n\">linking</span>   <span class=\"o\">-</span> <span class=\"n\">use</span> <span class=\"n\">the</span> <span class=\"err\">`</span><span class=\"o\">-</span><span class=\"n\">Wl</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"n\">rpath</span> <span class=\"o\">-</span><span class=\"n\">Wl</span><span class=\"p\">,</span><span class=\"n\">LIBDIR</span><span class=\"err\">'</span> <span class=\"n\">linker</span> <span class=\"n\">flag</span>   <span class=\"o\">-</span> <span class=\"n\">have</span> <span class=\"n\">your</span> <span class=\"n\">system</span> <span class=\"n\">administrator</span> <span class=\"n\">add</span> <span class=\"n\">LIBDIR</span> <span class=\"n\">to</span> <span class=\"err\">`</span><span class=\"o\">/</span><span class=\"n\">etc</span><span class=\"o\">/</span><span class=\"n\">ld</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"p\">.</span><span class=\"n\">conf</span><span class=\"err\">'</span><span class=\"n\">See</span> <span class=\"n\">any</span> <span class=\"n\">operating</span> <span class=\"n\">system</span> <span class=\"n\">documentation</span> <span class=\"n\">about</span> <span class=\"n\">shared</span> <span class=\"n\">libraries</span> <span class=\"k\">for</span><span class=\"n\">more</span> <span class=\"n\">information</span><span class=\"p\">,</span> <span class=\"n\">such</span> <span class=\"n\">as</span> <span class=\"n\">the</span> <span class=\"n\">ld</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"n\">and</span> <span class=\"n\">ld</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">)</span> <span class=\"n\">manual</span> <span class=\"n\">pages</span><span class=\"p\">.</span><span class=\"o\">----------------------------------------------------------------------</span></code></pre></div></div><h2 id=\"refs\">Refs</h2><ul>  <li><a href=\"https://iamsorush.com/posts/build-gcc11/\">Sorush</a></li></ul>",
            "url": "https://mrprajesh.co.in/blog/install-gcc.html",
            
            
            
            "tags": ["gcc","c","cpp","install"],
            
            "date_published": "2022-03-23T02:59:27+05:30",
            "date_modified": "2022-03-23T02:59:27+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/build-galois-for-gpu-on-ubuntu-and-aqua.html",
            "title": "Build Galois release 6.0  on ubuntu and aqua",
            "summary": null,
            "content_text": "Building Galois for GPU on aquaStep 1. aqua, a cluster at IITM.# no need default is okay gcc --version gcc (GCC) 9.2.0export BOOST_ROOT=/sware/boost_1_74_0/  #FIX: Error 1module load cmake3.18git clone -b release-6.0 git@github.com:IntelligentSoftwareSystems/Galois.git #https://github.com/IntelligentSoftwareSystems/Galoiscd Galoisgit submodule initgit submodulemdkir buildStep 2. GOTO: LLVMStep 3.# FIX: warning and ERROR 2 (last two flags)cmake .. -DGALOIS_CUDA_CAPABILITY=\"7.0\" -DCMAKE_CUDA_ARCHITECTURES=70 -DLLVM_DIR=/lfs/usrhome/phd/cs16d003/install/llvm-8.0.1.src/build/lib/cmake/llvm# reports errors cuda not supported over 8module load gcc640# do not rm -rf *cmake .. -DGALOIS_CUDA_CAPABILITY=\"7.0\" -DCMAKE_CUDA_ARCHITECTURES=70 -DLLVM_DIR=/lfs/usrhome/phd/cs16d003/install/llvm-8.0.1.src/build/lib/cmake/llvm# get the DIR path from prev stepStep 4. GOTO: post buildOn Ubuntu 18.04 or Linux MintStep 1.# if boost already preset, else add the last pkgsudo apt-get install libfmt-dev llvm-7-dev #libboost-devsee belowStep 2.git clone -b release-6.0 https://github.com/IntelligentSoftwareSystems/Galoiscd Galoisgit submodule initgit submodulemdkir buildcmake .. -DGALOIS_CUDA_CAPABILITY=\"5.0\"  # as deviceQuery gave me CC 5.0Step 3. See below: post buildpost buildmake inputcd lonestar;cd analytics/gpumake -j2cd sssp./sssp-gpuusage: ./sssp-gpu [-q] [-g gpunum] [-o output-file] [-l] [-d delta] [-s startNode] graph-file -l: enable thread block load balancer (by default false)LLVMwget https://github.com/llvm/llvm-project/releases/download/llvmorg-8.0.1/llvm-8.0.1.src.tar.xztar xf llvm-8.0.1.src.tar.xzcd llvm-8.0.1.srcmkdir build &amp;&amp; cd buildcmake .. -DLLVM_ENABLE_RTTI=ON #flag must for Galois#note the path of build/lib/cmakefor office use only ;)The below are NOT NEEDED only my refs! It has the errors/paths I came through.cmake --build .cmake --build . --target installcmake -DCMAKE_INSTALL_PREFIX=~/install/llvm -P cmake_install.cmake================== ERROR 1 ===============CMake Error at /lfs/sware/cmake3.18.2/share/cmake-3.18/Modules/FindPackageHandleStandardArgs.cmake:165 (message):  Could NOT find Boost (missing: Boost_INCLUDE_DIR serialization iostreams)  (Required is at least version \"1.58.0\")Call Stack (most recent call first):  /lfs/sware/cmake3.18.2/share/cmake-3.18/Modules/FindPackageHandleStandardArgs.cmake:458 (_FPHSA_FAILURE_MESSAGE)  /lfs/sware/cmake3.18.2/share/cmake-3.18/Modules/FindBoost.cmake:2177 (find_package_handle_standard_args)  CMakeLists.txt:155 (find_package)================== ERROR 2 ===============CMake Error at CMakeLists.txt:157 (find_package):  Could not find a package configuration file provided by \"LLVM\" with any of  the following names:    LLVMConfig.cmake    llvm-config.cmake  Add the installation prefix of \"LLVM\" to CMAKE_PREFIX_PATH or set  \"LLVM_DIR\" to a directory containing one of the above files.  If \"LLVM\"  provides a separate development package or SDK, be sure it has been  installed.=========== warning =========CMake Warning (dev) in lonestar/scientific/gpu/delaunayrefinement/CMakeLists.txt:  Policy CMP0104 is not set: CMAKE_CUDA_ARCHITECTURES now detected for NVCC,  empty CUDA_ARCHITECTURES not allowed.  Run \"cmake --help-policy CMP0104\"  for policy details.  Use the cmake_policy command to set the policy and  suppress this warning.OTHERSsssp rmat15 rmat15.out sssp -s 0 -o rmat15.out ${BASEINPUT}/scalefree/rmat15.grcmake -DCMAKE_C_COMPILER=$(which gcc-8) -DCMAKE_CXX_COMPILER=$(which g++-8) \\      -DWITH_CUDA=ON ..REFERENCES  Galois GPU Readme  LLMV Download  LLVM Build  CMake edit options  CUDA Arch",
            "content_html": "<h1 id=\"building-galois-for-gpu-on-aqua\">Building Galois for GPU on aqua</h1><p>Step 1. <a href=\"https://hpce.iitm.ac.in/content.php?navigate=aquacluster\">aqua</a>, a cluster at IITM.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\"># no need default is okay gcc --version gcc (GCC) 9.2.0</span><span class=\"n\">export</span> <span class=\"n\">BOOST_ROOT</span><span class=\"o\">=/</span><span class=\"n\">sware</span><span class=\"o\">/</span><span class=\"n\">boost_1_74_0</span><span class=\"o\">/</span>  <span class=\"err\">#</span><span class=\"n\">FIX</span><span class=\"o\">:</span> <span class=\"n\">Error</span> <span class=\"mi\">1</span><span class=\"n\">module</span> <span class=\"n\">load</span> <span class=\"n\">cmake3</span><span class=\"p\">.</span><span class=\"mi\">18</span><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"o\">-</span><span class=\"n\">b</span> <span class=\"n\">release</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"p\">.</span><span class=\"mi\">0</span> <span class=\"n\">git</span><span class=\"err\">@</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">:</span><span class=\"n\">IntelligentSoftwareSystems</span><span class=\"o\">/</span><span class=\"n\">Galois</span><span class=\"p\">.</span><span class=\"n\">git</span> <span class=\"err\">#</span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//github.com/IntelligentSoftwareSystems/Galois</span><span class=\"n\">cd</span> <span class=\"n\">Galois</span><span class=\"n\">git</span> <span class=\"n\">submodule</span> <span class=\"n\">init</span><span class=\"n\">git</span> <span class=\"n\">submodule</span><span class=\"n\">mdkir</span> <span class=\"n\">build</span></code></pre></div></div><p>Step 2. GOTO: <a href=\"#llvm\">LLVM</a></p><p>Step 3.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\"># FIX: warning and ERROR 2 (last two flags)</span><span class=\"n\">cmake</span> <span class=\"p\">..</span> <span class=\"o\">-</span><span class=\"n\">DGALOIS_CUDA_CAPABILITY</span><span class=\"o\">=</span><span class=\"s\">\"7.0\"</span> <span class=\"o\">-</span><span class=\"n\">DCMAKE_CUDA_ARCHITECTURES</span><span class=\"o\">=</span><span class=\"mi\">70</span> <span class=\"o\">-</span><span class=\"n\">DLLVM_DIR</span><span class=\"o\">=/</span><span class=\"n\">lfs</span><span class=\"o\">/</span><span class=\"n\">usrhome</span><span class=\"o\">/</span><span class=\"n\">phd</span><span class=\"o\">/</span><span class=\"n\">cs16d003</span><span class=\"o\">/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">cmake</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"cp\"># reports errors cuda not supported over 8</span><span class=\"n\">module</span> <span class=\"n\">load</span> <span class=\"n\">gcc640</span><span class=\"cp\"># do not rm -rf *</span><span class=\"n\">cmake</span> <span class=\"p\">..</span> <span class=\"o\">-</span><span class=\"n\">DGALOIS_CUDA_CAPABILITY</span><span class=\"o\">=</span><span class=\"s\">\"7.0\"</span> <span class=\"o\">-</span><span class=\"n\">DCMAKE_CUDA_ARCHITECTURES</span><span class=\"o\">=</span><span class=\"mi\">70</span> <span class=\"o\">-</span><span class=\"n\">DLLVM_DIR</span><span class=\"o\">=/</span><span class=\"n\">lfs</span><span class=\"o\">/</span><span class=\"n\">usrhome</span><span class=\"o\">/</span><span class=\"n\">phd</span><span class=\"o\">/</span><span class=\"n\">cs16d003</span><span class=\"o\">/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">cmake</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"cp\"># get the DIR path from prev step</span></code></pre></div></div><p>Step 4. GOTO: <a href=\"#post-build\">post build</a></p><h2 id=\"on-ubuntu-1804-or-linux-mint\">On Ubuntu 18.04 or Linux Mint</h2><p>Step 1.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\"># if boost already preset, else add the last pkg</span><span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"n\">libfmt</span><span class=\"o\">-</span><span class=\"n\">dev</span> <span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"mi\">7</span><span class=\"o\">-</span><span class=\"n\">dev</span> <span class=\"err\">#</span><span class=\"n\">libboost</span><span class=\"o\">-</span><span class=\"n\">dev</span></code></pre></div></div><p>see below</p><p>Step 2.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"o\">-</span><span class=\"n\">b</span> <span class=\"n\">release</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"p\">.</span><span class=\"mi\">0</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//github.com/IntelligentSoftwareSystems/Galois</span><span class=\"n\">cd</span> <span class=\"n\">Galois</span><span class=\"n\">git</span> <span class=\"n\">submodule</span> <span class=\"n\">init</span><span class=\"n\">git</span> <span class=\"n\">submodule</span><span class=\"n\">mdkir</span> <span class=\"n\">build</span><span class=\"n\">cmake</span> <span class=\"p\">..</span> <span class=\"o\">-</span><span class=\"n\">DGALOIS_CUDA_CAPABILITY</span><span class=\"o\">=</span><span class=\"s\">\"5.0\"</span>  <span class=\"err\">#</span> <span class=\"n\">as</span> <span class=\"n\">deviceQuery</span> <span class=\"n\">gave</span> <span class=\"n\">me</span> <span class=\"n\">CC</span> <span class=\"mi\">5</span><span class=\"p\">.</span><span class=\"mi\">0</span></code></pre></div></div><p>Step 3. See below: <a href=\"#post-build\">post build</a></p><h2 id=\"post-build\">post build</h2><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">make</span> <span class=\"n\">input</span><span class=\"n\">cd</span> <span class=\"n\">lonestar</span><span class=\"p\">;</span><span class=\"n\">cd</span> <span class=\"n\">analytics</span><span class=\"o\">/</span><span class=\"n\">gpu</span><span class=\"n\">make</span> <span class=\"o\">-</span><span class=\"n\">j2</span><span class=\"n\">cd</span> <span class=\"n\">sssp</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">sssp</span><span class=\"o\">-</span><span class=\"n\">gpu</span><span class=\"n\">usage</span><span class=\"o\">:</span> <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">sssp</span><span class=\"o\">-</span><span class=\"n\">gpu</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">g</span> <span class=\"n\">gpunum</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">output</span><span class=\"o\">-</span><span class=\"n\">file</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">l</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">d</span> <span class=\"n\">delta</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">s</span> <span class=\"n\">startNode</span><span class=\"p\">]</span> <span class=\"n\">graph</span><span class=\"o\">-</span><span class=\"n\">file</span> <span class=\"o\">-</span><span class=\"n\">l</span><span class=\"o\">:</span> <span class=\"n\">enable</span> <span class=\"kr\">thread</span> <span class=\"n\">block</span> <span class=\"n\">load</span> <span class=\"n\">balancer</span> <span class=\"p\">(</span><span class=\"n\">by</span> <span class=\"k\">default</span> <span class=\"nb\">false</span><span class=\"p\">)</span></code></pre></div></div><h3 id=\"llvm\">LLVM</h3><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">wget</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//github.com/llvm/llvm-project/releases/download/llvmorg-8.0.1/llvm-8.0.1.src.tar.xz</span><span class=\"n\">tar</span> <span class=\"n\">xf</span> <span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">.</span><span class=\"n\">xz</span><span class=\"n\">cd</span> <span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"n\">mkdir</span> <span class=\"n\">build</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">cd</span> <span class=\"n\">build</span><span class=\"n\">cmake</span> <span class=\"p\">..</span> <span class=\"o\">-</span><span class=\"n\">DLLVM_ENABLE_RTTI</span><span class=\"o\">=</span><span class=\"n\">ON</span> <span class=\"err\">#</span><span class=\"n\">flag</span> <span class=\"n\">must</span> <span class=\"k\">for</span> <span class=\"n\">Galois</span><span class=\"cp\">#note the path of build/lib/cmake</span></code></pre></div></div><h2 id=\"for-office-use-only-\">for office use only ;)</h2><p>The below are NOT NEEDED only my refs! It has the errors/paths I came through.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">cmake</span> <span class=\"o\">--</span><span class=\"n\">build</span> <span class=\"p\">.</span><span class=\"n\">cmake</span> <span class=\"o\">--</span><span class=\"n\">build</span> <span class=\"p\">.</span> <span class=\"o\">--</span><span class=\"n\">target</span> <span class=\"n\">install</span><span class=\"n\">cmake</span> <span class=\"o\">-</span><span class=\"n\">DCMAKE_INSTALL_PREFIX</span><span class=\"o\">=~/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">llvm</span> <span class=\"o\">-</span><span class=\"n\">P</span> <span class=\"n\">cmake_install</span><span class=\"p\">.</span><span class=\"n\">cmake</span><span class=\"o\">==================</span> <span class=\"n\">ERROR</span> <span class=\"mi\">1</span> <span class=\"o\">===============</span><span class=\"n\">CMake</span> <span class=\"n\">Error</span> <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">lfs</span><span class=\"o\">/</span><span class=\"n\">sware</span><span class=\"o\">/</span><span class=\"n\">cmake3</span><span class=\"p\">.</span><span class=\"mi\">18</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"o\">/</span><span class=\"n\">share</span><span class=\"o\">/</span><span class=\"n\">cmake</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"mi\">18</span><span class=\"o\">/</span><span class=\"n\">Modules</span><span class=\"o\">/</span><span class=\"n\">FindPackageHandleStandardArgs</span><span class=\"p\">.</span><span class=\"n\">cmake</span><span class=\"o\">:</span><span class=\"mi\">165</span> <span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span><span class=\"o\">:</span>  <span class=\"n\">Could</span> <span class=\"n\">NOT</span> <span class=\"n\">find</span> <span class=\"n\">Boost</span> <span class=\"p\">(</span><span class=\"n\">missing</span><span class=\"o\">:</span> <span class=\"n\">Boost_INCLUDE_DIR</span> <span class=\"n\">serialization</span> <span class=\"n\">iostreams</span><span class=\"p\">)</span>  <span class=\"p\">(</span><span class=\"n\">Required</span> <span class=\"n\">is</span> <span class=\"n\">at</span> <span class=\"n\">least</span> <span class=\"n\">version</span> <span class=\"s\">\"1.58.0\"</span><span class=\"p\">)</span><span class=\"n\">Call</span> <span class=\"n\">Stack</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">first</span><span class=\"p\">)</span><span class=\"o\">:</span>  <span class=\"o\">/</span><span class=\"n\">lfs</span><span class=\"o\">/</span><span class=\"n\">sware</span><span class=\"o\">/</span><span class=\"n\">cmake3</span><span class=\"p\">.</span><span class=\"mi\">18</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"o\">/</span><span class=\"n\">share</span><span class=\"o\">/</span><span class=\"n\">cmake</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"mi\">18</span><span class=\"o\">/</span><span class=\"n\">Modules</span><span class=\"o\">/</span><span class=\"n\">FindPackageHandleStandardArgs</span><span class=\"p\">.</span><span class=\"n\">cmake</span><span class=\"o\">:</span><span class=\"mi\">458</span> <span class=\"p\">(</span><span class=\"n\">_FPHSA_FAILURE_MESSAGE</span><span class=\"p\">)</span>  <span class=\"o\">/</span><span class=\"n\">lfs</span><span class=\"o\">/</span><span class=\"n\">sware</span><span class=\"o\">/</span><span class=\"n\">cmake3</span><span class=\"p\">.</span><span class=\"mi\">18</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"o\">/</span><span class=\"n\">share</span><span class=\"o\">/</span><span class=\"n\">cmake</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"mi\">18</span><span class=\"o\">/</span><span class=\"n\">Modules</span><span class=\"o\">/</span><span class=\"n\">FindBoost</span><span class=\"p\">.</span><span class=\"n\">cmake</span><span class=\"o\">:</span><span class=\"mi\">2177</span> <span class=\"p\">(</span><span class=\"n\">find_package_handle_standard_args</span><span class=\"p\">)</span>  <span class=\"n\">CMakeLists</span><span class=\"p\">.</span><span class=\"n\">txt</span><span class=\"o\">:</span><span class=\"mi\">155</span> <span class=\"p\">(</span><span class=\"n\">find_package</span><span class=\"p\">)</span><span class=\"o\">==================</span> <span class=\"n\">ERROR</span> <span class=\"mi\">2</span> <span class=\"o\">===============</span><span class=\"n\">CMake</span> <span class=\"n\">Error</span> <span class=\"n\">at</span> <span class=\"n\">CMakeLists</span><span class=\"p\">.</span><span class=\"n\">txt</span><span class=\"o\">:</span><span class=\"mi\">157</span> <span class=\"p\">(</span><span class=\"n\">find_package</span><span class=\"p\">)</span><span class=\"o\">:</span>  <span class=\"n\">Could</span> <span class=\"n\">not</span> <span class=\"n\">find</span> <span class=\"n\">a</span> <span class=\"n\">package</span> <span class=\"n\">configuration</span> <span class=\"n\">file</span> <span class=\"n\">provided</span> <span class=\"n\">by</span> <span class=\"s\">\"LLVM\"</span> <span class=\"n\">with</span> <span class=\"n\">any</span> <span class=\"n\">of</span>  <span class=\"n\">the</span> <span class=\"n\">following</span> <span class=\"n\">names</span><span class=\"o\">:</span>    <span class=\"n\">LLVMConfig</span><span class=\"p\">.</span><span class=\"n\">cmake</span>    <span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">cmake</span>  <span class=\"n\">Add</span> <span class=\"n\">the</span> <span class=\"n\">installation</span> <span class=\"n\">prefix</span> <span class=\"n\">of</span> <span class=\"s\">\"LLVM\"</span> <span class=\"n\">to</span> <span class=\"n\">CMAKE_PREFIX_PATH</span> <span class=\"n\">or</span> <span class=\"n\">set</span>  <span class=\"s\">\"LLVM_DIR\"</span> <span class=\"n\">to</span> <span class=\"n\">a</span> <span class=\"n\">directory</span> <span class=\"n\">containing</span> <span class=\"n\">one</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">above</span> <span class=\"n\">files</span><span class=\"p\">.</span>  <span class=\"n\">If</span> <span class=\"s\">\"LLVM\"</span>  <span class=\"n\">provides</span> <span class=\"n\">a</span> <span class=\"n\">separate</span> <span class=\"n\">development</span> <span class=\"n\">package</span> <span class=\"n\">or</span> <span class=\"n\">SDK</span><span class=\"p\">,</span> <span class=\"n\">be</span> <span class=\"n\">sure</span> <span class=\"n\">it</span> <span class=\"n\">has</span> <span class=\"n\">been</span>  <span class=\"n\">installed</span><span class=\"p\">.</span><span class=\"o\">===========</span> <span class=\"n\">warning</span> <span class=\"o\">=========</span><span class=\"n\">CMake</span> <span class=\"n\">Warning</span> <span class=\"p\">(</span><span class=\"n\">dev</span><span class=\"p\">)</span> <span class=\"n\">in</span> <span class=\"n\">lonestar</span><span class=\"o\">/</span><span class=\"n\">scientific</span><span class=\"o\">/</span><span class=\"n\">gpu</span><span class=\"o\">/</span><span class=\"n\">delaunayrefinement</span><span class=\"o\">/</span><span class=\"n\">CMakeLists</span><span class=\"p\">.</span><span class=\"n\">txt</span><span class=\"o\">:</span>  <span class=\"n\">Policy</span> <span class=\"n\">CMP0104</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">set</span><span class=\"o\">:</span> <span class=\"n\">CMAKE_CUDA_ARCHITECTURES</span> <span class=\"n\">now</span> <span class=\"n\">detected</span> <span class=\"k\">for</span> <span class=\"n\">NVCC</span><span class=\"p\">,</span>  <span class=\"n\">empty</span> <span class=\"n\">CUDA_ARCHITECTURES</span> <span class=\"n\">not</span> <span class=\"n\">allowed</span><span class=\"p\">.</span>  <span class=\"n\">Run</span> <span class=\"s\">\"cmake --help-policy CMP0104\"</span>  <span class=\"k\">for</span> <span class=\"n\">policy</span> <span class=\"n\">details</span><span class=\"p\">.</span>  <span class=\"n\">Use</span> <span class=\"n\">the</span> <span class=\"n\">cmake_policy</span> <span class=\"n\">command</span> <span class=\"n\">to</span> <span class=\"n\">set</span> <span class=\"n\">the</span> <span class=\"n\">policy</span> <span class=\"n\">and</span>  <span class=\"n\">suppress</span> <span class=\"n\">this</span> <span class=\"n\">warning</span><span class=\"p\">.</span></code></pre></div></div><h2 id=\"others\">OTHERS</h2><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">sssp</span> <span class=\"n\">rmat15</span> <span class=\"n\">rmat15</span><span class=\"p\">.</span><span class=\"n\">out</span> <span class=\"n\">sssp</span> <span class=\"o\">-</span><span class=\"n\">s</span> <span class=\"mi\">0</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">rmat15</span><span class=\"p\">.</span><span class=\"n\">out</span> <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"n\">BASEINPUT</span><span class=\"p\">}</span><span class=\"o\">/</span><span class=\"n\">scalefree</span><span class=\"o\">/</span><span class=\"n\">rmat15</span><span class=\"p\">.</span><span class=\"n\">gr</span><span class=\"n\">cmake</span> <span class=\"o\">-</span><span class=\"n\">DCMAKE_C_COMPILER</span><span class=\"o\">=</span><span class=\"err\">$</span><span class=\"p\">(</span><span class=\"n\">which</span> <span class=\"n\">gcc</span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"p\">)</span> <span class=\"o\">-</span><span class=\"n\">DCMAKE_CXX_COMPILER</span><span class=\"o\">=</span><span class=\"err\">$</span><span class=\"p\">(</span><span class=\"n\">which</span> <span class=\"n\">g</span><span class=\"o\">++-</span><span class=\"mi\">8</span><span class=\"p\">)</span> \\      <span class=\"o\">-</span><span class=\"n\">DWITH_CUDA</span><span class=\"o\">=</span><span class=\"n\">ON</span> <span class=\"p\">..</span></code></pre></div></div><h2 id=\"references\">REFERENCES</h2><ul>  <li><a href=\"https://github.com/IntelligentSoftwareSystems/Galois/blob/master/lonestar/analytics/gpu/README.md\">Galois GPU Readme</a></li>  <li><a href=\"https://github.com/llvm/llvm-project/releases/tag/llvmorg-8.0.1\">LLMV Download</a></li>  <li><a href=\"https://llvm.org/docs/CMake.html\">LLVM Build</a></li>  <li><a href=\"https://github.com/espressomd/espresso/issues/3654#issue-597872007\">CMake edit options</a></li>  <li><a href=\"https://github.com/facebookresearch/faiss/issues/1424#issuecomment-699208014\">CUDA Arch</a></li></ul>",
            "url": "https://mrprajesh.co.in/blog/build-galois-for-gpu-on-ubuntu-and-aqua.html",
            
            
            
            "tags": ["galois","ubuntu","linux","cmake","llvm","gpu","aqua"],
            
            "date_published": "2022-03-05T04:17:47+05:30",
            "date_modified": "2022-03-05T04:17:47+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/change-default-login-shell-without-root.html",
            "title": "change default login shell to bash without root access",
            "summary": null,
            "content_text": "Somehow our admin did not make bash as a default shell during user creation.I had to type every time bash after login to enable bash like below:Welcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.13.0-30-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage$$It is easy to make bash as default. Run chsh -s /bin/bash or do below:chshPassword:Changing the login shell for &lt;usernme&gt;Enter the new value, or press ENTER for the default\tLogin Shell [/bin/sh]: /bin/bash$Tada! It is done. you can exit and re-login to confirm.",
            "content_html": "<p>Somehow our admin did not make <code class=\"language-plaintext highlighter-rouge\">bash</code> as a default shell during user creation.I had to type every time <code class=\"language-plaintext highlighter-rouge\">bash</code> after login to enable bash like below:</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">Welcome</span> <span class=\"n\">to</span> <span class=\"n\">Ubuntu</span> <span class=\"mi\">20</span><span class=\"p\">.</span><span class=\"mo\">04</span><span class=\"p\">.</span><span class=\"mi\">3</span> <span class=\"n\">LTS</span> <span class=\"p\">(</span><span class=\"n\">GNU</span><span class=\"o\">/</span><span class=\"n\">Linux</span> <span class=\"mi\">5</span><span class=\"p\">.</span><span class=\"mi\">13</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"mi\">30</span><span class=\"o\">-</span><span class=\"n\">generic</span> <span class=\"n\">x86_64</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">Documentation</span><span class=\"o\">:</span>  <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//help.ubuntu.com</span> <span class=\"o\">*</span> <span class=\"n\">Management</span><span class=\"o\">:</span>     <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//landscape.canonical.com</span> <span class=\"o\">*</span> <span class=\"n\">Support</span><span class=\"o\">:</span>        <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"c1\">//ubuntu.com/advantage</span><span class=\"err\">$</span><span class=\"err\">$</span></code></pre></div></div><p>It is easy to make bash as default. Run <code class=\"language-plaintext highlighter-rouge\">chsh -s /bin/bash</code> or do below:</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">chsh</span><span class=\"n\">Password</span><span class=\"o\">:</span><span class=\"n\">Changing</span> <span class=\"n\">the</span> <span class=\"n\">login</span> <span class=\"n\">shell</span> <span class=\"k\">for</span> <span class=\"o\">&lt;</span><span class=\"n\">usernme</span><span class=\"o\">&gt;</span><span class=\"n\">Enter</span> <span class=\"n\">the</span> <span class=\"n\">new</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">or</span> <span class=\"n\">press</span> <span class=\"n\">ENTER</span> <span class=\"k\">for</span> <span class=\"n\">the</span> <span class=\"k\">default</span>\t<span class=\"n\">Login</span> <span class=\"n\">Shell</span> <span class=\"p\">[</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">sh</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">bash</span><span class=\"err\">$</span></code></pre></div></div><p>Tada! It is done. you can exit and re-login to confirm.</p>",
            "url": "https://mrprajesh.co.in/blog/change-default-login-shell-without-root.html",
            
            
            
            "tags": ["linux","shell","bash","sh"],
            
            "date_published": "2022-03-03T11:05:41+05:30",
            "date_modified": "2022-03-03T11:05:41+05:30",
            
                "author": "Rajesh Pandian M"
            
        },
    
        {
            "id": "https://mrprajesh.co.in/blog/english.html",
            "title": "English++",
            "summary": null,
            "content_text": "Some more English words.  pedant(ic): a person who is excessively concerned with minor details and rules or with displaying academic learning.  protagonist:  lead charactor of the play/movie/novel.  antagonist: adversary or villian.  buck tooth: an upper tooth that projects over the lower lip.  mediocre: of only average quality; not very good.Tech  callsite: The line in the source where the function is invoked.  slideware: A tool for making presentation.  digression: a temporary deviation from the main subject in speech or writing",
            "content_html": "<p>Some more English words.</p><ul>  <li><strong>pedant(ic)</strong>: a person who is excessively concerned with minor details and rules or with displaying academic learning.</li>  <li><strong>protagonist</strong>:  lead charactor of the play/movie/novel.</li>  <li><strong>antagonist</strong>: adversary or villian.</li>  <li><strong>buck tooth</strong>: an upper tooth that projects over the lower lip.</li>  <li><strong>mediocre</strong>: of only average quality; not very good.</li></ul><h3 id=\"tech\">Tech</h3><ul>  <li><strong>callsite</strong>: The line in the source where the function is invoked.</li>  <li><strong>slideware</strong>: A tool for making presentation.</li>  <li><strong>digression</strong>: a temporary deviation from the main subject in speech or writing</li></ul>",
            "url": "https://mrprajesh.co.in/blog/english.html",
            
            
            
            
            
            "date_published": "2022-01-12T13:58:02+05:30",
            "date_modified": "2022-01-12T13:58:02+05:30",
            
                "author": "Rajesh Pandian M"
            
        }
    
    ]
}